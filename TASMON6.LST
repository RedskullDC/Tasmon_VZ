0001   0000             ﻿
0002   0000             ROM_KBD_Routine		.equ 0013H	
0003   0000             ROM_DISPLAY_Routine	.equ 001BH	
0004   0000             Delay			.equ 0060H	
0005   0000             Cassette_Off		.equ 01F8H
0006   0000             Select_Cass_Unit	.equ 0212H
0007   0000             CASS_READ_BYTE		.equ 0235H
0008   0000             CASS_WRITE_BYTE		.equ 0264H
0009   0000             Cass_Find_Sync		.equ 0296H
0010   0000             Blink_Asterisk		.equ 022CH
0011   0000             Write_Leader_Sync	.equ 0287H
0012   0000             
0013   0000             restore_regs		.equ 03DDH
0014   0000             sub_3FE			.equ 03FEH	; jumps midway into kbd routine :o(
0015   0000             CONVERT_LCASE		.equ 047BH
0016   0000             OUTPUT_CHAR		.equ 047DH
0017   0000             CHECK_GRAPHIC		.equ 04A6H
0018   0000             PROCESS_CONTROL		.equ 0506H	; process screen handling, control chars. return via $480
0019   0000             ROM_PRT_DRIVER		.equ 058DH
0020   0000             
0021   0000             KBD_ROW_01		.equ 3801H	; keyboard locations
0022   0000             KBD_ROW_40		.equ 3840H
0023   0000             
0024   0000             SCREEN_START		.equ 3C00H	; TRS-80 Screen is 1024 bytes 
0025   0000             SCREEN_LEN		.equ 0400H	; ($400 long on a Model 1)
0026   0000             RAM_START		.equ 4000H	; First location after screen mem. ($7000 on a VZ300)
0027   0000             
0028   0000             SCREEN_OVERFLOW		.equ ((RAM_START >> 8) & 0FFH)	; High byte of RAM START
0029   0000             
0030   0000             ;SCREEN_OVERFLOW	.equ 40H	; High byte of RAM START
0031   0000             SCREEN_LINES		.equ 16		; change for 64x32 screen on Laser310_FPGA
0032   0000             LINE_LEN		.equ 0040H	; 64 chars long on TRS-80
0033   0000             
0034   0000             
0035   0000             L2_VIDEO_DCB		.equ 401DH
0036   0000             NEXT_CHAR_ADD_L2	.equ 4020H
0037   0000             
0038   0000             L2_PRINTER_DCB		.equ 4025H
0039   0000             
0040   0000             KBD_work_area		.equ 4036H
0041   0000             Display_Control		.equ 403DH	; Upper/Lower Case
0042   0000             
0043   0000             RST28_Vector		.equ 400CH
0044   0000             Cursor_ON_OFF		.equ 4022H
0045   0000             MEM_SIZE		.equ 4049H
0046   0000             
0047   0000             DOS_INIT		.equ 4420H	; INIT creates a new file in the directory and opens the DCB for this file. 
0048   0000             DOS_OPEN		.equ 4424H	; OPEN opens the DCB of an existing file
0049   0000             DOS_CLOSE		.equ 4428H	; CLOSE: Closes a file. Updates the directory and then closes the file from any more processing.
0050   0000             
0051   0000             ;-------------------------------------------------------------------------------------------------------
0052   0000             
0053   0000             ; Routines with hardcoded values in original (in addition to references above): 
0054   0000             
0055   0000             ; 610E 21 28 3C                    ld      hl,  SCREEN_START+28h
0056   0000             ; 611A 21 30 3C                    ld      hl,  SCREEN_START+30h
0057   0000             ; 636B 21 28 3C                    ld      hl,  SCREEN_START+28h
0058   0000             ; 6379 21 27 3C                    ld      hl,  SCREEN_START+27h
0059   0000             ; 66F4 01 0F 00                    ld      bc, 15          ; disassemble next *15* instructions
0060   0000             ; 6713 06 1E                       ld      b, 30           ; disassemble previous 30 instructions to go pack a page
0061   0000             ; 67EA 0E 0F                       ld      c, 15           ; Display 15 lines
0062   0000             ; 67FE 11 F0 00                    ld      de, 0F0h        ; '-' means display *previous* page
0063   0000             ; 680A 06 08                       ld      b, 8            ; 8 chars
0064   0000             ; 696D 21 E8 3D                    ld      hl,  SCREEN_START+1E8h
0065   0000             ; 
0066   0000             ; Scroll_savregs:
0067   0000             ; 6984 01 40 00                    ld      bc, 64
0068   0000             ; 698F FE 40                       cp      40h ; '@'       ; Are we off the end of the screen?
0069   0000             ; 699A 21 28 3E                    ld      hl,  SCREEN_START+228h
0070   0000             ; 69A1 01 40 00                    ld      bc, 64
0071   0000             ; 69AF 21 E8 3F                    ld      hl,  SCREEN_START+3E8h
0072   0000             ; 69BA 21 E8 3F                    ld      hl,  SCREEN_START+3E8h
0073   0000             ; 
0074   0000             ; 6A51 3A 40 38                    ld      a, (KBD_ROW_40)
0075   0000             ; 6A7F 3A 40 38                    ld      a, (KBD_ROW_40)
0076   0000             ; 
0077   0000             ; 792E 3A E8 37                    ld      a, (37E8h)
0078   0000             ; 
0079   0000             ; 793B 0E 10                       ld      c, 16           ; 16 lines
0080   0000             ; 793D 06 40                       ld      b, 64           ; 64 chars per line
0081   0000             ; 
0082   0000             ; 79B7 01 01 38                    ld      bc, KBD_ROW_01
0083   0000             
0084   0000             ;-------------------------------------------------------------------------------------------------------
0085   0000             
0086   0000             
0087   8000             .org 8000h
0088   8000             
0089   8000             TASMON_ENTRY:
0090   8000 F3                          di
0091   8001 CD 11 8A                    call    CLEAR_VIDEO
0092   8004 2A 20 40                    ld      hl, (NEXT_CHAR_ADD_L2) ; L2 Video DCB next char address $3C00<=X<=$3FFF
0093   8007 22 A7 9B                    ld      (word_7BA7), hl
0094   800A 31 1C 9C                    ld      sp, a_IXplus
0095   800D AF                          xor     a
0096   800E 32 22 40                    ld      (Cursor_ON_OFF), a
0097   8011 32 B7 9B                    ld      (byte_7BB7), a
0098   8014 CD 4D 86                    call    clear_all_breakpoints
0099   8017 21 C5 9A                    ld      hl, TasmonVer222 ; "TASMON  VER 2.22\n(C) 1981 by Bruce G. "...
0100   801A 3E 01                       ld      a, 1
0101   801C 32 8C 9B                    ld      (dis_DISPLAY_FLG), a
0102   801F CD 6F 90                    call    SHOW_INSTR_HDR
0103   8022 CD B0 8A                    call    SET_EXEC1_to_1  ; default all breakpoints to 1 execution only
0104   8025 CD 65 83                    call    SHOW_REGS
0105   8028 CD 6D 89                    call    SET_PROMPT_POS
0106   802B CD 77 89                    call    SCROLL_SAVEREGS ; save all regs and scroll down
0107   802E             
0108   802E             loc_602E:                               ; CODE XREF: GET_CHAR-B0↓j
0109   802E CD 3A 80                    call    GET_COMMAND
0110   8031 CD 77 89                    call    SCROLL_SAVEREGS ; save all regs and scroll down
0111   8034             
0112   8034             loc_6034:                               ; CODE XREF: GET_CHAR+14↓j
0113   8034 F3                          di
0114   8035 31 1C 9C                    ld      sp, a_IXplus
0115   8038 18 F4                       jr      loc_602E
0116   803A             
0117   803A             ; =============== S U B R O U T I N E =======================================
0118   803A             
0119   803A             
0120   803A             GET_COMMAND:                            ; CODE XREF: GET_CHAR:loc_602E↑p
0121   803A             
0122   803A 3E 5E                       ld      a, 5Eh ; '^'
0123   803C CD 86 9A                    call    TAS_VID_DRIVER
0124   803F 3E 01                       ld      a, 1
0125   8041 32 8C 9B                    ld      (dis_DISPLAY_FLG), a
0126   8044             
0127   8044             unknown_command:                        ; CODE XREF: GET_COMMAND+AB↓j
0128   8044 CD E8 80                    call    GET_CHAR        ; get character, return in A
0129   8047 FE 1F                       cp      1Fh
0130   8049 20 09                       jr      nz, loc_6054
0131   804B CD 11 8A                    call    CLEAR_VIDEO
0132   804E CD 6D 89                    call    SET_PROMPT_POS
0133   8051 C3 65 83                    jp      SHOW_REGS
0134   8054             ; ---------------------------------------------------------------------------
0135   8054             
0136   8054             loc_6054:                               ; CODE XREF: GET_COMMAND+F↑j
0137   8054 FE 49                       cp      'I'
0138   8056 CA 36 87                    jp      z, single_step
0139   8059 FE 47                       cp      'G'
0140   805B CA 58 86                    jp      z, goto
0141   805E FE 44                       cp      'D'
0142   8060 CA E6 86                    jp      z, disassemble
0143   8063 FE 42                       cp      'B'
0144   8065 CA C5 85                    jp      z, breakpoints
0145   8068 FE 43                       cp      'C'
0146   806A CA 27 86                    jp      z, clear_breakpoints
0147   806D FE 4D                       cp      'M'
0148   806F CA A9 84                    jp      z, modify_memory
0149   8072 FE 52                       cp      'R'
0150   8074 CA FF 83                    jp      z, replace_reg_pair
0151   8077 FE 0A                       cp      0Ah
0152   8079 CA 40 87                    jp      z, loc_6740
0153   807C FE 46                       cp      'F'
0154   807E CA 4F 87                    jp      z, find_search_key
0155   8081 FE 41                       cp      'A'
0156   8083 CA D8 87                    jp      z, ascii_dump
0157   8086 FE 48                       cp      'H'
0158   8088 CA CE 87                    jp      z, hex_dump
0159   808B FE 45                       cp      'E'
0160   808D CA 40 88                    jp      z, exit_tasmon
0161   8090 FE 54                       cp      'T'
0162   8092 CA 4C 88                    jp      z, trace
0163   8095 FE 53                       cp      'S'
0164   8097 CA F3 88                    jp      z, subtract_add
0165   809A FE 50                       cp      'P'
0166   809C CA CA 89                    jp      z, disassem_to_printer
0167   809F FE 4C                       cp      'L'
0168   80A1 CA D2 94                    jp      z, load_cmd_file
0169   80A4 FE 57                       cp      'W'
0170   80A6 CA B2 95                    jp      z, write_tape_disk
0171   80A9 FE 09                       cp      9
0172   80AB CA C3 97                    jp      z, loc_77C3
0173   80AE FE 08                       cp      8
0174   80B0 CA DA 97                    jp      z, loc_77DA
0175   80B3 FE 4F                       cp      'O'
0176   80B5 CA D5 92                    jp      z, output_disassembly
0177   80B8 FE 58                       cp      'X'
0178   80BA CA 32 98                    jp      z, relocate_memory
0179   80BD FE 59                       cp      'Y'
0180   80BF CA FD 98                    jp      z, block_move
0181   80C2 FE 5A                       cp      'Z'
0182   80C4 CA 60 9A                    jp      z, set_memory
0183   80C7 FE 56                       cp      'V'
0184   80C9 CA 38 9A                    jp      z, view_file_info
0185   80CC FE 4A                       cp      'J'
0186   80CE CA 1E 87                    jp      z, toggle_restarts
0187   80D1 FE 4B                       cp      'K'
0188   80D3 CA 32 8A                    jp      z, keep_screen
0189   80D6 FE 4E                       cp      'N'
0190   80D8 CA 95 8A                    jp      z, number_or_executions
0191   80DB FE 51                       cp      'Q'             ; new command in V2.22
0192   80DD CA 26 89                    jp      z, Q_command
0193   80E0 FE 55                       cp      'U'
0194   80E2 CA F3 80                    jp      z, return_from_user
0195   80E5 C3 44 80                    jp      unknown_command
0196   80E8             ; End of function GET_COMMAND
0197   80E8             
0198   80E8             
0199   80E8             ; =============== S U B R O U T I N E =======================================
0200   80E8             
0201   80E8             ; get character, return in A
0202   80E8             
0203   80E8             GET_CHAR:                               ; CODE XREF: GET_COMMAND:unknown_command↑p
0204   80E8                                                     ; GET_COMMAND:reg_char_error↓p ...
0205   80E8             
0206   80E8 CD 2E 9A                    call    sub_7A2E
0207   80EB FE 2A                       cp      2Ah ; '*'
0208   80ED CC 27 99                    call    z, SCREEN_DUMP	; dump current screen contents to printer
0209   80F0 FE 01                       cp      1
0210   80F2 C0                          ret     nz
0211   80F3             
0212   80F3             return_from_user:                       ; CODE XREF: GET_COMMAND+A8↑j
0213   80F3                                                     ; sub_60FF+4↓j ...
0214   80F3 31 1C 9C                    ld      sp, a_IXplus
0215   80F6 CD 65 83                    call    SHOW_REGS
0216   80F9 CD 77 89                    call    SCROLL_SAVEREGS ; save all regs and scroll down
0217   80FC C3 34 80                    jp      loc_6034
0218   80FF             
0219   80FF             ; =============== S U B R O U T I N E =======================================
0220   80FF             
0221   80FF             
0222   80FF             sub_60FF:                               ; CODE XREF: sub_6745:loc_6749↓p
0223   80FF 3A EB 9E                    ld      a, (byte_7EEB)
0224   8102 B7                          or      a
0225   8103 20 EE                       jr      nz, return_from_user
0226   8105 2A 08 9B                    ld      hl, (reg_PC)
0227   8108 CD 3F 92                    call    HL_to_HEX
0228   810B CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
0229   810E 21 28 3C                    ld      hl, SCREEN_START+28h	; 3C28h
0230   8111 06 05                       ld      b, 5
0231   8113             
0232   8113             loc_6113:                               ; CODE XREF: sub_60FF+19↓j
0233   8113 7E                          ld      a, (hl)
0234   8114 CD 86 9A                    call    TAS_VID_DRIVER
0235   8117 23                          inc     hl
0236   8118 10 F9                       djnz    loc_6113
0237   811A 21 30 3C                    ld      hl, SCREEN_START+30h	; 3C30h
0238   811D 06 0A                       ld      b, 0Ah
0239   811F             
0240   811F             loc_611F:                               ; CODE XREF: sub_60FF+25↓j
0241   811F 7E                          ld      a, (hl)
0242   8120 CD 86 9A                    call    TAS_VID_DRIVER
0243   8123 23                          inc     hl
0244   8124 10 F9                       djnz    loc_611F
0245   8126 3A 8D 9B                    ld      a, (byte_7B8D)
0246   8129 B7                          or      a
0247   812A 2A 08 9B                    ld      hl, (reg_PC)
0248   812D 20 48                       jr      nz, loc_6177
0249   812F             
0250   812F             loc_612F:                               ; CODE XREF: sub_60FF+FC↓j
0251   812F                                                     ; sub_60FF+14C↓j
0252   812F 3A B4 9B                    ld      a, (byte_7BB4)
0253   8132 47                          ld      b, a
0254   8133 11 AD 9B                    ld      de, byte_7BAD
0255   8136             
0256   8136             loc_6136:                               ; CODE XREF: sub_60FF+3B↓j
0257   8136 7E                          ld      a, (hl)
0258   8137 23                          inc     hl
0259   8138 12                          ld      (de), a
0260   8139 13                          inc     de
0261   813A 10 FA                       djnz    loc_6136
0262   813C 22 94 9B                    ld      (word_7B94), hl
0263   813F 3E CD                       ld      a, 0CDh
0264   8141 12                          ld      (de), a
0265   8142 D5                          push    de
0266   8143 13                          inc     de
0267   8144 21 15 83                    ld      hl, BREAKPOINT_RETURN
0268   8147 7D                          ld      a, l
0269   8148 12                          ld      (de), a
0270   8149 13                          inc     de
0271   814A 7C                          ld      a, h
0272   814B 12                          ld      (de), a
0273   814C 2A 06 9B                    ld      hl, (reg_SP)
0274   814F 2B                          dec     hl
0275   8150 E5                          push    hl
0276   8151 21 AD 9B                    ld      hl, byte_7BAD
0277   8154 22 08 9B                    ld      (reg_PC), hl
0278   8157 CD 92 86                    call    LOAD_BREAKPOINTS ; save existing code, and insert breakpoint traps in target code.
0279   815A CD CC 82                    call    sub_62CC
0280   815D CD C2 86                    call    RESTORE_BREAKPOINTS ; remove breakpoints, and re-insert original code
0281   8160 C1                          pop     bc
0282   8161 D1                          pop     de
0283   8162 2A 08 9B                    ld      hl, (reg_PC)
0284   8165 B7                          or      a
0285   8166 ED 52                       sbc     hl, de
0286   8168 2A 94 9B                    ld      hl, (word_7B94)
0287   816B 28 06                       jr      z, loc_6173
0288   816D 7C                          ld      a, h
0289   816E 02                          ld      (bc), a
0290   816F 0B                          dec     bc
0291   8170 7D                          ld      a, l
0292   8171 02                          ld      (bc), a
0293   8172 C9                          ret
0294   8173             ; ---------------------------------------------------------------------------
0295   8173             
0296   8173             loc_6173:                               ; CODE XREF: sub_60FF+6C↑j
0297   8173 22 08 9B                    ld      (reg_PC), hl
0298   8176 C9                          ret
0299   8177             ; ---------------------------------------------------------------------------
0300   8177             
0301   8177             loc_6177:                               ; CODE XREF: sub_60FF+2E↑j
0302   8177 FE 01                       cp      1
0303   8179 20 09                       jr      nz, loc_6184
0304   817B             
0305   817B             loc_617B:                               ; CODE XREF: sub_60FF+90↓j
0306   817B 23                          inc     hl
0307   817C 5E                          ld      e, (hl)
0308   817D 23                          inc     hl
0309   817E 56                          ld      d, (hl)
0310   817F EB                          ex      de, hl
0311   8180 22 08 9B                    ld      (reg_PC), hl
0312   8183 C9                          ret
0313   8184             ; ---------------------------------------------------------------------------
0314   8184             
0315   8184             loc_6184:                               ; CODE XREF: sub_60FF+7A↑j
0316   8184 FE 02                       cp      2
0317   8186 20 10                       jr      nz, loc_6198
0318   8188 46                          ld      b, (hl)
0319   8189 3A FE 9A                    ld      a, (reg_AF)
0320   818C CD 78 82                    call    sub_6278
0321   818F 20 EA                       jr      nz, loc_617B
0322   8191             
0323   8191             loc_6191:                               ; CODE XREF: sub_60FF+127↓j
0324   8191 23                          inc     hl
0325   8192 23                          inc     hl
0326   8193 23                          inc     hl
0327   8194 22 08 9B                    ld      (reg_PC), hl
0328   8197 C9                          ret
0329   8198             ; ---------------------------------------------------------------------------
0330   8198             
0331   8198             loc_6198:                               ; CODE XREF: sub_60FF+87↑j
0332   8198 FE 03                       cp      3
0333   819A 20 14                       jr      nz, loc_61B0
0334   819C             
0335   819C             loc_619C:                               ; CODE XREF: sub_60FF+BC↓j
0336   819C                                                     ; sub_60FF+D2↓j
0337   819C 23                          inc     hl
0338   819D 22 D4 9E                    ld      (GEN_PTR_16), hl
0339   81A0 AF                          xor     a
0340   81A1 32 8C 9B                    ld      (dis_DISPLAY_FLG), a
0341   81A4 CD F5 91                    call    sub_71F5
0342   81A7 3E 01                       ld      a, 1
0343   81A9 32 8C 9B                    ld      (dis_DISPLAY_FLG), a
0344   81AC 22 08 9B                    ld      (reg_PC), hl
0345   81AF C9                          ret
0346   81B0             ; ---------------------------------------------------------------------------
0347   81B0             
0348   81B0             loc_61B0:                               ; CODE XREF: sub_60FF+9B↑j
0349   81B0 FE 04                       cp      4
0350   81B2 20 0F                       jr      nz, loc_61C3
0351   81B4 3A 01 9B                    ld      a, (reg_BC+1)
0352   81B7 3D                          dec     a
0353   81B8 32 01 9B                    ld      (reg_BC+1), a
0354   81BB 20 DF                       jr      nz, loc_619C
0355   81BD             
0356   81BD             loc_61BD:                               ; CODE XREF: sub_60FF+D4↓j
0357   81BD 23                          inc     hl
0358   81BE 23                          inc     hl
0359   81BF 22 08 9B                    ld      (reg_PC), hl
0360   81C2 C9                          ret
0361   81C3             ; ---------------------------------------------------------------------------
0362   81C3             
0363   81C3             loc_61C3:                               ; CODE XREF: sub_60FF+B3↑j
0364   81C3 FE 05                       cp      5
0365   81C5 20 0E                       jr      nz, loc_61D5
0366   81C7 7E                          ld      a, (hl)
0367   81C8 E6 18                       and     18h
0368   81CA 47                          ld      b, a
0369   81CB 3A FE 9A                    ld      a, (reg_AF)
0370   81CE CD 78 82                    call    sub_6278
0371   81D1 20 C9                       jr      nz, loc_619C
0372   81D3 18 E8                       jr      loc_61BD
0373   81D5             ; ---------------------------------------------------------------------------
0374   81D5             
0375   81D5             loc_61D5:                               ; CODE XREF: sub_60FF+C6↑j
0376   81D5 FE 06                       cp      6
0377   81D7 20 1A                       jr      nz, loc_61F3
0378   81D9 7E                          ld      a, (hl)
0379   81DA FE E9                       cp      0E9h
0380   81DC 20 07                       jr      nz, loc_61E5
0381   81DE 2A 04 9B                    ld      hl, (reg_HL)
0382   81E1             
0383   81E1             loc_61E1:                               ; CODE XREF: sub_60FF+ED↓j
0384   81E1                                                     ; sub_60FF+F2↓j
0385   81E1 22 08 9B                    ld      (reg_PC), hl
0386   81E4 C9                          ret
0387   81E5             ; ---------------------------------------------------------------------------
0388   81E5             
0389   81E5             loc_61E5:                               ; CODE XREF: sub_60FF+DD↑j
0390   81E5 FE DD                       cp      0DDh
0391   81E7 20 05                       jr      nz, loc_61EE
0392   81E9 2A F2 9A                    ld      hl, (reg_IX)	; register IX save area
0393   81EC 18 F3                       jr      loc_61E1
0394   81EE             ; ---------------------------------------------------------------------------
0395   81EE             
0396   81EE             loc_61EE:                               ; CODE XREF: sub_60FF+E8↑j
0397   81EE 2A F4 9A                    ld      hl, (reg_IY)	; register IY save area
0398   81F1 18 EE                       jr      loc_61E1
0399   81F3             ; ---------------------------------------------------------------------------
0400   81F3             
0401   81F3             loc_61F3:                               ; CODE XREF: sub_60FF+D8↑j
0402   81F3 FE 07                       cp      7
0403   81F5 20 22                       jr      nz, loc_6219
0404   81F7             
0405   81F7             loc_61F7:                               ; CODE XREF: sub_60FF+125↓j
0406   81F7 3A 8E 9B                    ld      a, (byte_7B8E)
0407   81FA B7                          or      a
0408   81FB CA 2F 81                    jp      z, loc_612F
0409   81FE 23                          inc     hl
0410   81FF 5E                          ld      e, (hl)
0411   8200 23                          inc     hl
0412   8201 56                          ld      d, (hl)
0413   8202 23                          inc     hl
0414   8203 ED 53 08 9B                 ld      (reg_PC), de
0415   8207 ED 73 92 9B                 ld      (word_7B92), sp
0416   820B ED 7B 06 9B                 ld      sp, (reg_SP)
0417   820F E5                          push    hl
0418   8210 ED 73 06 9B                 ld      (reg_SP), sp
0419   8214 ED 7B 92 9B                 ld      sp, (word_7B92)
0420   8218 C9                          ret
0421   8219             ; ---------------------------------------------------------------------------
0422   8219             
0423   8219             loc_6219:                               ; CODE XREF: sub_60FF+F6↑j
0424   8219 FE 08                       cp      8
0425   821B 20 0C                       jr      nz, loc_6229
0426   821D 46                          ld      b, (hl)
0427   821E 3A FE 9A                    ld      a, (reg_AF)
0428   8221 CD 78 82                    call    sub_6278
0429   8224 20 D1                       jr      nz, loc_61F7
0430   8226 C3 91 81                    jp      loc_6191
0431   8229             ; ---------------------------------------------------------------------------
0432   8229             
0433   8229             loc_6229:                               ; CODE XREF: sub_60FF+11C↑j
0434   8229 FE 09                       cp      9
0435   822B 20 16                       jr      nz, loc_6243
0436   822D             
0437   822D             loc_622D:                               ; CODE XREF: sub_60FF+172↓j
0438   822D ED 73 92 9B                 ld      (word_7B92), sp
0439   8231 ED 7B 06 9B                 ld      sp, (reg_SP)
0440   8235 D1                          pop     de
0441   8236 ED 73 06 9B                 ld      (reg_SP), sp
0442   823A ED 53 08 9B                 ld      (reg_PC), de
0443   823E ED 7B 92 9B                 ld      sp, (word_7B92)
0444   8242 C9                          ret
0445   8243             ; ---------------------------------------------------------------------------
0446   8243             
0447   8243             loc_6243:                               ; CODE XREF: sub_60FF+12C↑j
0448   8243 FE 0B                       cp      0Bh
0449   8245 20 23                       jr      nz, loc_626A
0450   8247 3A B8 9B                    ld      a, (RESTARTS_STYLE)
0451   824A B7                          or      a
0452   824B CA 2F 81                    jp      z, loc_612F
0453   824E 7E                          ld      a, (hl)
0454   824F E6 38                       and     38h ; '8'
0455   8251 ED 73 92 9B                 ld      (word_7B92), sp
0456   8255 ED 7B 06 9B                 ld      sp, (reg_SP)
0457   8259 23                          inc     hl
0458   825A E5                          push    hl
0459   825B ED 73 06 9B                 ld      (reg_SP), sp
0460   825F ED 7B 92 9B                 ld      sp, (word_7B92)
0461   8263 6F                          ld      l, a
0462   8264 26 00                       ld      h, 0
0463   8266 22 08 9B                    ld      (reg_PC), hl
0464   8269 C9                          ret
0465   826A             ; ---------------------------------------------------------------------------
0466   826A             
0467   826A             loc_626A:                               ; CODE XREF: sub_60FF+146↑j
0468   826A 46                          ld      b, (hl)
0469   826B 3A FE 9A                    ld      a, (reg_AF)
0470   826E CD 78 82                    call    sub_6278
0471   8271 20 BA                       jr      nz, loc_622D
0472   8273 23                          inc     hl
0473   8274 22 08 9B                    ld      (reg_PC), hl
0474   8277 C9                          ret
0475   8278             ; End of function sub_60FF
0476   8278             
0477   8278             
0478   8278             ; =============== S U B R O U T I N E =======================================
0479   8278             
0480   8278             
0481   8278             sub_6278:                               ; CODE XREF: sub_60FF+8D↑p
0482   8278                                                     ; sub_60FF+CF↑p ...
0483   8278 4F                          ld      c, a
0484   8279 78                          ld      a, b
0485   827A E6 38                       and     38h ; '8'
0486   827C FE 00                       cp      0
0487   827E 20 06                       jr      nz, loc_6286
0488   8280 CB 71                       bit     6, c
0489   8282 28 44                       jr      z, loc_62C8
0490   8284 18 40                       jr      loc_62C6
0491   8286             ; ---------------------------------------------------------------------------
0492   8286             
0493   8286             loc_6286:                               ; CODE XREF: sub_6278+6↑j
0494   8286 FE 08                       cp      8
0495   8288 20 06                       jr      nz, loc_6290
0496   828A CB 71                       bit     6, c
0497   828C 20 3A                       jr      nz, loc_62C8
0498   828E 18 36                       jr      loc_62C6
0499   8290             ; ---------------------------------------------------------------------------
0500   8290             
0501   8290             loc_6290:                               ; CODE XREF: sub_6278+10↑j
0502   8290 FE 10                       cp      10h
0503   8292 20 06                       jr      nz, loc_629A
0504   8294 CB 41                       bit     0, c
0505   8296 28 30                       jr      z, loc_62C8
0506   8298 18 2C                       jr      loc_62C6
0507   829A             ; ---------------------------------------------------------------------------
0508   829A             
0509   829A             loc_629A:                               ; CODE XREF: sub_6278+1A↑j
0510   829A FE 18                       cp      18h
0511   829C 20 06                       jr      nz, loc_62A4
0512   829E CB 41                       bit     0, c
0513   82A0 20 26                       jr      nz, loc_62C8
0514   82A2 18 22                       jr      loc_62C6
0515   82A4             ; ---------------------------------------------------------------------------
0516   82A4             
0517   82A4             loc_62A4:                               ; CODE XREF: sub_6278+24↑j
0518   82A4 FE 20                       cp      20h ; ' '
0519   82A6 20 06                       jr      nz, loc_62AE
0520   82A8 CB 51                       bit     2, c
0521   82AA 28 1C                       jr      z, loc_62C8
0522   82AC 18 18                       jr      loc_62C6
0523   82AE             ; ---------------------------------------------------------------------------
0524   82AE             
0525   82AE             loc_62AE:                               ; CODE XREF: sub_6278+2E↑j
0526   82AE FE 28                       cp      28h ; '('
0527   82B0 20 06                       jr      nz, loc_62B8
0528   82B2 CB 51                       bit     2, c
0529   82B4 20 12                       jr      nz, loc_62C8
0530   82B6 18 0E                       jr      loc_62C6
0531   82B8             ; ---------------------------------------------------------------------------
0532   82B8             
0533   82B8             loc_62B8:                               ; CODE XREF: sub_6278+38↑j
0534   82B8 FE 30                       cp      30h ; '0'
0535   82BA 20 06                       jr      nz, loc_62C2
0536   82BC CB 79                       bit     7, c
0537   82BE 28 08                       jr      z, loc_62C8
0538   82C0 18 04                       jr      loc_62C6
0539   82C2             ; ---------------------------------------------------------------------------
0540   82C2             
0541   82C2             loc_62C2:                               ; CODE XREF: sub_6278+42↑j
0542   82C2 CB 79                       bit     7, c
0543   82C4 20 02                       jr      nz, loc_62C8
0544   82C6             
0545   82C6             loc_62C6:                               ; CODE XREF: sub_6278+C↑j
0546   82C6                                                     ; sub_6278+16↑j ...
0547   82C6 AF                          xor     a
0548   82C7 C9                          ret
0549   82C8             ; ---------------------------------------------------------------------------
0550   82C8             
0551   82C8             loc_62C8:                               ; CODE XREF: sub_6278+A↑j
0552   82C8                                                     ; sub_6278+14↑j ...
0553   82C8 3E 01                       ld      a, 1
0554   82CA B7                          or      a
0555   82CB C9                          ret
0556   82CC             ; End of function sub_6278
0557   82CC             
0558   82CC             
0559   82CC             ; =============== S U B R O U T I N E =======================================
0560   82CC             
0561   82CC             
0562   82CC             sub_62CC:                               ; CODE XREF: sub_60FF+5B↑p
0563   82CC                                                     ; GET_COMMAND+62A↓p
0564   82CC ED 73 92 9B                 ld      (word_7B92), sp
0565   82D0 31 F2 9A                    ld      sp, USER_REGS
0566   82D3 2A A7 9B                    ld      hl, (word_7BA7)
0567   82D6 22 20 40                    ld      (NEXT_CHAR_ADD_L2), hl ; L2 Video DCB next char address $3C00<=X<=$3FFF
0568   82D9 3A B7 9B                    ld      a, (byte_7BB7)
0569   82DC 32 22 40                    ld      (Cursor_ON_OFF), a
0570   82DF 3A BB 9B                    ld      a, (KEEP_SCREEN_STATE) ; 0 = keep screen off, 1 = keep screen on
0571   82E2 B7                          or      a
0572   82E3 28 0B                       jr      z, loc_62F0
0573   82E5 11 00 3C                    ld      de, SCREEN_START
0574   82E8 2A B9 9B                    ld      hl, (USER_SCREEN_ptr) ; ptr to user supplied $400 byte screen area
0575   82EB 01 00 04                    ld      bc, SCREEN_LEN		; 400h
0576   82EE ED B0                       ldir
0577   82F0             
0578   82F0             loc_62F0:                               ; CODE XREF: sub_62CC+17↑j
0579   82F0 DD E1                       pop     ix
0580   82F2 FD E1                       pop     iy
0581   82F4 F1                          pop     af
0582   82F5 C1                          pop     bc
0583   82F6 D1                          pop     de
0584   82F7 E1                          pop     hl
0585   82F8 D9                          exx
0586   82F9 08                          ex      af, af'
0587   82FA F1                          pop     af
0588   82FB C1                          pop     bc
0589   82FC D1                          pop     de
0590   82FD E1                          pop     hl
0591   82FE 22 D4 9E                    ld      (GEN_PTR_16), hl
0592   8301 E1                          pop     hl
0593   8302 22 D6 9E                    ld      (dis_DISASSEM_START), hl
0594   8305 E1                          pop     hl
0595   8306 22 D8 9E                    ld      (dis_NUM_INSTRS), hl
0596   8309 ED 7B D6 9E                 ld      sp, (dis_DISASSEM_START)
0597   830D 2A D8 9E                    ld      hl, (dis_NUM_INSTRS)
0598   8310 E5                          push    hl
0599   8311 2A D4 9E                    ld      hl, (GEN_PTR_16)
0600   8314 C9                          ret
0601   8315             ; End of function sub_62CC
0602   8315             
0603   8315             ; ---------------------------------------------------------------------------
0604   8315             
0605   8315             BREAKPOINT_RETURN:                      ; DATA XREF: sub_60FF+45↑o
0606   8315                                                     ; LOAD_BREAKPOINTS+1E↓o
0607   8315 ED 73 A4 9B                 ld      (word_7BA4), sp
0608   8319 31 06 9B                    ld      sp, reg_SP
0609   831C E5                          push    hl
0610   831D 2A 20 40                    ld      hl, (NEXT_CHAR_ADD_L2) ; L2 Video DCB next char address $3C00<=X<=$3FFF
0611   8320 22 A7 9B                    ld      (word_7BA7), hl
0612   8323 D5                          push    de
0613   8324 C5                          push    bc
0614   8325 F5                          push    af
0615   8326 08                          ex      af, af'
0616   8327 D9                          exx
0617   8328 E5                          push    hl
0618   8329 D5                          push    de
0619   832A C5                          push    bc
0620   832B F5                          push    af
0621   832C FD E5                       push    iy
0622   832E DD E5                       push    ix
0623   8330 ED 7B A4 9B                 ld      sp, (word_7BA4)
0624   8334 E1                          pop     hl
0625   8335 2B                          dec     hl
0626   8336 2B                          dec     hl
0627   8337 2B                          dec     hl
0628   8338 22 08 9B                    ld      (reg_PC), hl
0629   833B ED 73 06 9B                 ld      (reg_SP), sp
0630   833F ED 7B 92 9B                 ld      sp, (word_7B92)
0631   8343 2A A9 9B                    ld      hl, (NEXT_CHAR_ADD_TM)
0632   8346 22 20 40                    ld      (NEXT_CHAR_ADD_L2), hl ; L2 Video DCB next char address $3C00<=X<=$3FFF
0633   8349 3A 22 40                    ld      a, (Cursor_ON_OFF)
0634   834C 32 B7 9B                    ld      (byte_7BB7), a
0635   834F AF                          xor     a
0636   8350 32 22 40                    ld      (Cursor_ON_OFF), a
0637   8353 3A BB 9B                    ld      a, (KEEP_SCREEN_STATE) ; 0 = keep screen off, 1 = keep screen on
0638   8356 B7                          or      a
0639   8357 C8                          ret     z
0640   8358 21 00 3C                    ld      hl, SCREEN_START
0641   835B 01 00 04                    ld      bc, SCREEN_LEN		; 400h
0642   835E ED 5B B9 9B                 ld      de, (USER_SCREEN_ptr) ; ptr to user supplied $400 byte screen area
0643   8362 ED B0                       ldir
0644   8364 C9                          ret
0645   8365             
0646   8365             ; =============== S U B R O U T I N E =======================================
0647   8365             
0648   8365             
0649   8365             SHOW_REGS:                              ; CODE XREF: RAM:6025↑p
0650   8365                                                     ; GET_COMMAND+17↑j ...
0651   8365 2A A9 9B                    ld      hl, (NEXT_CHAR_ADD_TM)
0652   8368 22 8F 9B                    ld      (SAVE_CURSOR), hl
0653   836B 21 28 3C                    ld      hl, SCREEN_START+28h	; 3C28h
0654   836E 22 20 40                    ld      (NEXT_CHAR_ADD_L2), hl ; L2 Video DCB next char address $3C00<=X<=$3FFF
0655   8371 22 A9 9B                    ld      (NEXT_CHAR_ADD_TM), hl
0656   8374 3E 1E                       ld      a, 1Eh
0657   8376 CD 86 9A                    call    TAS_VID_DRIVER
0658   8379 21 27 3C                    ld      hl, SCREEN_START+27h	; 3C27h
0659   837C 22 20 40                    ld      (NEXT_CHAR_ADD_L2), hl ; L2 Video DCB next char address $3C00<=X<=$3FFF
0660   837F 2A 08 9B                    ld      hl, (reg_PC)
0661   8382 01 01 00                    ld      bc, 1           ; disassemble *1* instruction
0662   8385 3E 01                       ld      a, 1
0663   8387 32 A6 9B                    ld      (byte_7BA6), a
0664   838A CD 0C 8B                    call    DISASSEMBLE
0665   838D 32 B4 9B                    ld      (byte_7BB4), a
0666   8390 CD 77 89                    call    SCROLL_SAVEREGS ; save all regs and scroll down
0667   8393 AF                          xor     a
0668   8394 32 A6 9B                    ld      (byte_7BA6), a
0669   8397 21 0A 9B                    ld      hl, REG_ASCII_LAYOUT ; IX IY AF' BC' DE' HL'  AF BC DE HL SP PC
0670   839A 11 F2 9A                    ld      de, USER_REGS   ; user register save area
0671   839D ED 53 D4 9E                 ld      (GEN_PTR_16), de
0672   83A1             
0673   83A1             show_reg_cont: 
0674   83A1 06 04                       ld      b, 4		; 4 bytes of register name displayed
0675   83A3 7E          reg_hdr:        ld      a, (hl)
0676   83A4 23                          inc     hl
0677   83A5 CD 86 9A                    call    TAS_VID_DRIVER
0678   83A8 10 F9                       djnz    reg_hdr		
0679   83AA EB                          ex      de, hl
0680   83AB CD 73 91                    call    sub_7173
0681   83AE CD 3B 91                    call    inc_PTR_16
0682   83B1 EB                          ex      de, hl
0683   83B2 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
0684   83B5 CD 86 9A                    call    TAS_VID_DRIVER
0685   83B8 2B                          dec     hl
0686   83B9 7E                          ld      a, (hl)
0687   83BA 23                          inc     hl
0688   83BB FE 80                       cp      80h
0689   83BD 20 E2                       jr      nz, show_reg_cont
0690   83BF CD 77 89                    call    SCROLL_SAVEREGS		; save all regs and scroll down
0691   83C2 7E                          ld      a, (hl)
0692   83C3 FE 80                       cp      80h			; Double 80h signifies end of reg hdr
0693   83C5 20 DA                       jr      nz, show_reg_cont
0694   83C7 06 08                       ld      b, 8
0695   83C9 3A FE 9A                    ld      a, (reg_AF)  ; LD a with saved F register
0696   83CC 21 7A 9B                    ld      hl, FLAGS		; flags in display format
0697   83CF             
0698   83CF             flags_continue:					; CODE XREF: SHOW_REGS+78↓j
0699   83CF E5                          push    hl
0700   83D0 17                          rla
0701   83D1 38 01                       jr      c, flag_set
0702   83D3 23                          inc     hl              ; flag not set. show '-' instead
0703   83D4             
0704   83D4             flag_set:                               ; CODE XREF: SHOW_REGS+6C↑j
0705   83D4 4F                          ld      c, a
0706   83D5 7E                          ld      a, (hl)
0707   83D6 E1                          pop     hl
0708   83D7 23                          inc     hl
0709   83D8 23                          inc     hl
0710   83D9 CD 86 9A                    call    TAS_VID_DRIVER
0711   83DC 79                          ld      a, c
0712   83DD 10 F0                       djnz    flags_continue
0713   83DF CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
0714   83E2 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
0715   83E5 21 95 9C                    ld      hl, HL_ascii    ; Text for (HL)
0716   83E8 CD 6F 90                    call    SHOW_INSTR_HDR
0717   83EB CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
0718   83EE CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
0719   83F1 2A 04 9B                    ld      hl, (reg_HL)
0720   83F4 7E                          ld      a, (hl)
0721   83F5 CD 47 91                    call    sub_7147
0722   83F8 2A 8F 9B                    ld      hl, (SAVE_CURSOR)
0723   83FB 22 A9 9B                    ld      (NEXT_CHAR_ADD_TM), hl
0724   83FE C9                          ret
0725   83FF             
0726   83FF             ; ---------------------------------------------------------------------------
0727   83FF             
0728   83FF             replace_reg_pair:                       ; CODE XREF: GET_COMMAND+3A↑j
0729   83FF CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
0730   8402             
0731   8402             reg_char_error:                         ; CODE XREF: GET_COMMAND+3E5↓j
0732   8402 CD E8 80                    call    GET_CHAR        ; get character, return in A
0733   8405 FE 50                       cp      'P'
0734   8407 28 21                       jr      z, replace_PC
0735   8409 FE 53                       cp      'S'
0736   840B 28 26                       jr      z, replace_SP
0737   840D FE 49                       cp      'I'
0738   840F 28 2B                       jr      z, replace_IX_IY
0739   8411 FE 41                       cp      'A'
0740   8413 28 3D                       jr      z, replace_AF
0741   8415 FE 42                       cp      'B'
0742   8417 28 42                       jr      z, replace_BC
0743   8419 FE 44                       cp      'D'
0744   841B 28 47                       jr      z, replace_DE
0745   841D FE 48                       cp      'H'
0746   841F 20 E1                       jr      nz, reg_char_error
0747   8421 CD 86 9A                    call    TAS_VID_DRIVER
0748   8424 06 12                       ld      b, 12h
0749   8426 3E 4C                       ld      a, 4Ch ; 'L'
0750   8428 18 41                       jr      loc_646B
0751   842A             ; ---------------------------------------------------------------------------
0752   842A             
0753   842A             replace_PC:                             ; CODE XREF: GET_COMMAND+3CD↑j
0754   842A CD 86 9A                    call    TAS_VID_DRIVER
0755   842D 06 16                       ld      b, 16h
0756   842F 3E 43                       ld      a, 43h ; 'C'
0757   8431 18 5A                       jr      loc_648D
0758   8433             ; ---------------------------------------------------------------------------
0759   8433             
0760   8433             replace_SP:                             ; CODE XREF: GET_COMMAND+3D1↑j
0761   8433 CD 86 9A                    call    TAS_VID_DRIVER
0762   8436 06 14                       ld      b, 14h
0763   8438 3E 50                       ld      a, 50h ; 'P'
0764   843A 18 51                       jr      loc_648D
0765   843C             ; ---------------------------------------------------------------------------
0766   843C             
0767   843C             replace_IX_IY:                          ; CODE XREF: GET_COMMAND+3D5↑j
0768   843C CD 86 9A                    call    TAS_VID_DRIVER
0769   843F             
0770   843F             loc_643F:                               ; CODE XREF: GET_COMMAND+40E↓j
0771   843F CD E8 80                    call    GET_CHAR        ; get character, return in A
0772   8442 FE 58                       cp      58h ; 'X'
0773   8444 28 08                       jr      z, loc_644E
0774   8446 FE 59                       cp      59h ; 'Y'
0775   8448 20 F5                       jr      nz, loc_643F
0776   844A 06 02                       ld      b, 2
0777   844C 18 3F                       jr      loc_648D
0778   844E             ; ---------------------------------------------------------------------------
0779   844E             
0780   844E             loc_644E:                               ; CODE XREF: GET_COMMAND+40A↑j
0781   844E 06 00                       ld      b, 0
0782   8450 18 3B                       jr      loc_648D
0783   8452             ; ---------------------------------------------------------------------------
0784   8452             
0785   8452             replace_AF:                             ; CODE XREF: GET_COMMAND+3D9↑j
0786   8452 CD 86 9A                    call    TAS_VID_DRIVER
0787   8455 06 0C                       ld      b, 0Ch
0788   8457 3E 46                       ld      a, 46h ; 'F'
0789   8459 18 10                       jr      loc_646B
0790   845B             ; ---------------------------------------------------------------------------
0791   845B             
0792   845B             replace_BC:                             ; CODE XREF: GET_COMMAND+3DD↑j
0793   845B CD 86 9A                    call    TAS_VID_DRIVER
0794   845E 06 0E                       ld      b, 0Eh
0795   8460 3E 43                       ld      a, 43h ; 'C'
0796   8462 18 07                       jr      loc_646B
0797   8464             ; ---------------------------------------------------------------------------
0798   8464             
0799   8464             replace_DE:                             ; CODE XREF: GET_COMMAND+3E1↑j
0800   8464 CD 86 9A                    call    TAS_VID_DRIVER
0801   8467 06 10                       ld      b, 10h
0802   8469 3E 45                       ld      a, 45h ; 'E'
0803   846B             
0804   846B             loc_646B:                               ; CODE XREF: GET_COMMAND+3EE↑j
0805   846B                                                     ; GET_COMMAND+41F↑j ...
0806   846B CD 86 9A                    call    TAS_VID_DRIVER
0807   846E             
0808   846E             loc_646E:                               ; CODE XREF: GET_COMMAND+43B↓j
0809   846E CD AA 85                    call    GET_HEX_CHAR
0810   8471 28 0F                       jr      z, loc_6482
0811   8473 FE 27                       cp      27h ; '''       ; alt reg
0812   8475 20 F7                       jr      nz, loc_646E
0813   8477 CD 86 9A                    call    TAS_VID_DRIVER
0814   847A 78                          ld      a, b
0815   847B D6 08                       sub     8
0816   847D 47                          ld      b, a
0817   847E 3E 20                       ld      a, 20h ; ' '
0818   8480 18 10                       jr      loc_6492
0819   8482             ; ---------------------------------------------------------------------------
0820   8482             
0821   8482             loc_6482:                               ; CODE XREF: GET_COMMAND+437↑j
0822   8482 F5                          push    af
0823   8483 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
0824   8486 F1                          pop     af
0825   8487 C5                          push    bc
0826   8488 CD 6C 85                    call    HEX_VAL_to_HL   ; 4 byte hex value to HL register
0827   848B 18 0C                       jr      loc_6499
0828   848D             ; ---------------------------------------------------------------------------
0829   848D             
0830   848D             loc_648D:                               ; CODE XREF: GET_COMMAND+3F7↑j
0831   848D                                                     ; GET_COMMAND+400↑j ...
0832   848D CD 86 9A                    call    TAS_VID_DRIVER
0833   8490 3E 20                       ld      a, 20h ; ' '
0834   8492             
0835   8492             loc_6492:                               ; CODE XREF: GET_COMMAND+446↑j
0836   8492 CD 86 9A                    call    TAS_VID_DRIVER
0837   8495 C5                          push    bc
0838   8496 CD 67 85                    call    HEX_to_HL       ; get 4 digit hex value into the HL register
0839   8499             
0840   8499             loc_6499:                               ; CODE XREF: GET_COMMAND+451↑j
0841   8499 E5                          push    hl
0842   849A D1                          pop     de
0843   849B C1                          pop     bc
0844   849C 48                          ld      c, b
0845   849D 06 00                       ld      b, 0
0846   849F 21 F2 9A                    ld      hl, USER_REGS   ; user register save area
0847   84A2 09                          add     hl, bc
0848   84A3 73                          ld      (hl), e
0849   84A4 23                          inc     hl
0850   84A5 72                          ld      (hl), d
0851   84A6 C3 65 83                    jp      SHOW_REGS
0852   84A9             ; ---------------------------------------------------------------------------
0853   84A9             
0854   84A9             modify_memory:                          ; CODE XREF: GET_COMMAND+35↑j
0855   84A9 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
0856   84AC             
0857   84AC             loc_64AC:                               ; CODE XREF: GET_COMMAND+47B↓j
0858   84AC CD E8 80                    call    GET_CHAR        ; get character, return in A
0859   84AF FE 41                       cp      41h ; 'A'
0860   84B1 28 0A                       jr      z, loc_64BD
0861   84B3 FE 48                       cp      48h ; 'H'
0862   84B5 20 F5                       jr      nz, loc_64AC
0863   84B7 CD 86 9A                    call    TAS_VID_DRIVER
0864   84BA AF                          xor     a
0865   84BB 18 05                       jr      loc_64C2
0866   84BD             ; ---------------------------------------------------------------------------
0867   84BD             
0868   84BD             loc_64BD:                               ; CODE XREF: GET_COMMAND+477↑j
0869   84BD CD 86 9A                    call    TAS_VID_DRIVER
0870   84C0 3E 01                       ld      a, 1
0871   84C2             
0872   84C2             loc_64C2:                               ; CODE XREF: GET_COMMAND+481↑j
0873   84C2 32 B5 9B                    ld      (HEX_ASCII_FLAG), a
0874   84C5 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
0875   84C8 CD 85 8A                    call    GET_HEX_ADDRESS
0876   84CB 18 03                       jr      loc_64D0
0877   84CD             ; ---------------------------------------------------------------------------
0878   84CD             
0879   84CD             loc_64CD:                               ; CODE XREF: GET_COMMAND+4C7↓j
0880   84CD CD 3F 92                    call    HL_to_HEX
0881   84D0             
0882   84D0             loc_64D0:                               ; CODE XREF: GET_COMMAND+491↑j
0883   84D0 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
0884   84D3 7E                          ld      a, (hl)
0885   84D4 FE 20                       cp      20h ; ' '
0886   84D6 38 0C                       jr      c, loc_64E4
0887   84D8 FE 7F                       cp      7Fh
0888   84DA 30 08                       jr      nc, loc_64E4
0889   84DC CD 86 9A                    call    TAS_VID_DRIVER
0890   84DF CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
0891   84E2 18 06                       jr      loc_64EA
0892   84E4             ; ---------------------------------------------------------------------------
0893   84E4             
0894   84E4             loc_64E4:                               ; CODE XREF: GET_COMMAND+49C↑j
0895   84E4                                                     ; GET_COMMAND+4A0↑j
0896   84E4 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
0897   84E7 CD 86 9A                    call    TAS_VID_DRIVER
0898   84EA             
0899   84EA             loc_64EA:                               ; CODE XREF: GET_COMMAND+4A8↑j
0900   84EA 7E                          ld      a, (hl)
0901   84EB CD 47 91                    call    sub_7147
0902   84EE CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
0903   84F1             
0904   84F1             loc_64F1:                               ; CODE XREF: GET_COMMAND+4BB↓j
0905   84F1                                                     ; GET_COMMAND+4DE↓j ...
0906   84F1 CD E8 80                    call    GET_CHAR        ; get character, return in A
0907   84F4 B7                          or      a
0908   84F5 28 FA                       jr      z, loc_64F1
0909   84F7 FE 0A                       cp      0Ah
0910   84F9 20 08                       jr      nz, loc_6503
0911   84FB             
0912   84FB             loc_64FB:                               ; CODE XREF: GET_COMMAND+519↓j
0913   84FB 23                          inc     hl
0914   84FC             
0915   84FC             loc_64FC:                               ; CODE XREF: GET_COMMAND+4CE↓j
0916   84FC E5                          push    hl
0917   84FD CD 77 89                    call    SCROLL_SAVEREGS ; save all regs and scroll down
0918   8500 E1                          pop     hl
0919   8501 18 CA                       jr      loc_64CD
0920   8503             ; ---------------------------------------------------------------------------
0921   8503             
0922   8503             loc_6503:                               ; CODE XREF: GET_COMMAND+4BF↑j
0923   8503 FE 5B                       cp      5Bh ; '['
0924   8505 20 03                       jr      nz, loc_650A
0925   8507 2B                          dec     hl
0926   8508 18 F2                       jr      loc_64FC
0927   850A             ; ---------------------------------------------------------------------------
0928   850A             
0929   850A             loc_650A:                               ; CODE XREF: GET_COMMAND+4CB↑j
0930   850A F5                          push    af
0931   850B 3A B5 9B                    ld      a, (HEX_ASCII_FLAG)
0932   850E B7                          or      a
0933   850F 28 0E                       jr      z, loc_651F
0934   8511 F1                          pop     af
0935   8512 FE 0D                       cp      0Dh
0936   8514 28 37                       jr      z, loc_654D
0937   8516 FE 20                       cp      20h ; ' '
0938   8518 38 D7                       jr      c, loc_64F1
0939   851A CD 86 9A                    call    TAS_VID_DRIVER
0940   851D 18 2E                       jr      loc_654D
0941   851F             ; ---------------------------------------------------------------------------
0942   851F             
0943   851F             loc_651F:                               ; CODE XREF: GET_COMMAND+4D5↑j
0944   851F F1                          pop     af
0945   8520 FE 30                       cp      30h ; '0'
0946   8522 38 CD                       jr      c, loc_64F1
0947   8524 FE 47                       cp      47h ; 'G'
0948   8526 30 C9                       jr      nc, loc_64F1
0949   8528 FE 41                       cp      41h ; 'A'
0950   852A 30 06                       jr      nc, loc_6532
0951   852C FE 3A                       cp      3Ah ; ':'
0952   852E 38 02                       jr      c, loc_6532
0953   8530 18 BF                       jr      loc_64F1
0954   8532             ; ---------------------------------------------------------------------------
0955   8532             
0956   8532             loc_6532:                               ; CODE XREF: GET_COMMAND+4F0↑j
0957   8532                                                     ; GET_COMMAND+4F4↑j
0958   8532 CD 86 9A                    call    TAS_VID_DRIVER
0959   8535 CD 55 85                    call    Adjust_AF
0960   8538 CB 27                       sla     a
0961   853A CB 27                       sla     a
0962   853C CB 27                       sla     a
0963   853E CB 27                       sla     a
0964   8540 4F                          ld      c, a
0965   8541             
0966   8541             loc_6541:                               ; CODE XREF: GET_COMMAND+50A↓j
0967   8541 CD AA 85                    call    GET_HEX_CHAR
0968   8544 20 FB                       jr      nz, loc_6541
0969   8546 CD 86 9A                    call    TAS_VID_DRIVER
0970   8549 CD 55 85                    call    Adjust_AF
0971   854C 81                          add     a, c
0972   854D             
0973   854D             loc_654D:                               ; CODE XREF: GET_COMMAND+4DA↑j
0974   854D                                                     ; GET_COMMAND+4E3↑j
0975   854D 77                          ld      (hl), a
0976   854E E5                          push    hl
0977   854F CD 65 83                    call    SHOW_REGS
0978   8552 E1                          pop     hl
0979   8553 18 A6                       jr      loc_64FB
0980   8555             
0981   8555             ; =============== S U B R O U T I N E =======================================
0982   8555             
0983   8555             
0984   8555             Adjust_AF:                              ; CODE XREF: GET_COMMAND+4FB↑p
0985   8555                                                     ; GET_COMMAND+50F↑p ...
0986   8555 D6 30                       sub     30h ; '0'
0987   8557 FE 0A                       cp      0Ah
0988   8559 D8                          ret     c
0989   855A D6 07                       sub     7
0990   855C C9                          ret
0991   855D             ; End of function Adjust_AF
0992   855D             
0993   855D             
0994   855D             ; =============== S U B R O U T I N E =======================================
0995   855D             
0996   855D             
0997   855D             sub_655D:                               ; CODE XREF: DISASSEMBLE+9E↓p
0998   855D 3E 1A                       ld      a, 1Ah
0999   855F CD 86 9A                    call    TAS_VID_DRIVER
1000   8562 3E 1D                       ld      a, 1Dh
1001   8564 C3 86 9A                    jp      TAS_VID_DRIVER
1002   8567             ; End of function sub_655D
1003   8567             
1004   8567             
1005   8567             ; =============== S U B R O U T I N E =======================================
1006   8567             
1007   8567             ; get 4 digit hex value into the HL register
1008   8567             
1009   8567             HEX_to_HL:                              ; CODE XREF: GET_COMMAND+45C↑p
1010   8567                                                     ; HEX_to_HL+3↓j ...
1011   8567 CD AA 85                    call    GET_HEX_CHAR
1012   856A 20 FB                       jr      nz, HEX_to_HL   ; get 4 digit hex value into the HL register
1013   856C             ; End of function HEX_to_HL
1014   856C             
1015   856C             
1016   856C             ; =============== S U B R O U T I N E =======================================
1017   856C             
1018   856C             ; 4 byte hex value to HL register
1019   856C             
1020   856C             HEX_VAL_to_HL:                          ; CODE XREF: GET_COMMAND+44E↑p
1021   856C                                                     ; GET_COMMAND:loc_675D↓p ...
1022   856C CD 86 9A                    call    TAS_VID_DRIVER
1023   856F CD 55 85                    call    Adjust_AF
1024   8572 CB 27                       sla     a
1025   8574 CB 27                       sla     a
1026   8576 CB 27                       sla     a
1027   8578 CB 27                       sla     a
1028   857A 67                          ld      h, a
1029   857B             
1030   857B             loc_657B:                               ; CODE XREF: HEX_VAL_to_HL+12↓j
1031   857B CD AA 85                    call    GET_HEX_CHAR
1032   857E 20 FB                       jr      nz, loc_657B
1033   8580 CD 86 9A                    call    TAS_VID_DRIVER
1034   8583 CD 55 85                    call    Adjust_AF
1035   8586 84                          add     a, h
1036   8587 67                          ld      h, a
1037   8588             ; End of function HEX_VAL_to_HL
1038   8588             
1039   8588             
1040   8588             ; =============== S U B R O U T I N E =======================================
1041   8588             
1042   8588             ; 2 byte hex value to L register (also in A)
1043   8588             
1044   8588             HEX_VAL_to_L:                           ; CODE XREF: HEX_VAL_to_L+3↓j
1045   8588                                                     ; GET_COMMAND+A9A↓p ...
1046   8588 CD AA 85                    call    GET_HEX_CHAR
1047   858B 20 FB                       jr      nz, HEX_VAL_to_L ; 2 byte hex value to L register (also in A)
1048   858D CD 86 9A                    call    TAS_VID_DRIVER
1049   8590 CD 55 85                    call    Adjust_AF
1050   8593 CB 27                       sla     a
1051   8595 CB 27                       sla     a
1052   8597 CB 27                       sla     a
1053   8599 CB 27                       sla     a
1054   859B 6F                          ld      l, a
1055   859C             
1056   859C             loc_659C:                               ; CODE XREF: HEX_VAL_to_L+17↓j
1057   859C CD AA 85                    call    GET_HEX_CHAR
1058   859F 20 FB                       jr      nz, loc_659C
1059   85A1 CD 86 9A                    call    TAS_VID_DRIVER
1060   85A4 CD 55 85                    call    Adjust_AF
1061   85A7 85                          add     a, l
1062   85A8 6F                          ld      l, a
1063   85A9 C9                          ret
1064   85AA             ; End of function HEX_VAL_to_L
1065   85AA             
1066   85AA             
1067   85AA             ; =============== S U B R O U T I N E =======================================
1068   85AA             
1069   85AA             
1070   85AA             GET_HEX_CHAR:                           ; CODE XREF: GET_COMMAND:loc_646E↑p
1071   85AA                                                     ; GET_COMMAND:loc_6541↑p ...
1072   85AA CD E8 80                    call    GET_CHAR        ; get character, return in A
1073   85AD FE 00                       cp      0
1074   85AF 28 F9                       jr      z, GET_HEX_CHAR
1075   85B1 FE 30                       cp      30h ; '0'
1076   85B3 38 0C                       jr      c, loc_65C1
1077   85B5 FE 47                       cp      47h ; 'G'
1078   85B7 30 08                       jr      nc, loc_65C1
1079   85B9 FE 3A                       cp      3Ah ; ':'
1080   85BB 38 06                       jr      c, loc_65C3
1081   85BD FE 41                       cp      41h ; 'A'
1082   85BF 30 02                       jr      nc, loc_65C3
1083   85C1             
1084   85C1             loc_65C1:                               ; CODE XREF: GET_HEX_CHAR+9↑j
1085   85C1                                                     ; GET_HEX_CHAR+D↑j
1086   85C1 B7                          or      a
1087   85C2 C9                          ret
1088   85C3             ; ---------------------------------------------------------------------------
1089   85C3             
1090   85C3             loc_65C3:                               ; CODE XREF: GET_HEX_CHAR+11↑j
1091   85C3                                                     ; GET_HEX_CHAR+15↑j
1092   85C3 BF                          cp      a
1093   85C4 C9                          ret
1094   85C5             
1095   85C5             ; ---------------------------------------------------------------------------
1096   85C5             
1097   85C5             breakpoints:                            ; CODE XREF: GET_COMMAND+2B↑j
1098   85C5 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
1099   85C8             
1100   85C8             bp_range_error:                         ; CODE XREF: GET_COMMAND+597↓j
1101   85C8                                                     ; GET_COMMAND+59B↓j
1102   85C8 CD E8 80                    call    GET_CHAR        ; get character, return in A
1103   85CB FE 0D                       cp      0Dh
1104   85CD 28 24                       jr      z, loc_65F3
1105   85CF FE 31                       cp      31h ; '1'
1106   85D1 38 F5                       jr      c, bp_range_error
1107   85D3 FE 3A                       cp      3Ah ; ':'
1108   85D5 30 F1                       jr      nc, bp_range_error
1109   85D7 CD 86 9A                    call    TAS_VID_DRIVER
1110   85DA D6 31                       sub     31h ; '1'
1111   85DC CB 27                       sla     a
1112   85DE 4F                          ld      c, a
1113   85DF 06 00                       ld      b, 0
1114   85E1 21 3B 9B                    ld      hl, BREAKPOINTS ; 9 breakpoints (9 x 2 byte addresses)
1115   85E4 09                          add     hl, bc
1116   85E5 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
1117   85E8 E5                          push    hl
1118   85E9 CD 67 85                    call    HEX_to_HL       ; get 4 digit hex value into the HL register
1119   85EC E5                          push    hl
1120   85ED D1                          pop     de
1121   85EE E1                          pop     hl
1122   85EF 73                          ld      (hl), e
1123   85F0 23                          inc     hl
1124   85F1 72                          ld      (hl), d
1125   85F2 C9                          ret
1126   85F3             ; ---------------------------------------------------------------------------
1127   85F3             
1128   85F3             loc_65F3:                               ; CODE XREF: GET_COMMAND+593↑j
1129   85F3 06 03                       ld      b, 3
1130   85F5 C5                          push    bc
1131   85F6 CD 77 89                    call    SCROLL_SAVEREGS ; save all regs and scroll down
1132   85F9 21 3B 9B                    ld      hl, BREAKPOINTS ; 9 breakpoints (9 x 2 byte addresses)
1133   85FC 11 71 9B                    ld      de, EXEC2
1134   85FF 22 D4 9E                    ld      (GEN_PTR_16), hl
1135   8602             
1136   8602             loc_6602:                               ; CODE XREF: GET_COMMAND+5E7↓j
1137   8602 06 03                       ld      b, 3
1138   8604 18 03                       jr      loc_6609
1139   8606             ; ---------------------------------------------------------------------------
1140   8606             
1141   8606             loc_6606:                               ; CODE XREF: GET_COMMAND+5DD↓j
1142   8606 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
1143   8609             
1144   8609             loc_6609:                               ; CODE XREF: GET_COMMAND+5CA↑j
1145   8609 CD 73 91                    call    sub_7173
1146   860C CD 3B 91                    call    inc_PTR_16
1147   860F CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
1148   8612 1A                          ld      a, (de)
1149   8613 13                          inc     de
1150   8614 CD 47 91                    call    sub_7147
1151   8617 10 ED                       djnz    loc_6606
1152   8619 C1                          pop     bc
1153   861A 05                          dec     b
1154   861B C5                          push    bc
1155   861C 28 05                       jr      z, loc_6623
1156   861E CD 77 89                    call    SCROLL_SAVEREGS ; save all regs and scroll down
1157   8621 18 DF                       jr      loc_6602
1158   8623             ; ---------------------------------------------------------------------------
1159   8623             
1160   8623             loc_6623:                               ; CODE XREF: GET_COMMAND+5E2↑j
1161   8623 C1                          pop     bc
1162   8624 C3 65 83                    jp      SHOW_REGS
1163   8627             ; ---------------------------------------------------------------------------
1164   8627             
1165   8627             clear_breakpoints:                      ; CODE XREF: GET_COMMAND+30↑j
1166   8627 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
1167   862A             
1168   862A             loc_662A:                               ; CODE XREF: GET_COMMAND+5F9↓j
1169   862A                                                     ; GET_COMMAND+5FD↓j
1170   862A CD E8 80                    call    GET_CHAR        ; get character, return in A
1171   862D FE 0D                       cp      0Dh
1172   862F 28 1C                       jr      z, clear_all_breakpoints
1173   8631 FE 31                       cp      31h ; '1'
1174   8633 38 F5                       jr      c, loc_662A
1175   8635 FE 3A                       cp      3Ah ; ':'
1176   8637 30 F1                       jr      nc, loc_662A
1177   8639 CD 86 9A                    call    TAS_VID_DRIVER
1178   863C D6 31                       sub     31h ; '1'
1179   863E CB 27                       sla     a
1180   8640 4F                          ld      c, a
1181   8641 06 00                       ld      b, 0
1182   8643 21 3B 9B                    ld      hl, BREAKPOINTS ; 9 breakpoints (9 x 2 byte addresses)
1183   8646 09                          add     hl, bc
1184   8647 36 00                       ld      (hl), 0
1185   8649 23                          inc     hl
1186   864A 36 00                       ld      (hl), 0
1187   864C C9                          ret
1188   864D             
1189   864D             ; =============== S U B R O U T I N E =======================================
1190   864D             
1191   864D             
1192   864D             clear_all_breakpoints:                  ; CODE XREF: RAM:6014↑p
1193   864D                                                     ; GET_COMMAND+5F5↑j
1194   864D 21 3B 9B                    ld      hl, BREAKPOINTS ; 9 breakpoints (9 x 2 byte addresses)
1195   8650 AF                          xor     a
1196   8651 06 12                       ld      b, 18
1197   8653             
1198   8653             loc_6653:                               ; CODE XREF: clear_all_breakpoints+8↓j
1199   8653 77                          ld      (hl), a
1200   8654 23                          inc     hl
1201   8655 10 FC                       djnz    loc_6653
1202   8657 C9                          ret
1203   8658             ; End of function clear_all_breakpoints
1204   8658             
1205   8658             ; ---------------------------------------------------------------------------
1206   8658             
1207   8658             goto:                                   ; CODE XREF: GET_COMMAND+21↑j
1208   8658 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
1209   865B CD 85 8A                    call    GET_HEX_ADDRESS
1210   865E 22 08 9B                    ld      (reg_PC), hl
1211   8661             
1212   8661             loc_6661:                               ; CODE XREF: GET_COMMAND+656↓j
1213   8661 CD 92 86                    call    LOAD_BREAKPOINTS ; save existing code, and insert breakpoint traps in target code.
1214   8664 CD CC 82                    call    sub_62CC
1215   8667 CD C2 86                    call    RESTORE_BREAKPOINTS ; remove breakpoints, and re-insert original code
1216   866A 2A 08 9B                    ld      hl, (reg_PC)
1217   866D CD E2 8A                    call    sub_6AE2
1218   8670 CA AD 88                    jp      z, loc_68AD
1219   8673 CD 65 83                    call    SHOW_REGS
1220   8676             
1221   8676             loc_6676:                               ; CODE XREF: GET_COMMAND+652↓j
1222   8676 06 03                       ld      b, 3
1223   8678             
1224   8678             loc_6678:                               ; CODE XREF: GET_COMMAND+654↓j
1225   8678 C5                          push    bc
1226   8679 CD 7F 8A                    call    CHECK_BREAK     ; check status of the BREAK key
1227   867C C2 F3 80                    jp      nz, return_from_user
1228   867F CD 39 87                    call    sub_6739
1229   8682 2A 08 9B                    ld      hl, (reg_PC)
1230   8685 CD E2 8A                    call    sub_6AE2
1231   8688 C1                          pop     bc
1232   8689 CA AD 88                    jp      z, loc_68AD
1233   868C 38 E8                       jr      c, loc_6676
1234   868E 10 E8                       djnz    loc_6678
1235   8690 18 CF                       jr      loc_6661
1236   8692             
1237   8692             ; =============== S U B R O U T I N E =======================================
1238   8692             
1239   8692             ; save existing code, and insert breakpoint traps in target code.
1240   8692             
1241   8692             LOAD_BREAKPOINTS:                       ; CODE XREF: sub_60FF+58↑p
1242   8692                                                     ; GET_COMMAND:loc_6661↑p
1243   8692 06 09                       ld      b, 9
1244   8694 21 3B 9B                    ld      hl, BREAKPOINTS ; 9 breakpoints (9 x 2 byte addresses)
1245   8697 DD 21 4D 9B                 ld      ix, CODE_SAVE
1246   869B             
1247   869B             loc_669B:                               ; CODE XREF: LOAD_BREAKPOINTS+2D↓j
1248   869B 5E                          ld      e, (hl)
1249   869C 23                          inc     hl
1250   869D 56                          ld      d, (hl)
1251   869E 23                          inc     hl
1252   869F 1A                          ld      a, (de)
1253   86A0 DD 77 00                    ld      (ix+0), a
1254   86A3 DD 23                       inc     ix
1255   86A5 3E CD                       ld      a, 0CDh
1256   86A7 12                          ld      (de), a
1257   86A8 13                          inc     de
1258   86A9 1A                          ld      a, (de)
1259   86AA DD 77 00                    ld      (ix+0), a
1260   86AD DD 23                       inc     ix
1261   86AF E5                          push    hl
1262   86B0 21 15 83                    ld      hl, BREAKPOINT_RETURN
1263   86B3 7D                          ld      a, l
1264   86B4 12                          ld      (de), a
1265   86B5 13                          inc     de
1266   86B6 1A                          ld      a, (de)
1267   86B7 DD 77 00                    ld      (ix+0), a
1268   86BA DD 23                       inc     ix
1269   86BC 7C                          ld      a, h
1270   86BD 12                          ld      (de), a
1271   86BE E1                          pop     hl
1272   86BF 10 DA                       djnz    loc_669B
1273   86C1 C9                          ret
1274   86C2             ; End of function LOAD_BREAKPOINTS
1275   86C2             
1276   86C2             
1277   86C2             ; =============== S U B R O U T I N E =======================================
1278   86C2             
1279   86C2             ; remove breakpoints, and re-insert original code
1280   86C2             
1281   86C2             RESTORE_BREAKPOINTS:                    ; CODE XREF: sub_60FF+5E↑p
1282   86C2                                                     ; GET_COMMAND+62D↑p
1283   86C2 06 09                       ld      b, 9
1284   86C4 21 3B 9B                    ld      hl, BREAKPOINTS ; 9 breakpoints (9 x 2 byte addresses)
1285   86C7 DD 21 4D 9B                 ld      ix, CODE_SAVE
1286   86CB             
1287   86CB             loc_66CB:                               ; CODE XREF: RESTORE_BREAKPOINTS+21↓j
1288   86CB 5E                          ld      e, (hl)
1289   86CC 23                          inc     hl
1290   86CD 56                          ld      d, (hl)
1291   86CE 23                          inc     hl
1292   86CF DD 7E 00                    ld      a, (ix+0)
1293   86D2 DD 23                       inc     ix
1294   86D4 12                          ld      (de), a
1295   86D5 13                          inc     de
1296   86D6 DD 7E 00                    ld      a, (ix+0)
1297   86D9 DD 23                       inc     ix
1298   86DB 12                          ld      (de), a
1299   86DC 13                          inc     de
1300   86DD DD 7E 00                    ld      a, (ix+0)
1301   86E0 DD 23                       inc     ix
1302   86E2 12                          ld      (de), a
1303   86E3 10 E6                       djnz    loc_66CB
1304   86E5 C9                          ret
1305   86E6             ; End of function RESTORE_BREAKPOINTS
1306   86E6             
1307   86E6             ; ---------------------------------------------------------------------------
1308   86E6             
1309   86E6             disassemble:                            ; CODE XREF: GET_COMMAND+26↑j
1310   86E6 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
1311   86E9 CD 85 8A                    call    GET_HEX_ADDRESS
1312   86EC E5                          push    hl
1313   86ED CD 6D 89                    call    SET_PROMPT_POS
1314   86F0 E1                          pop     hl
1315   86F1 CD 11 8A                    call    CLEAR_VIDEO
1316   86F4             
1317   86F4             dis_next_page:                          ; CODE XREF: GET_COMMAND+6CA↓j
1318   86F4                                                     ; GET_COMMAND+6E2↓j
1319   86F4 01 0F 00                    ld      bc, 15          ; disassemble next *15* instructions
1320   86F7 3E 01                       ld      a, 1            ; direct output to screen
1321   86F9             
1322   86F9             loc_66F9:                               ; CODE XREF: GET_COMMAND+6D7↓j
1323   86F9 CD 0C 8B                    call    DISASSEMBLE
1324   86FC 2A D4 9E                    ld      hl, (GEN_PTR_16)
1325   86FF             
1326   86FF             dis_key_error:                          ; CODE XREF: GET_COMMAND+6D2↓j
1327   86FF CD E8 80                    call    GET_CHAR        ; get character, return in A
1328   8702 FE 20                       cp      20h ; ' '
1329   8704 28 EE                       jr      z, dis_next_page ; space == continue for next page
1330   8706 FE 2D                       cp      2Dh ; '-'
1331   8708 28 09                       jr      z, loc_6713
1332   870A FE 0A                       cp      0Ah
1333   870C 20 F1                       jr      nz, dis_key_error
1334   870E 01 01 00                    ld      bc, 1
1335   8711 18 E6                       jr      loc_66F9
1336   8713             ; ---------------------------------------------------------------------------
1337   8713             
1338   8713             loc_6713:                               ; CODE XREF: GET_COMMAND+6CE↑j
1339   8713 06 1E                       ld      b, 1Eh
1340   8715             
1341   8715             loc_6715:                               ; CODE XREF: GET_COMMAND+6E0↓j
1342   8715 C5                          push    bc
1343   8716 CD EB 97                    call    sub_77EB
1344   8719 C1                          pop     bc
1345   871A 10 F9                       djnz    loc_6715
1346   871C 18 D6                       jr      dis_next_page
1347   871E             ; ---------------------------------------------------------------------------
1348   871E             
1349   871E             toggle_restarts:                        ; CODE XREF: GET_COMMAND+94↑j
1350   871E CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
1351   8721 3A B8 9B                    ld      a, (RESTARTS_STYLE)
1352   8724 2F                          cpl
1353   8725 E6 01                       and     1
1354   8727 32 B8 9B                    ld      (RESTARTS_STYLE), a
1355   872A B7                          or      a
1356   872B 28 05                       jr      z, loc_6732
1357   872D 3E 49                       ld      a, 49h ; 'I'
1358   872F             
1359   872F             loc_672F:                               ; CODE XREF: GET_COMMAND+6FA↓j
1360   872F C3 86 9A                    jp      TAS_VID_DRIVER
1361   8732             ; ---------------------------------------------------------------------------
1362   8732             
1363   8732             loc_6732:                               ; CODE XREF: GET_COMMAND+6F1↑j
1364   8732 3E 5C                       ld      a, 5Ch ; '\'
1365   8734 18 F9                       jr      loc_672F
1366   8736             ; ---------------------------------------------------------------------------
1367   8736             
1368   8736             single_step:                            ; CODE XREF: GET_COMMAND+1C↑j
1369   8736 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
1370   8739             
1371   8739             ; =============== S U B R O U T I N E =======================================
1372   8739             
1373   8739             
1374   8739             sub_6739:                               ; CODE XREF: GET_COMMAND+645↑p
1375   8739                                                     ; GET_COMMAND+843↓p
1376   8739 3E 01                       ld      a, 1
1377   873B 32 8E 9B                    ld      (byte_7B8E), a
1378   873E 18 09                       jr      loc_6749
1379   8740             ; End of function sub_6739
1380   8740             
1381   8740             ; ---------------------------------------------------------------------------
1382   8740             
1383   8740             loc_6740:                               ; CODE XREF: GET_COMMAND+3F↑j
1384   8740 3E 5C                       ld      a, 5Ch ; '\'
1385   8742 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
1386   8745             
1387   8745             ; =============== S U B R O U T I N E =======================================
1388   8745             
1389   8745             
1390   8745             sub_6745:                               ; CODE XREF: GET_COMMAND:loc_6882↓p
1391   8745 AF                          xor     a
1392   8746 32 8E 9B                    ld      (byte_7B8E), a
1393   8749             
1394   8749             loc_6749:                               ; CODE XREF: sub_6739+5↑j
1395   8749 CD FF 80                    call    sub_60FF
1396   874C C3 65 83                    jp      SHOW_REGS
1397   874F             ; End of function sub_6745
1398   874F             
1399   874F             ; ---------------------------------------------------------------------------
1400   874F             
1401   874F             find_search_key:                        ; CODE XREF: GET_COMMAND+44↑j
1402   874F CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
1403   8752             
1404   8752             loc_6752:                               ; CODE XREF: GET_COMMAND+721↓j
1405   8752 CD AA 85                    call    GET_HEX_CHAR
1406   8755 28 06                       jr      z, loc_675D
1407   8757 FE 0D                       cp      0Dh
1408   8759 28 48                       jr      z, loc_67A3
1409   875B 18 F5                       jr      loc_6752
1410   875D             ; ---------------------------------------------------------------------------
1411   875D             
1412   875D             loc_675D:                               ; CODE XREF: GET_COMMAND+71B↑j
1413   875D CD 6C 85                    call    HEX_VAL_to_HL   ; 4 byte hex value to HL register
1414   8760 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
1415   8763 22 96 9B                    ld      (word_7B96), hl
1416   8766 06 04                       ld      b, 4
1417   8768 11 98 9B                    ld      de, byte_7B98
1418   876B             
1419   876B             loc_676B:                               ; CODE XREF: GET_COMMAND+75A↓j
1420   876B CD AA 85                    call    GET_HEX_CHAR
1421   876E 28 04                       jr      z, loc_6774
1422   8770 FE 0D                       cp      0Dh
1423   8772 28 22                       jr      z, loc_6796
1424   8774             
1425   8774             loc_6774:                               ; CODE XREF: GET_COMMAND+734↑j
1426   8774 CD 86 9A                    call    TAS_VID_DRIVER
1427   8777 CD 55 85                    call    Adjust_AF
1428   877A CB 27                       sla     a
1429   877C CB 27                       sla     a
1430   877E CB 27                       sla     a
1431   8780 CB 27                       sla     a
1432   8782 4F                          ld      c, a
1433   8783             
1434   8783             loc_6783:                               ; CODE XREF: GET_COMMAND+74C↓j
1435   8783 CD AA 85                    call    GET_HEX_CHAR
1436   8786 20 FB                       jr      nz, loc_6783
1437   8788 CD 86 9A                    call    TAS_VID_DRIVER
1438   878B CD 55 85                    call    Adjust_AF
1439   878E 81                          add     a, c
1440   878F 12                          ld      (de), a
1441   8790 13                          inc     de
1442   8791 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
1443   8794 10 D5                       djnz    loc_676B
1444   8796             
1445   8796             loc_6796:                               ; CODE XREF: GET_COMMAND+738↑j
1446   8796 3E 04                       ld      a, 4
1447   8798 90                          sub     b
1448   8799 32 9C 9B                    ld      (byte_7B9C), a
1449   879C 01 00 00                    ld      bc, 0
1450   879F ED 43 9D 9B                 ld      (word_7B9D), bc
1451   87A3             
1452   87A3             loc_67A3:                               ; CODE XREF: GET_COMMAND+71F↑j
1453   87A3                                                     ; GET_COMMAND+788↓j
1454   87A3 2A 96 9B                    ld      hl, (word_7B96)
1455   87A6 ED 4B 9D 9B                 ld      bc, (word_7B9D)
1456   87AA 3A 98 9B                    ld      a, (byte_7B98)
1457   87AD ED B1                       cpir
1458   87AF 22 96 9B                    ld      (word_7B96), hl
1459   87B2 2B                          dec     hl
1460   87B3 ED 43 9D 9B                 ld      (word_7B9D), bc
1461   87B7 E0                          ret     po
1462   87B8 11 98 9B                    ld      de, byte_7B98
1463   87BB 3A 9C 9B                    ld      a, (byte_7B9C)
1464   87BE 47                          ld      b, a
1465   87BF             
1466   87BF             loc_67BF:                               ; CODE XREF: GET_COMMAND+78B↓j
1467   87BF 1A                          ld      a, (de)
1468   87C0 13                          inc     de
1469   87C1 BE                          cp      (hl)
1470   87C2 20 DF                       jr      nz, loc_67A3
1471   87C4 23                          inc     hl
1472   87C5 10 F8                       djnz    loc_67BF
1473   87C7 2A 96 9B                    ld      hl, (word_7B96)
1474   87CA 2B                          dec     hl
1475   87CB C3 3F 92                    jp      HL_to_HEX
1476   87CE             ; ---------------------------------------------------------------------------
1477   87CE             
1478   87CE             hex_dump:                               ; CODE XREF: GET_COMMAND+4E↑j
1479   87CE CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
1480   87D1 3E 01                       ld      a, 1
1481   87D3 32 B5 9B                    ld      (HEX_ASCII_FLAG), a
1482   87D6 18 07                       jr      loc_67DF
1483   87D8             ; ---------------------------------------------------------------------------
1484   87D8             
1485   87D8             ascii_dump:                             ; CODE XREF: GET_COMMAND+49↑j
1486   87D8 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
1487   87DB AF                          xor     a
1488   87DC 32 B5 9B                    ld      (HEX_ASCII_FLAG), a
1489   87DF             
1490   87DF             loc_67DF:                               ; CODE XREF: GET_COMMAND+79C↑j
1491   87DF CD 85 8A                    call    GET_HEX_ADDRESS
1492   87E2 E5                          push    hl
1493   87E3 CD 6D 89                    call    SET_PROMPT_POS
1494   87E6 E1                          pop     hl
1495   87E7 CD 11 8A                    call    CLEAR_VIDEO
1496   87EA             
1497   87EA             dump_next_page:                         ; CODE XREF: GET_COMMAND+7BA↓j
1498   87EA                                                     ; GET_COMMAND+7CA↓j
1499   87EA 0E 0F                       ld      c, 15           ; Display 15 lines
1500   87EC             
1501   87EC             loc_67EC:                               ; CODE XREF: GET_COMMAND+7CE↓j
1502   87EC CD 0A 88                    call    show_8_chars
1503   87EF             
1504   87EF             loc_67EF:                               ; CODE XREF: GET_COMMAND+7C2↓j
1505   87EF CD E8 80                    call    GET_CHAR        ; get character, return in A
1506   87F2 FE 20                       cp      20h ; ' '
1507   87F4 28 F4                       jr      z, dump_next_page ; SPC == show nest page
1508   87F6 FE 0A                       cp      0Ah
1509   87F8 28 0C                       jr      z, dump_next_line ; Down Arrow = show one more line
1510   87FA FE 2D                       cp      2Dh ; '-'
1511   87FC 20 F1                       jr      nz, loc_67EF
1512   87FE 11 F0 00                    ld      de, 0F0h        ; '-' means display *previous* page
1513   8801 AF                          xor     a
1514   8802 ED 52                       sbc     hl, de
1515   8804 18 E4                       jr      dump_next_page
1516   8806             ; ---------------------------------------------------------------------------
1517   8806             
1518   8806             dump_next_line:                         ; CODE XREF: GET_COMMAND+7BE↑j
1519   8806 0E 01                       ld      c, 1
1520   8808 18 E2                       jr      loc_67EC
1521   880A             
1522   880A             ; =============== S U B R O U T I N E =======================================
1523   880A             
1524   880A             
1525   880A             show_8_chars:                           ; CODE XREF: GET_COMMAND:loc_67EC↑p
1526   880A                                                     ; show_8_chars+33↓j
1527   880A 06 08                       ld      b, 8            ; 8 chars
1528   880C CD 3F 92                    call    HL_to_HEX       ; Show source address at left
1529   880F CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
1530   8812             
1531   8812             loc_6812:                               ; CODE XREF: show_8_chars+2B↓j
1532   8812 7E                          ld      a, (hl)
1533   8813 23                          inc     hl
1534   8814 F5                          push    af
1535   8815 3A B5 9B                    ld      a, (HEX_ASCII_FLAG)
1536   8818 B7                          or      a               ; A = 1 force HEX, A = 0 try display ASCII char
1537   8819 28 06                       jr      z, try_show_ascii
1538   881B F1                          pop     af
1539   881C             
1540   881C             undisplayable:                          ; CODE XREF: show_8_chars+1A↓j
1541   881C                                                     ; show_8_chars+1E↓j
1542   881C CD 47 91                    call    sub_7147
1543   881F 18 11                       jr      loc_6832
1544   8821             ; ---------------------------------------------------------------------------
1545   8821             
1546   8821             try_show_ascii:                         ; CODE XREF: show_8_chars+F↑j
1547   8821 F1                          pop     af
1548   8822 FE 20                       cp      20h ; ' '       ; 0-1F = CTRL chars
1549   8824 38 F6                       jr      c, undisplayable
1550   8826 FE 80                       cp      80h             ; >$80 = GFX chars
1551   8828 30 F2                       jr      nc, undisplayable
1552   882A F5                          push    af
1553   882B CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
1554   882E F1                          pop     af
1555   882F CD 86 9A                    call    TAS_VID_DRIVER
1556   8832             
1557   8832             loc_6832:                               ; CODE XREF: show_8_chars+15↑j
1558   8832 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
1559   8835 10 DB                       djnz    loc_6812
1560   8837 3E 0D                       ld      a, 0Dh
1561   8839 CD 86 9A                    call    TAS_VID_DRIVER
1562   883C 0D                          dec     c               ; shown 15 lines yet?
1563   883D 20 CB                       jr      nz, show_8_chars
1564   883F C9                          ret
1565   8840             ; End of function show_8_chars
1566   8840             
1567   8840             ; ---------------------------------------------------------------------------
1568   8840             
1569   8840             exit_tasmon:                            ; CODE XREF: GET_COMMAND+53↑j
1570   8840 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
1571   8843             
1572   8843             loc_6843:                               ; CODE XREF: GET_COMMAND+80E↓j
1573   8843 CD E8 80                    call    GET_CHAR        ; get character, return in A
1574   8846 FE 0D                       cp      0Dh             ; don't exit till <ENTER> pressed
1575   8848 20 F9                       jr      nz, loc_6843
1576   884A 76                          halt
1577   884B C7                          rst     00H               ; Jump back to BASIC
1578   884C             
1579   884C             trace:                                  ; CODE XREF: GET_COMMAND+58↑j
1580   884C CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
1581   884F AF                          xor     a
1582   8850 32 B6 9B                    ld      (byte_7BB6), a
1583   8853             
1584   8853             loc_6853:                               ; CODE XREF: GET_COMMAND+822↓j
1585   8853 CD E8 80                    call    GET_CHAR        ; get character, return in A
1586   8856 FE 0A                       cp      0Ah
1587   8858 28 0C                       jr      z, loc_6866
1588   885A FE 49                       cp      49h ; 'I'
1589   885C 20 F5                       jr      nz, loc_6853
1590   885E CD 86 9A                    call    TAS_VID_DRIVER
1591   8861 32 AC 9B                    ld      (byte_7BAC), a
1592   8864 18 09                       jr      loc_686F
1593   8866             ; ---------------------------------------------------------------------------
1594   8866             
1595   8866             loc_6866:                               ; CODE XREF: GET_COMMAND+81E↑j
1596   8866 3E 5C                       ld      a, 5Ch ; '\'
1597   8868 CD 86 9A                    call    TAS_VID_DRIVER
1598   886B AF                          xor     a
1599   886C 32 AC 9B                    ld      (byte_7BAC), a
1600   886F             
1601   886F             loc_686F:                               ; CODE XREF: GET_COMMAND+82A↑j
1602   886F CD 77 89                    call    SCROLL_SAVEREGS ; save all regs and scroll down
1603   8872 3E 06                       ld      a, 6
1604   8874 32 A3 9B                    ld      (byte_7BA3), a
1605   8877             
1606   8877             loc_6877:                               ; CODE XREF: GET_COMMAND+8B7↓j
1607   8877 3A AC 9B                    ld      a, (byte_7BAC)
1608   887A B7                          or      a
1609   887B 28 05                       jr      z, loc_6882
1610   887D CD 39 87                    call    sub_6739
1611   8880 18 03                       jr      loc_6885
1612   8882             ; ---------------------------------------------------------------------------
1613   8882             
1614   8882             loc_6882:                               ; CODE XREF: GET_COMMAND+841↑j
1615   8882 CD 45 87                    call    sub_6745
1616   8885             
1617   8885             loc_6885:                               ; CODE XREF: GET_COMMAND+846↑j
1618   8885 CD 77 89                    call    SCROLL_SAVEREGS ; save all regs and scroll down
1619   8888 3A B6 9B                    ld      a, (byte_7BB6)
1620   888B B7                          or      a
1621   888C 28 17                       jr      z, loc_68A5
1622   888E 3A 8D 9B                    ld      a, (byte_7B8D)
1623   8891 FE 09                       cp      9
1624   8893 28 1B                       jr      z, loc_68B0
1625   8895 FE 0A                       cp      0Ah
1626   8897 20 0C                       jr      nz, loc_68A5
1627   8899 2A 08 9B                    ld      hl, (reg_PC)
1628   889C 46                          ld      b, (hl)
1629   889D 3A FE 9A                    ld      a, (reg_AF)
1630   88A0 CD 78 82                    call    sub_6278
1631   88A3 20 0B                       jr      nz, loc_68B0
1632   88A5             
1633   88A5             loc_68A5:                               ; CODE XREF: GET_COMMAND+852↑j
1634   88A5                                                     ; GET_COMMAND+85D↑j
1635   88A5 2A 08 9B                    ld      hl, (reg_PC)
1636   88A8 CD E2 8A                    call    sub_6AE2
1637   88AB 20 06                       jr      nz, loc_68B3
1638   88AD             
1639   88AD             loc_68AD:                               ; CODE XREF: GET_COMMAND+636↑j
1640   88AD                                                     ; GET_COMMAND+64F↑j
1641   88AD CD BB 8A                    call    copy_EXEC1_to_EXEC2
1642   88B0             
1643   88B0             loc_68B0:                               ; CODE XREF: GET_COMMAND+859↑j
1644   88B0                                                     ; GET_COMMAND+869↑j ...
1645   88B0 C3 F3 80                    jp      return_from_user
1646   88B3             ; ---------------------------------------------------------------------------
1647   88B3             
1648   88B3             loc_68B3:                               ; CODE XREF: GET_COMMAND+871↑j
1649   88B3 CD E8 80                    call    GET_CHAR        ; get character, return in A
1650   88B6 FE 20                       cp      20h ; ' '
1651   88B8 20 07                       jr      nz, loc_68C1
1652   88BA             
1653   88BA             loc_68BA:                               ; CODE XREF: GET_COMMAND+885↓j
1654   88BA CD E8 80                    call    GET_CHAR        ; get character, return in A
1655   88BD FE 20                       cp      20h ; ' '
1656   88BF 20 F9                       jr      nz, loc_68BA
1657   88C1             
1658   88C1             loc_68C1:                               ; CODE XREF: GET_COMMAND+87E↑j
1659   88C1 FE 30                       cp      30h ; '0'
1660   88C3 38 0D                       jr      c, loc_68D2
1661   88C5 FE 38                       cp      38h ; '8'
1662   88C7 30 09                       jr      nc, loc_68D2
1663   88C9 D6 30                       sub     30h ; '0'
1664   88CB 47                          ld      b, a
1665   88CC 3E 08                       ld      a, 8
1666   88CE 90                          sub     b
1667   88CF 32 A3 9B                    ld      (byte_7BA3), a
1668   88D2             
1669   88D2             loc_68D2:                               ; CODE XREF: GET_COMMAND+889↑j
1670   88D2                                                     ; GET_COMMAND+88D↑j
1671   88D2 FE 52                       cp      52h ; 'R'
1672   88D4 20 03                       jr      nz, loc_68D9
1673   88D6 32 B6 9B                    ld      (byte_7BB6), a
1674   88D9             
1675   88D9             loc_68D9:                               ; CODE XREF: GET_COMMAND+89A↑j
1676   88D9 3A A3 9B                    ld      a, (byte_7BA3)
1677   88DC 07                          rlca
1678   88DD 07                          rlca
1679   88DE 47                          ld      b, a
1680   88DF             
1681   88DF             loc_68DF:                               ; CODE XREF: GET_COMMAND+8B5↓j
1682   88DF 3A A3 9B                    ld      a, (byte_7BA3)
1683   88E2 5F                          ld      e, a
1684   88E3 3D                          dec     a
1685   88E4 57                          ld      d, a
1686   88E5             
1687   88E5             loc_68E5:                               ; CODE XREF: GET_COMMAND+8B3↓j
1688   88E5 1B                          dec     de
1689   88E6 CD 7F 8A                    call    CHECK_BREAK     ; check status of the BREAK key
1690   88E9 20 C5                       jr      nz, loc_68B0
1691   88EB 7A                          ld      a, d
1692   88EC B3                          or      e
1693   88ED 20 F6                       jr      nz, loc_68E5
1694   88EF 10 EE                       djnz    loc_68DF
1695   88F1 18 84                       jr      loc_6877
1696   88F3             ; ---------------------------------------------------------------------------
1697   88F3             
1698   88F3             subtract_add:                           ; CODE XREF: GET_COMMAND+5D↑j
1699   88F3 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
1700   88F6 CD 67 85                    call    HEX_to_HL       ; get 4 digit hex value into the HL register
1701   88F9 E5                          push    hl
1702   88FA CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
1703   88FD CD 67 85                    call    HEX_to_HL       ; get 4 digit hex value into the HL register
1704   8900 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
1705   8903             
1706   8903             loc_6903:                               ; CODE XREF: GET_COMMAND+8D2↓j
1707   8903 CD E8 80                    call    GET_CHAR        ; get character, return in A
1708   8906 FE 2B                       cp      2Bh ; '+'
1709   8908 28 12                       jr      z, loc_691C
1710   890A FE 2D                       cp      2Dh ; '-'
1711   890C 20 F5                       jr      nz, loc_6903
1712   890E CD 86 9A                    call    TAS_VID_DRIVER
1713   8911 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
1714   8914 D1                          pop     de
1715   8915 AF                          xor     a
1716   8916 EB                          ex      de, hl
1717   8917 ED 52                       sbc     hl, de
1718   8919             
1719   8919             loc_6919:                               ; CODE XREF: GET_COMMAND+8EA↓j
1720   8919                                                     ; GET_COMMAND+931↓j
1721   8919 C3 3F 92                    jp      HL_to_HEX
1722   891C             ; ---------------------------------------------------------------------------
1723   891C             
1724   891C             loc_691C:                               ; CODE XREF: GET_COMMAND+8CE↑j
1725   891C D1                          pop     de
1726   891D CD 86 9A                    call    TAS_VID_DRIVER
1727   8920 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
1728   8923 19                          add     hl, de
1729   8924 18 F3                       jr      loc_6919
1730   8926             ; ---------------------------------------------------------------------------
1731   8926             
1732   8926             Q_command:                              ; CODE XREF: GET_COMMAND+A3↑j
1733   8926 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
1734   8929             
1735   8929             q_cmd_error:                            ; CODE XREF: GET_COMMAND+8F6↓j
1736   8929 CD AA 85                    call    GET_HEX_CHAR
1737   892C 28 06                       jr      z, loc_6934
1738   892E FE 0D                       cp      0Dh
1739   8930 20 F7                       jr      nz, q_cmd_error
1740   8932 18 14                       jr      loc_6948
1741   8934             ; ---------------------------------------------------------------------------
1742   8934             
1743   8934             loc_6934:                               ; CODE XREF: GET_COMMAND+8F2↑j
1744   8934 CD 6C 85                    call    HEX_VAL_to_HL   ; 4 byte hex value to HL register
1745   8937 22 9F 9B                    ld      (word_7B9F), hl
1746   893A CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
1747   893D CD 67 85                    call    HEX_to_HL       ; get 4 digit hex value into the HL register
1748   8940 22 A1 9B                    ld      (word_7BA1), hl
1749   8943 3E 20                       ld      a, 20h ; ' '
1750   8945 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
1751   8948             
1752   8948             loc_6948:                               ; CODE XREF: GET_COMMAND+8F8↑j
1753   8948 2A 9F 9B                    ld      hl, (word_7B9F)
1754   894B ED 5B A1 9B                 ld      de, (word_7BA1)
1755   894F AF                          xor     a
1756   8950 E5                          push    hl
1757   8951 ED 52                       sbc     hl, de
1758   8953 E1                          pop     hl
1759   8954 C8                          ret     z
1760   8955             
1761   8955             loc_6955:                               ; CODE XREF: GET_COMMAND+91F↓j
1762   8955 1A                          ld      a, (de)
1763   8956 BE                          cp      (hl)
1764   8957 23                          inc     hl
1765   8958 13                          inc     de
1766   8959 28 FA                       jr      z, loc_6955
1767   895B 22 9F 9B                    ld      (word_7B9F), hl
1768   895E ED 53 A1 9B                 ld      (word_7BA1), de
1769   8962 2B                          dec     hl
1770   8963 1B                          dec     de
1771   8964 CD 3F 92                    call    HL_to_HEX
1772   8967 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
1773   896A EB                          ex      de, hl
1774   896B 18 AC                       jr      loc_6919
1775   896D             
1776   896D             ; =============== S U B R O U T I N E =======================================
1777   896D             
1778   896D             
1779   896D             SET_PROMPT_POS:                         ; CODE XREF: RAM:6028↑p
1780   896D                                                     ; GET_COMMAND+14↑p ...
1781   896D 21 E8 3D                    ld      hl, SCREEN_START+1E8h	; 3DE8h
1782   8970 22 20 40                    ld      (NEXT_CHAR_ADD_L2), hl ; L2 Video DCB next char address $3C00<=X<=$3FFF
1783   8973 22 A9 9B                    ld      (NEXT_CHAR_ADD_TM), hl
1784   8976 C9                          ret
1785   8977             ; End of function SET_PROMPT_POS
1786   8977             
1787   8977             
1788   8977             ; =============== S U B R O U T I N E =======================================
1789   8977             
1790   8977             ; save all regs and scroll down
1791   8977             
1792   8977             SCROLL_SAVEREGS:                        ; CODE XREF: RAM:602B↑p
1793   8977                                                     ; GET_CHAR-B7↑p ...
1794   8977 E5                          push    hl
1795   8978 D5                          push    de
1796   8979 C5                          push    bc
1797   897A CD 81 89                    call    sub_6981
1798   897D C1                          pop     bc
1799   897E D1                          pop     de
1800   897F E1                          pop     hl
1801   8980 C9                          ret
1802   8981             
1803   8981             
1804   8981             ; =============== S U B R O U T I N E =======================================
1805   8981             
1806   8981             
1807   8981             sub_6981:						; CODE XREF: SCROLL_SAVEREGS+3↑p
1808   8981 2A A9 9B                    ld      hl, (NEXT_CHAR_ADD_TM)
1809   8984 01 40 00                    ld      bc, LINE_LEN			; 64
1810   8987 09                          add     hl, bc				; down one line
1811   8988 22 A9 9B                    ld      (NEXT_CHAR_ADD_TM), hl
1812   898B 22 20 40                    ld      (NEXT_CHAR_ADD_L2), hl ; L2 Video DCB next char address $3C00<=X<=$3FFF
1813   898E 7C                          ld      a, h
1814   898F FE 40                       cp      SCREEN_OVERFLOW			; 40XXh ; Are we off the end of the screen?
1815   8991 F8                          ret     m
1816   8992 AF                          xor     a
1817   8993 ED 42                       sbc     hl, bc
1818   8995 22 A9 9B                    ld      (NEXT_CHAR_ADD_TM), hl
1819   8998 3E 07                       ld      a, 7
1820   899A 21 28 3E                    ld      hl, SCREEN_START+228h	; 3E28h
1821   899D E5                          push    hl
1822   899E             
1823   899E             loc_699E:                               ; CODE XREF: sub_6981+2B↓j
1824   899E D1                          pop     de
1825   899F D5                          push    de
1826   89A0 E1                          pop     hl
1827   89A1 01 40 00                    ld      bc, LINE_LEN			; 64
1828   89A4 09                          add     hl, bc
1829   89A5 E5                          push    hl
1830   89A6 01 18 00                    ld      bc, 24
1831   89A9 ED B0                       ldir
1832   89AB 3D                          dec     a
1833   89AC 20 F0                       jr      nz, loc_699E
1834   89AE E1                          pop     hl
1835   89AF 21 E8 3F                    ld      hl, SCREEN_START+3E8h	; 3FE8h
1836   89B2 22 20 40                    ld      (NEXT_CHAR_ADD_L2), hl ; L2 Video DCB next char address $3C00<=X<=$3FFF
1837   89B5 3E 1E                       ld      a, 1Eh          ; clear to end of current line
1838   89B7 CD 86 9A                    call    TAS_VID_DRIVER
1839   89BA 21 E8 3F                    ld      hl, SCREEN_START+3E8h	; 3FE8h
1840   89BD 22 20 40                    ld      (NEXT_CHAR_ADD_L2), hl ; L2 Video DCB next char address $3C00<=X<=$3FFF
1841   89C0 22 A9 9B                    ld      (NEXT_CHAR_ADD_TM), hl
1842   89C3 C9                          ret
1843   89C4             ; End of function sub_6981
1844   89C4             
1845   89C4             
1846   89C4             ; =============== S U B R O U T I N E =======================================
1847   89C4             
1848   89C4             ; output char in A, followed by a space to vid and return
1849   89C4             
1850   89C4             OUT_CHAR_SPC:                           ; CODE XREF: GET_COMMAND:replace_reg_pair↑p
1851   89C4                                                     ; GET_COMMAND:modify_memory↑p ...
1852   89C4 CD 86 9A                    call    TAS_VID_DRIVER
1853   89C7 C3 7D 92                    jp      SPC_VID_OUT     ; Output a SPC to video and return to caller
1854   89CA             ; End of function OUT_CHAR_SPC
1855   89CA             
1856   89CA             ; ---------------------------------------------------------------------------
1857   89CA             
1858   89CA             disassem_to_printer:                    ; CODE XREF: GET_COMMAND+62↑j
1859   89CA CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
1860   89CD CD 67 85                    call    HEX_to_HL       ; get 4 digit hex value into the HL register
1861   89D0 E5                          push    hl
1862   89D1 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
1863   89D4 CD 67 85                    call    HEX_to_HL       ; get 4 digit hex value into the HL register
1864   89D7 D1                          pop     de
1865   89D8 EB                          ex      de, hl
1866   89D9 CD 2E 99                    call    checkFDC        ; Look for FDC chip
1867   89DC C0                          ret     nz
1868   89DD E5                          push    hl
1869   89DE CD 6D 89                    call    SET_PROMPT_POS
1870   89E1 CD 11 8A                    call    CLEAR_VIDEO
1871   89E4 E1                          pop     hl
1872   89E5 22 D4 9E                    ld      (GEN_PTR_16), hl
1873   89E8             
1874   89E8             loc_69E8:                               ; CODE XREF: GET_COMMAND+9D1↓j
1875   89E8 3E 01                       ld      a, 1
1876   89EA 32 AB 9B                    ld      (PRINT_OUT_FLAG), a
1877   89ED 01 01 00                    ld      bc, 1
1878   89F0 D5                          push    de
1879   89F1 2A D4 9E                    ld      hl, (GEN_PTR_16)
1880   89F4 CD 0C 8B                    call    DISASSEMBLE
1881   89F7 AF                          xor     a
1882   89F8 32 AB 9B                    ld      (PRINT_OUT_FLAG), a
1883   89FB 3E 0D                       ld      a, 0Dh
1884   89FD CD B4 9A                    call    TAS_PTR_DRIVER
1885   8A00 CD E8 80                    call    GET_CHAR        ; get character, return in A
1886   8A03 2A D4 9E                    ld      hl, (GEN_PTR_16)
1887   8A06 2B                          dec     hl
1888   8A07 D1                          pop     de
1889   8A08 B7                          or      a
1890   8A09 ED 52                       sbc     hl, de
1891   8A0B FA E8 89                    jp      m, loc_69E8
1892   8A0E C3 65 83                    jp      SHOW_REGS
1893   8A11             
1894   8A11             ; =============== S U B R O U T I N E =======================================
1895   8A11             
1896   8A11             
1897   8A11             CLEAR_VIDEO:                            ; CODE XREF: RAM:6001↑p
1898   8A11                                                     ; GET_COMMAND+11↑p ...
1899   8A11 CD 1B 8A                    call    do_clear_screen
1900   8A14 AF                          xor     a
1901   8A15 32 3D 40                    ld      (Display_Control), a
1902   8A18 D3 FF                       out     (0FFh), a       ; ensure 64 character mode active
1903   8A1A C9                          ret
1904   8A1B             ; End of function CLEAR_VIDEO
1905   8A1B             
1906   8A1B             
1907   8A1B             ; =============== S U B R O U T I N E =======================================
1908   8A1B             
1909   8A1B             
1910   8A1B             do_clear_screen:                        ; CODE XREF: CLEAR_VIDEO↑p
1911   8A1B                                                     ; GET_COMMAND+12F6↓p
1912   8A1B E5                          push    hl
1913   8A1C D5                          push    de
1914   8A1D C5                          push    bc
1915   8A1E 21 00 3C                    ld      hl, SCREEN_START
1916   8A21 22 20 40                    ld      (NEXT_CHAR_ADD_L2), hl ; L2 Video DCB next char address $3C00<=X<=$3FFF
1917   8A24 11 01 3C                    ld      de, SCREEN_START+1	; 3C01h
1918   8A27 01 FF 03                    ld      bc, SCREEN_LEN-1	; 3FFh
1919   8A2A 36 20                       ld      (hl), 20h ; ' '
1920   8A2C ED B0                       ldir
1921   8A2E C1                          pop     bc
1922   8A2F D1                          pop     de
1923   8A30 E1                          pop     hl
1924   8A31 C9                          ret
1925   8A32             ; End of function do_clear_screen
1926   8A32             
1927   8A32             ; ---------------------------------------------------------------------------
1928   8A32             
1929   8A32             keep_screen:                            ; CODE XREF: GET_COMMAND+99↑j
1930   8A32 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
1931   8A35             
1932   8A35             loc_6A35:                               ; CODE XREF: GET_COMMAND+A0A↓j
1933   8A35 CD AA 85                    call    GET_HEX_CHAR
1934   8A38 28 21                       jr      z, set_user_screen_buffer
1935   8A3A FE 4E                       cp      4Eh ; 'N'
1936   8A3C 28 30                       jr      z, keep_screen_off
1937   8A3E FE 59                       cp      59h ; 'Y'
1938   8A40 28 34                       jr      z, keep_screen_on
1939   8A42 FE 0D                       cp      0Dh
1940   8A44 20 EF                       jr      nz, loc_6A35
1941   8A46 11 00 3C                    ld      de, SCREEN_START
1942   8A49 2A B9 9B                    ld      hl, (USER_SCREEN_ptr) ; ptr to user supplied $400 byte screen area
1943   8A4C 01 00 04                    ld      bc, SCREEN_LEN		; 400h
1944   8A4F ED B0                       ldir
1945   8A51             
1946   8A51             loc_6A51:                               ; CODE XREF: GET_COMMAND+A1C↓j
1947   8A51 3A 40 38                    ld      a, (KBD_ROW_40)
1948   8A54 FE 01                       cp      1
1949   8A56 28 F9                       jr      z, loc_6A51
1950   8A58 C3 F3 80                    jp      return_from_user
1951   8A5B             ; ---------------------------------------------------------------------------
1952   8A5B             
1953   8A5B             set_user_screen_buffer:                 ; CODE XREF: GET_COMMAND+9FE↑j
1954   8A5B CD 6C 85                    call    HEX_VAL_to_HL   ; 4 byte hex value to HL register
1955   8A5E 22 B9 9B                    ld      (USER_SCREEN_ptr), hl ; ptr to user supplied $400 byte screen area
1956   8A61 01 00 04                    ld      bc, SCREEN_LEN	; 400h
1957   8A64             
1958   8A64             loc_6A64:                               ; CODE XREF: GET_COMMAND+A31↓j
1959   8A64 3E 20                       ld      a, 20h ; ' '
1960   8A66 77                          ld      (hl), a
1961   8A67 23                          inc     hl
1962   8A68 0B                          dec     bc
1963   8A69 78                          ld      a, b
1964   8A6A B1                          or      c
1965   8A6B 20 F7                       jr      nz, loc_6A64
1966   8A6D C9                          ret
1967   8A6E             ; ---------------------------------------------------------------------------
1968   8A6E             
1969   8A6E             keep_screen_off:                        ; CODE XREF: GET_COMMAND+A02↑j
1970   8A6E CD 86 9A                    call    TAS_VID_DRIVER
1971   8A71 AF                          xor     a
1972   8A72 32 BB 9B                    ld      (KEEP_SCREEN_STATE), a ; 0 = keep screen off, 1 = keep screen on
1973   8A75 C9                          ret
1974   8A76             ; ---------------------------------------------------------------------------
1975   8A76             
1976   8A76             keep_screen_on:                         ; CODE XREF: GET_COMMAND+A06↑j
1977   8A76 CD 86 9A                    call    TAS_VID_DRIVER
1978   8A79 3E 01                       ld      a, 1
1979   8A7B 32 BB 9B                    ld      (KEEP_SCREEN_STATE), a ; 0 = keep screen off, 1 = keep screen on
1980   8A7E C9                          ret
1981   8A7F             
1982   8A7F             ; =============== S U B R O U T I N E =======================================
1983   8A7F             
1984   8A7F             ; check status of the BREAK key
1985   8A7F             
1986   8A7F             CHECK_BREAK:                            ; CODE XREF: GET_COMMAND+63F↑p
1987   8A7F                                                     ; GET_COMMAND+8AC↑p
1988   8A7F 3A 40 38                    ld      a, (KBD_ROW_40)
1989   8A82 E6 04                       and     4
1990   8A84 C9                          ret
1991   8A85             ; End of function CHECK_BREAK
1992   8A85             
1993   8A85             
1994   8A85             ; =============== S U B R O U T I N E =======================================
1995   8A85             
1996   8A85             
1997   8A85             GET_HEX_ADDRESS:                        ; CODE XREF: GET_COMMAND+48E↑p
1998   8A85                                                     ; GET_COMMAND+621↑p ...
1999   8A85 CD AA 85                    call    GET_HEX_CHAR
2000   8A88 CA 6C 85                    jp      z, HEX_VAL_to_HL ; 4 byte hex value to HL register
2001   8A8B FE 0D                       cp      0Dh
2002   8A8D 20 F6                       jr      nz, GET_HEX_ADDRESS
2003   8A8F 2A 08 9B                    ld      hl, (reg_PC) ; if return pressed, use saved PC value
2004   8A92 C3 3F 92                    jp      HL_to_HEX
2005   8A95             
2006   8A95             ; ---------------------------------------------------------------------------
2007   8A95             
2008   8A95             number_or_executions:                   ; CODE XREF: GET_COMMAND+9E↑j
2009   8A95 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
2010   8A98             
2011   8A98             loc_6A98:                               ; CODE XREF: GET_COMMAND+A6B↓j
2012   8A98                                                     ; GET_COMMAND+A6F↓j
2013   8A98 CD E8 80                    call    GET_CHAR        ; get character, return in A
2014   8A9B FE 0D                       cp      0Dh
2015   8A9D 28 1C                       jr      z, copy_EXEC1_to_EXEC2
2016   8A9F FE 49                       cp      49h ; 'I'
2017   8AA1 28 0A                       jr      z, loc_6AAD
2018   8AA3 FE 31                       cp      31h ; '1'
2019   8AA5 38 F1                       jr      c, loc_6A98
2020   8AA7 FE 3A                       cp      3Ah ; ':'
2021   8AA9 30 ED                       jr      nc, loc_6A98
2022   8AAB 18 1D                       jr      loc_6ACA
2023   8AAD             ; ---------------------------------------------------------------------------
2024   8AAD             
2025   8AAD             loc_6AAD:                               ; CODE XREF: GET_COMMAND+A67↑j
2026   8AAD CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
2027   8AB0             
2028   8AB0             ; =============== S U B R O U T I N E =======================================
2029   8AB0             
2030   8AB0             ; default all breakpoints to 1 execution only
2031   8AB0             
2032   8AB0             SET_EXEC1_to_1:                         ; CODE XREF: RAM:6022↑p
2033   8AB0 06 09                       ld      b, 9
2034   8AB2 21 68 9B                    ld      hl, EXEC1
2035   8AB5 3E 01                       ld      a, 1
2036   8AB7             
2037   8AB7             loc_6AB7:                               ; CODE XREF: SET_EXEC1_to_1+9↓j
2038   8AB7 77                          ld      (hl), a
2039   8AB8 23                          inc     hl
2040   8AB9 10 FC                       djnz    loc_6AB7
2041   8ABB             ; End of function SET_EXEC1_to_1
2042   8ABB             
2043   8ABB             
2044   8ABB             ; =============== S U B R O U T I N E =======================================
2045   8ABB             
2046   8ABB             
2047   8ABB             copy_EXEC1_to_EXEC2:                    ; CODE XREF: GET_COMMAND:loc_68AD↑p
2048   8ABB                                                     ; GET_COMMAND+A63↑j
2049   8ABB 06 09                       ld      b, 9
2050   8ABD 21 68 9B                    ld      hl, EXEC1
2051   8AC0 11 71 9B                    ld      de, EXEC2
2052   8AC3             
2053   8AC3             loc_6AC3:                               ; CODE XREF: copy_EXEC1_to_EXEC2+C↓j
2054   8AC3 7E                          ld      a, (hl)
2055   8AC4 23                          inc     hl
2056   8AC5 12                          ld      (de), a
2057   8AC6 13                          inc     de
2058   8AC7 10 FA                       djnz    loc_6AC3
2059   8AC9 C9                          ret
2060   8ACA             ; End of function copy_EXEC1_to_EXEC2
2061   8ACA             
2062   8ACA             ; ---------------------------------------------------------------------------
2063   8ACA             
2064   8ACA             loc_6ACA:                               ; CODE XREF: GET_COMMAND+A71↑j
2065   8ACA F5                          push    af
2066   8ACB CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
2067   8ACE F1                          pop     af
2068   8ACF D6 31                       sub     31h ; '1'
2069   8AD1 4F                          ld      c, a
2070   8AD2 06 00                       ld      b, 0
2071   8AD4 CD 88 85                    call    HEX_VAL_to_L    ; 2 byte hex value to L register (also in A)
2072   8AD7 21 68 9B                    ld      hl, EXEC1
2073   8ADA 09                          add     hl, bc
2074   8ADB 77                          ld      (hl), a
2075   8ADC 21 71 9B                    ld      hl, EXEC2
2076   8ADF 09                          add     hl, bc
2077   8AE0 77                          ld      (hl), a
2078   8AE1 C9                          ret
2079   8AE2             
2080   8AE2             ; =============== S U B R O U T I N E =======================================
2081   8AE2             
2082   8AE2             
2083   8AE2             sub_6AE2:                               ; CODE XREF: GET_COMMAND+633↑p
2084   8AE2                                                     ; GET_COMMAND+64B↑p ...
2085   8AE2 DD 21 3B 9B                 ld      ix, BREAKPOINTS ; 9 breakpoints (9 x 2 byte addresses)
2086   8AE6 06 09                       ld      b, 9
2087   8AE8 3E 01                       ld      a, 1
2088   8AEA             
2089   8AEA             loc_6AEA:                               ; CODE XREF: sub_6AE2+19↓j
2090   8AEA DD 5E 00                    ld      e, (ix+0)
2091   8AED DD 56 01                    ld      d, (ix+1)
2092   8AF0 DD 23                       inc     ix
2093   8AF2 DD 23                       inc     ix
2094   8AF4 B7                          or      a
2095   8AF5 EB                          ex      de, hl
2096   8AF6 ED 52                       sbc     hl, de
2097   8AF8 EB                          ex      de, hl
2098   8AF9 28 04                       jr      z, loc_6AFF
2099   8AFB 10 ED                       djnz    loc_6AEA
2100   8AFD B7                          or      a
2101   8AFE C9                          ret
2102   8AFF             ; ---------------------------------------------------------------------------
2103   8AFF             
2104   8AFF             loc_6AFF:                               ; CODE XREF: sub_6AE2+17↑j
2105   8AFF 3E 09                       ld      a, 9
2106   8B01 90                          sub     b
2107   8B02 4F                          ld      c, a
2108   8B03 06 00                       ld      b, 0
2109   8B05 21 71 9B                    ld      hl, EXEC2
2110   8B08 09                          add     hl, bc
2111   8B09 35                          dec     (hl)
2112   8B0A 37                          scf
2113   8B0B C9                          ret
2114   8B0C             ; End of function sub_6AE2
2115   8B0C             
2116   8B0C             
2117   8B0C             ; =============== S U B R O U T I N E =======================================
2118   8B0C             
2119   8B0C             
2120   8B0C             DISASSEMBLE:                            ; CODE XREF: SHOW_REGS+25↑p
2121   8B0C                                                     ; GET_COMMAND:loc_66F9↑p ...
2122   8B0C 22 D4 9E                    ld      (GEN_PTR_16), hl
2123   8B0F 22 D6 9E                    ld      (dis_DISASSEM_START), hl ; HL = Instruction Start Address
2124   8B12 ED 43 D8 9E                 ld      (dis_NUM_INSTRS), bc ; BC = number of instructions to disassemble
2125   8B16 32 8C 9B                    ld      (dis_DISPLAY_FLG), a  ; A = 0 (no display) , A = 1 (display dump)
2126   8B19 AF                          xor     a
2127   8B1A 32 EB 9E                    ld      (byte_7EEB), a
2128   8B1D 32 8D 9B                    ld      (byte_7B8D), a
2129   8B20             
2130   8B20             loc_6B20:                               ; CODE XREF: DISASSEMBLE+C9↓j
2131   8B20 3A E4 9E                    ld      a, (byte_7EE4)
2132   8B23 B7                          or      a
2133   8B24 28 05                       jr      z, loc_6B2B
2134   8B26 CD 7A 94                    call    sub_747A
2135   8B29 18 13                       jr      loc_6B3E
2136   8B2B             ; ---------------------------------------------------------------------------
2137   8B2B             
2138   8B2B             loc_6B2B:                               ; CODE XREF: DISASSEMBLE+18↑j
2139   8B2B 3A A6 9B                    ld      a, (byte_7BA6)
2140   8B2E FE 01                       cp      1
2141   8B30 28 0C                       jr      z, loc_6B3E
2142   8B32 3A E9 9E                    ld      a, (byte_7EE9)
2143   8B35 B7                          or      a
2144   8B36 20 06                       jr      nz, loc_6B3E
2145   8B38 CD 3F 92                    call    HL_to_HEX
2146   8B3B CD 82 92                    call    sub_7282
2147   8B3E             
2148   8B3E             loc_6B3E:                               ; CODE XREF: DISASSEMBLE+1D↑j
2149   8B3E                                                     ; DISASSEMBLE+24↑j ...
2150   8B3E 3A 8C 9B                    ld      a, (dis_DISPLAY_FLG)
2151   8B41 F5                          push    af
2152   8B42 AF                          xor     a
2153   8B43 32 8C 9B                    ld      (dis_DISPLAY_FLG), a
2154   8B46 CD D8 8B                    call    sub_6BD8
2155   8B49 F1                          pop     af
2156   8B4A 32 8C 9B                    ld      (dis_DISPLAY_FLG), a
2157   8B4D 3A E4 9E                    ld      a, (byte_7EE4)
2158   8B50 B7                          or      a
2159   8B51 C0                          ret     nz
2160   8B52 3A E9 9E                    ld      a, (byte_7EE9)
2161   8B55 B7                          or      a
2162   8B56 C0                          ret     nz
2163   8B57 CD 3B 91                    call    inc_PTR_16
2164   8B5A 2A D4 9E                    ld      hl, (GEN_PTR_16)
2165   8B5D ED 5B D6 9E                 ld      de, (dis_DISASSEM_START)
2166   8B61 ED 52                       sbc     hl, de
2167   8B63 45                          ld      b, l
2168   8B64 3A 8C 9B                    ld      a, (dis_DISPLAY_FLG)
2169   8B67 B7                          or      a
2170   8B68 78                          ld      a, b
2171   8B69 C8                          ret     z
2172   8B6A 2A D6 9E                    ld      hl, (dis_DISASSEM_START)
2173   8B6D 22 D4 9E                    ld      (GEN_PTR_16), hl
2174   8B70 3A A6 9B                    ld      a, (byte_7BA6)
2175   8B73 FE 01                       cp      1
2176   8B75 28 20                       jr      z, loc_6B97
2177   8B77 E5                          push    hl
2178   8B78 C5                          push    bc
2179   8B79             
2180   8B79             loc_6B79:                               ; CODE XREF: DISASSEMBLE+71↓j
2181   8B79 CD 46 91                    call    sub_7146
2182   8B7C 23                          inc     hl
2183   8B7D 10 FA                       djnz    loc_6B79
2184   8B7F C1                          pop     bc
2185   8B80 E1                          pop     hl
2186   8B81 C5                          push    bc
2187   8B82 3E 0E                       ld      a, 0Eh
2188   8B84 CD 96 90                    call    sub_7096
2189   8B87 C1                          pop     bc
2190   8B88             
2191   8B88             loc_6B88:                               ; CODE XREF: DISASSEMBLE+89↓j
2192   8B88 7E                          ld      a, (hl)
2193   8B89 FE 20                       cp      20h ; ' '
2194   8B8B 38 22                       jr      c, loc_6BAF
2195   8B8D FE 80                       cp      80h
2196   8B8F 30 1E                       jr      nc, loc_6BAF
2197   8B91 CD B8 90                    call    sub_70B8
2198   8B94             
2199   8B94             loc_6B94:                               ; CODE XREF: DISASSEMBLE+A6↓j
2200   8B94 23                          inc     hl
2201   8B95 10 F1                       djnz    loc_6B88
2202   8B97             
2203   8B97             loc_6B97:                               ; CODE XREF: DISASSEMBLE+69↑j
2204   8B97 CD D8 8B                    call    sub_6BD8
2205   8B9A CD 3B 91                    call    inc_PTR_16
2206   8B9D 3A 8C 9B                    ld      a, (dis_DISPLAY_FLG)
2207   8BA0 B7                          or      a
2208   8BA1 28 16                       jr      z, loc_6BB9
2209   8BA3 3A A6 9B                    ld      a, (byte_7BA6)
2210   8BA6 FE 01                       cp      1
2211   8BA8 20 0A                       jr      nz, loc_6BB4
2212   8BAA CD 5D 85                    call    sub_655D
2213   8BAD 18 0A                       jr      loc_6BB9
2214   8BAF             ; ---------------------------------------------------------------------------
2215   8BAF             
2216   8BAF             loc_6BAF:                               ; CODE XREF: DISASSEMBLE+7F↑j
2217   8BAF                                                     ; DISASSEMBLE+83↑j
2218   8BAF CD 8D 92                    call    sub_728D
2219   8BB2 18 E0                       jr      loc_6B94
2220   8BB4             ; ---------------------------------------------------------------------------
2221   8BB4             
2222   8BB4             loc_6BB4:                               ; CODE XREF: DISASSEMBLE+9C↑j
2223   8BB4 3E 0D                       ld      a, 0Dh
2224   8BB6 CD 86 9A                    call    TAS_VID_DRIVER
2225   8BB9             
2226   8BB9             loc_6BB9:                               ; CODE XREF: DISASSEMBLE+95↑j
2227   8BB9                                                     ; DISASSEMBLE+A1↑j
2228   8BB9 ED 4B D8 9E                 ld      bc, (dis_NUM_INSTRS)
2229   8BBD 0B                          dec     bc
2230   8BBE ED 43 D8 9E                 ld      (dis_NUM_INSTRS), bc
2231   8BC2 ED 5B D6 9E                 ld      de, (dis_DISASSEM_START)
2232   8BC6 AF                          xor     a
2233   8BC7 ED 52                       sbc     hl, de
2234   8BC9 78                          ld      a, b
2235   8BCA B1                          or      c
2236   8BCB 20 02                       jr      nz, loc_6BCF
2237   8BCD 7D                          ld      a, l
2238   8BCE C9                          ret
2239   8BCF             ; ---------------------------------------------------------------------------
2240   8BCF             
2241   8BCF             loc_6BCF:                               ; CODE XREF: DISASSEMBLE+BF↑j
2242   8BCF 2A D4 9E                    ld      hl, (GEN_PTR_16)
2243   8BD2 22 D6 9E                    ld      (dis_DISASSEM_START), hl
2244   8BD5 C3 20 8B                    jp      loc_6B20
2245   8BD8             ; End of function DISASSEMBLE
2246   8BD8             
2247   8BD8             
2248   8BD8             ; =============== S U B R O U T I N E =======================================
2249   8BD8             
2250   8BD8             
2251   8BD8             sub_6BD8:                               ; CODE XREF: DISASSEMBLE+3A↑p
2252   8BD8                                                     ; DISASSEMBLE:loc_6B97↑p
2253   8BD8             
2254   8BD8 2A D4 9E                    ld      hl, (GEN_PTR_16)
2255   8BDB 7E                          ld      a, (hl)
2256   8BDC 21 30 9C                    ld      hl, byte_7C30
2257   8BDF 06 15                       ld      b, 15h
2258   8BE1 11 BB 9D                    ld      de, byte_7DBB
2259   8BE4 CD B0 92                    call    sub_72B0
2260   8BE7 C8                          ret     z
2261   8BE8 AF                          xor     a
2262   8BE9 32 8A 9B                    ld      (byte_7B8A), a
2263   8BEC 32 8B 9B                    ld      (byte_7B8B), a
2264   8BEF 7E                          ld      a, (hl)
2265   8BF0 FE DD                       cp      0DDh
2266   8BF2 28 04                       jr      z, loc_6BF8
2267   8BF4 FE FD                       cp      0FDh
2268   8BF6 20 1C                       jr      nz, loc_6C14
2269   8BF8             
2270   8BF8             loc_6BF8:                               ; CODE XREF: sub_6BD8+1A↑j
2271   8BF8 32 8A 9B                    ld      (byte_7B8A), a
2272   8BFB 47                          ld      b, a
2273   8BFC CD 3B 91                    call    inc_PTR_16
2274   8BFF 7E                          ld      a, (hl)
2275   8C00 FE 66                       cp      66h ; 'f'
2276   8C02 28 10                       jr      z, loc_6C14
2277   8C04 FE 6E                       cp      6Eh ; 'n'
2278   8C06 28 0C                       jr      z, loc_6C14
2279   8C08 FE 74                       cp      74h ; 't'
2280   8C0A 28 08                       jr      z, loc_6C14
2281   8C0C FE 75                       cp      75h ; 'u'
2282   8C0E 28 04                       jr      z, loc_6C14
2283   8C10 78                          ld      a, b
2284   8C11 32 8B 9B                    ld      (byte_7B8B), a
2285   8C14             
2286   8C14             loc_6C14:                               ; CODE XREF: sub_6BD8+1E↑j
2287   8C14                                                     ; sub_6BD8+2A↑j ...
2288   8C14 7E                          ld      a, (hl)
2289   8C15 E6 C0                       and     0C0h
2290   8C17 FE 40                       cp      40h ; '@'
2291   8C19 20 14                       jr      nz, loc_6C2F
2292   8C1B 7E                          ld      a, (hl)
2293   8C1C F5                          push    af
2294   8C1D 21 91 9C                    ld      hl, byte_7C91
2295   8C20 CD 61 90                    call    sub_7061
2296   8C23 F1                          pop     af
2297   8C24 F5                          push    af
2298   8C25 CD 29 91                    call    sub_7129
2299   8C28 CD 79 92                    call    sub_7279
2300   8C2B F1                          pop     af
2301   8C2C C3 37 91                    jp      loc_7137
2302   8C2F             ; ---------------------------------------------------------------------------
2303   8C2F             
2304   8C2F             loc_6C2F:                               ; CODE XREF: sub_6BD8+41↑j
2305   8C2F 7E                          ld      a, (hl)
2306   8C30 FE 3A                       cp      3Ah ; ':'
2307   8C32 20 0B                       jr      nz, loc_6C3F
2308   8C34 21 9A 9C                    ld      hl, byte_7C9A
2309   8C37 CD 61 90                    call    sub_7061
2310   8C3A CD 3B 91                    call    inc_PTR_16
2311   8C3D 18 2E                       jr      loc_6C6D
2312   8C3F             ; ---------------------------------------------------------------------------
2313   8C3F             
2314   8C3F             loc_6C3F:                               ; CODE XREF: sub_6BD8+5A↑j
2315   8C3F FE 32                       cp      32h ; '2'
2316   8C41 20 17                       jr      nz, loc_6C5A
2317   8C43 21 91 9C                    ld      hl, byte_7C91
2318   8C46 CD 61 90                    call    sub_7061
2319   8C49 3E 28                       ld      a, 28h ; '('
2320   8C4B CD B8 90                    call    sub_70B8
2321   8C4E CD 3B 91                    call    inc_PTR_16
2322   8C51 CD 73 91                    call    sub_7173
2323   8C54 21 A0 9C                    ld      hl, byte_7CA0
2324   8C57 C3 6F 90                    jp      SHOW_INSTR_HDR
2325   8C5A             ; ---------------------------------------------------------------------------
2326   8C5A             
2327   8C5A             loc_6C5A:                               ; CODE XREF: sub_6BD8+69↑j
2328   8C5A FE 2A                       cp      2Ah ; '*'
2329   8C5C 20 12                       jr      nz, loc_6C70
2330   8C5E 21 91 9C                    ld      hl, byte_7C91
2331   8C61 CD 61 90                    call    sub_7061
2332   8C64 CD 8B 91                    call    sub_718B
2333   8C67 CD 79 92                    call    sub_7279
2334   8C6A CD 3B 91                    call    inc_PTR_16
2335   8C6D             
2336   8C6D             loc_6C6D:                               ; CODE XREF: sub_6BD8+65↑j
2337   8C6D C3 67 91                    jp      sub_7167
2338   8C70             ; ---------------------------------------------------------------------------
2339   8C70             
2340   8C70             loc_6C70:                               ; CODE XREF: sub_6BD8+84↑j
2341   8C70 FE 22                       cp      22h ; '"'
2342   8C72 20 12                       jr      nz, loc_6C86
2343   8C74 21 91 9C                    ld      hl, byte_7C91
2344   8C77 CD 61 90                    call    sub_7061
2345   8C7A CD 3B 91                    call    inc_PTR_16
2346   8C7D CD 67 91                    call    sub_7167
2347   8C80 CD 79 92                    call    sub_7279
2348   8C83 C3 8B 91                    jp      sub_718B
2349   8C86             ; ---------------------------------------------------------------------------
2350   8C86             
2351   8C86             loc_6C86:                               ; CODE XREF: sub_6BD8+9A↑j
2352   8C86 FE C6                       cp      0C6h
2353   8C88 20 0C                       jr      nz, loc_6C96
2354   8C8A 21 BA 9C                    ld      hl, byte_7CBA
2355   8C8D CD 61 90                    call    sub_7061
2356   8C90 CD 3B 91                    call    inc_PTR_16
2357   8C93 C3 43 91                    jp      sub_7143
2358   8C96             ; ---------------------------------------------------------------------------
2359   8C96             
2360   8C96             loc_6C96:                               ; CODE XREF: sub_6BD8+B0↑j
2361   8C96 FE C3                       cp      0C3h
2362   8C98 20 11                       jr      nz, loc_6CAB
2363   8C9A 3E 01                       ld      a, 1
2364   8C9C 32 8D 9B                    ld      (byte_7B8D), a
2365   8C9F 21 D3 9C                    ld      hl, byte_7CD3
2366   8CA2 CD 61 90                    call    sub_7061
2367   8CA5             
2368   8CA5             loc_6CA5:                               ; CODE XREF: sub_6BD8+214↓j
2369   8CA5 CD 3B 91                    call    inc_PTR_16
2370   8CA8 C3 73 91                    jp      sub_7173
2371   8CAB             ; ---------------------------------------------------------------------------
2372   8CAB             
2373   8CAB             loc_6CAB:                               ; CODE XREF: sub_6BD8+C0↑j
2374   8CAB FE 18                       cp      18h
2375   8CAD 20 0A                       jr      nz, loc_6CB9
2376   8CAF 3E 03                       ld      a, 3
2377   8CB1 32 8D 9B                    ld      (byte_7B8D), a
2378   8CB4 21 D7 9C                    ld      hl, byte_7CD7
2379   8CB7 18 1C                       jr      loc_6CD5
2380   8CB9             ; ---------------------------------------------------------------------------
2381   8CB9             
2382   8CB9             loc_6CB9:                               ; CODE XREF: sub_6BD8+D5↑j
2383   8CB9 FE 38                       cp      38h ; '8'
2384   8CBB 20 0E                       jr      nz, loc_6CCB
2385   8CBD 21 DB 9C                    ld      hl, byte_7CDB
2386   8CC0 CD C5 8C                    call    sub_6CC5
2387   8CC3 18 10                       jr      loc_6CD5
2388   8CC5             ; End of function sub_6BD8
2389   8CC5             
2390   8CC5             
2391   8CC5             ; =============== S U B R O U T I N E =======================================
2392   8CC5             
2393   8CC5             
2394   8CC5             sub_6CC5:                               ; CODE XREF: sub_6BD8+E8↑p
2395   8CC5                                                     ; sub_6BD8+FA↓p ...
2396   8CC5 3E 05                       ld      a, 5
2397   8CC7 32 8D 9B                    ld      (byte_7B8D), a
2398   8CCA C9                          ret
2399   8CCB             ; End of function sub_6CC5
2400   8CCB             
2401   8CCB             ; ---------------------------------------------------------------------------
2402   8CCB             
2403   8CCB             loc_6CCB:                               ; CODE XREF: sub_6BD8+E3↑j
2404   8CCB FE 30                       cp      30h ; '0'
2405   8CCD 20 0F                       jr      nz, loc_6CDE
2406   8CCF 21 E1 9C                    ld      hl, byte_7CE1
2407   8CD2 CD C5 8C                    call    sub_6CC5
2408   8CD5             
2409   8CD5             loc_6CD5:                               ; CODE XREF: sub_6BD8+DF↑j
2410   8CD5                                                     ; sub_6BD8+EB↑j ...
2411   8CD5 CD 61 90                    call    sub_7061
2412   8CD8 CD 3B 91                    call    inc_PTR_16
2413   8CDB C3 F5 91                    jp      sub_71F5
2414   8CDE             ; ---------------------------------------------------------------------------
2415   8CDE             
2416   8CDE             loc_6CDE:                               ; CODE XREF: sub_6BD8+F5↑j
2417   8CDE FE 28                       cp      28h ; '('
2418   8CE0 20 08                       jr      nz, loc_6CEA
2419   8CE2 21 E8 9C                    ld      hl, byte_7CE8
2420   8CE5 CD C5 8C                    call    sub_6CC5
2421   8CE8 18 EB                       jr      loc_6CD5
2422   8CEA             ; ---------------------------------------------------------------------------
2423   8CEA             
2424   8CEA             loc_6CEA:                               ; CODE XREF: sub_6BD8+108↑j
2425   8CEA FE 20                       cp      20h ; ' '
2426   8CEC 20 08                       jr      nz, loc_6CF6
2427   8CEE 21 EE 9C                    ld      hl, byte_7CEE
2428   8CF1 CD C5 8C                    call    sub_6CC5
2429   8CF4 18 DF                       jr      loc_6CD5
2430   8CF6             ; ---------------------------------------------------------------------------
2431   8CF6             
2432   8CF6             loc_6CF6:                               ; CODE XREF: sub_6BD8+114↑j
2433   8CF6 FE E9                       cp      0E9h
2434   8CF8 20 17                       jr      nz, loc_6D11
2435   8CFA 21 D3 9C                    ld      hl, byte_7CD3
2436   8CFD 3E 06                       ld      a, 6
2437   8CFF 32 8D 9B                    ld      (byte_7B8D), a
2438   8D02 CD 61 90                    call    sub_7061
2439   8D05 3E 28                       ld      a, 28h ; '('
2440   8D07 CD B8 90                    call    sub_70B8
2441   8D0A CD 8B 91                    call    sub_718B
2442   8D0D 3E 29                       ld      a, 29h ; ')'
2443   8D0F 18 44                       jr      loc_6D55
2444   8D11             ; ---------------------------------------------------------------------------
2445   8D11             
2446   8D11             loc_6D11:                               ; CODE XREF: sub_6BD8+120↑j
2447   8D11 FE 10                       cp      10h
2448   8D13 20 0A                       jr      nz, loc_6D1F
2449   8D15 21 F5 9C                    ld      hl, byte_7CF5
2450   8D18 3E 04                       ld      a, 4
2451   8D1A 32 8D 9B                    ld      (byte_7B8D), a
2452   8D1D 18 B6                       jr      loc_6CD5
2453   8D1F             ; ---------------------------------------------------------------------------
2454   8D1F             
2455   8D1F             loc_6D1F:                               ; CODE XREF: sub_6BD8+13B↑j
2456   8D1F FE CD                       cp      0CDh
2457   8D21 20 11                       jr      nz, loc_6D34
2458   8D23 21 FB 9C                    ld      hl, byte_7CFB
2459   8D26 3E 07                       ld      a, 7
2460   8D28 32 8D 9B                    ld      (byte_7B8D), a
2461   8D2B CD 61 90                    call    sub_7061
2462   8D2E             
2463   8D2E             loc_6D2E:                               ; CODE XREF: sub_6BD8+22C↓j
2464   8D2E CD 3B 91                    call    inc_PTR_16
2465   8D31 C3 73 91                    jp      sub_7173
2466   8D34             ; ---------------------------------------------------------------------------
2467   8D34             
2468   8D34             loc_6D34:                               ; CODE XREF: sub_6BD8+149↑j
2469   8D34 FE C9                       cp      0C9h
2470   8D36 20 0B                       jr      nz, loc_6D43
2471   8D38 21 01 9D                    ld      hl, byte_7D01
2472   8D3B 3E 09                       ld      a, 9
2473   8D3D 32 8D 9B                    ld      (byte_7B8D), a
2474   8D40 C3 61 90                    jp      sub_7061
2475   8D43             ; ---------------------------------------------------------------------------
2476   8D43             
2477   8D43             loc_6D43:                               ; CODE XREF: sub_6BD8+15E↑j
2478   8D43 FE DB                       cp      0DBh
2479   8D45 20 11                       jr      nz, loc_6D58
2480   8D47 21 0B 9D                    ld      hl, byte_7D0B
2481   8D4A CD 61 90                    call    sub_7061
2482   8D4D CD 3B 91                    call    inc_PTR_16
2483   8D50 CD 43 91                    call    sub_7143
2484   8D53 3E 29                       ld      a, 29h ; ')'
2485   8D55             
2486   8D55             loc_6D55:                               ; CODE XREF: sub_6BD8+137↑j
2487   8D55 C3 B8 90                    jp      sub_70B8
2488   8D58             ; ---------------------------------------------------------------------------
2489   8D58             
2490   8D58             loc_6D58:                               ; CODE XREF: sub_6BD8+16D↑j
2491   8D58 FE D3                       cp      0D3h
2492   8D5A 20 12                       jr      nz, loc_6D6E
2493   8D5C 21 12 9D                    ld      hl, byte_7D12
2494   8D5F CD 61 90                    call    sub_7061
2495   8D62 CD 3B 91                    call    inc_PTR_16
2496   8D65 CD 43 91                    call    sub_7143
2497   8D68 21 A0 9C                    ld      hl, byte_7CA0
2498   8D6B C3 6F 90                    jp      SHOW_INSTR_HDR
2499   8D6E             ; ---------------------------------------------------------------------------
2500   8D6E             
2501   8D6E             loc_6D6E:                               ; CODE XREF: sub_6BD8+182↑j
2502   8D6E FE CE                       cp      0CEh
2503   8D70 20 05                       jr      nz, loc_6D77
2504   8D72 21 18 9D                    ld      hl, byte_7D18
2505   8D75 18 19                       jr      loc_6D90
2506   8D77             ; ---------------------------------------------------------------------------
2507   8D77             
2508   8D77             loc_6D77:                               ; CODE XREF: sub_6BD8+198↑j
2509   8D77 FE D6                       cp      0D6h
2510   8D79 20 05                       jr      nz, loc_6D80
2511   8D7B 21 1F 9D                    ld      hl, byte_7D1F
2512   8D7E 18 10                       jr      loc_6D90
2513   8D80             ; ---------------------------------------------------------------------------
2514   8D80             
2515   8D80             loc_6D80:                               ; CODE XREF: sub_6BD8+1A1↑j
2516   8D80 FE DE                       cp      0DEh
2517   8D82 20 05                       jr      nz, loc_6D89
2518   8D84 21 24 9D                    ld      hl, byte_7D24
2519   8D87 18 07                       jr      loc_6D90
2520   8D89             ; ---------------------------------------------------------------------------
2521   8D89             
2522   8D89             loc_6D89:                               ; CODE XREF: sub_6BD8+1AA↑j
2523   8D89 FE E6                       cp      0E6h
2524   8D8B 20 0B                       jr      nz, loc_6D98
2525   8D8D 21 2B 9D                    ld      hl, byte_7D2B
2526   8D90             
2527   8D90             loc_6D90:                               ; CODE XREF: sub_6BD8+19D↑j
2528   8D90                                                     ; sub_6BD8+1A6↑j ...
2529   8D90 CD 61 90                    call    sub_7061
2530   8D93 CD 3B 91                    call    inc_PTR_16
2531   8D96 18 30                       jr      loc_6DC8
2532   8D98             ; ---------------------------------------------------------------------------
2533   8D98             
2534   8D98             loc_6D98:                               ; CODE XREF: sub_6BD8+1B3↑j
2535   8D98 FE F6                       cp      0F6h
2536   8D9A 20 05                       jr      nz, loc_6DA1
2537   8D9C 21 30 9D                    ld      hl, byte_7D30
2538   8D9F 18 EF                       jr      loc_6D90
2539   8DA1             ; ---------------------------------------------------------------------------
2540   8DA1             
2541   8DA1             loc_6DA1:                               ; CODE XREF: sub_6BD8+1C2↑j
2542   8DA1 FE EE                       cp      0EEh
2543   8DA3 20 05                       jr      nz, loc_6DAA
2544   8DA5 21 34 9D                    ld      hl, byte_7D34
2545   8DA8 18 E6                       jr      loc_6D90
2546   8DAA             ; ---------------------------------------------------------------------------
2547   8DAA             
2548   8DAA             loc_6DAA:                               ; CODE XREF: sub_6BD8+1CB↑j
2549   8DAA FE FE                       cp      0FEh
2550   8DAC 20 05                       jr      nz, loc_6DB3
2551   8DAE 21 39 9D                    ld      hl, byte_7D39
2552   8DB1 18 DD                       jr      loc_6D90
2553   8DB3             ; ---------------------------------------------------------------------------
2554   8DB3             
2555   8DB3             loc_6DB3:                               ; CODE XREF: sub_6BD8+1D4↑j
2556   8DB3 E6 C7                       and     0C7h
2557   8DB5 FE 06                       cp      6
2558   8DB7 20 12                       jr      nz, loc_6DCB
2559   8DB9 21 91 9C                    ld      hl, byte_7C91
2560   8DBC CD 61 90                    call    sub_7061
2561   8DBF CD 25 91                    call    sub_7125
2562   8DC2 CD 79 92                    call    sub_7279
2563   8DC5 CD 3B 91                    call    inc_PTR_16
2564   8DC8             
2565   8DC8             loc_6DC8:                               ; CODE XREF: sub_6BD8+1BE↑j
2566   8DC8 C3 43 91                    jp      sub_7143
2567   8DCB             ; ---------------------------------------------------------------------------
2568   8DCB             
2569   8DCB             loc_6DCB:                               ; CODE XREF: sub_6BD8+1DF↑j
2570   8DCB FE 04                       cp      4
2571   8DCD 20 08                       jr      nz, loc_6DD7
2572   8DCF 21 C1 9C                    ld      hl, byte_7CC1
2573   8DD2 CD 61 90                    call    sub_7061
2574   8DD5 18 64                       jr      loc_6E3B
2575   8DD7             ; ---------------------------------------------------------------------------
2576   8DD7             
2577   8DD7             loc_6DD7:                               ; CODE XREF: sub_6BD8+1F5↑j
2578   8DD7 FE C2                       cp      0C2h
2579   8DD9 20 14                       jr      nz, loc_6DEF
2580   8DDB 3E 02                       ld      a, 2
2581   8DDD 32 8D 9B                    ld      (byte_7B8D), a
2582   8DE0 21 D3 9C                    ld      hl, byte_7CD3
2583   8DE3 CD 61 90                    call    sub_7061
2584   8DE6 CD CF 91                    call    sub_71CF
2585   8DE9 CD 79 92                    call    sub_7279
2586   8DEC C3 A5 8C                    jp      loc_6CA5
2587   8DEF             ; ---------------------------------------------------------------------------
2588   8DEF             
2589   8DEF             loc_6DEF:                               ; CODE XREF: sub_6BD8+201↑j
2590   8DEF FE C4                       cp      0C4h
2591   8DF1 20 14                       jr      nz, loc_6E07
2592   8DF3 21 FB 9C                    ld      hl, byte_7CFB
2593   8DF6 3E 08                       ld      a, 8
2594   8DF8 32 8D 9B                    ld      (byte_7B8D), a
2595   8DFB CD 61 90                    call    sub_7061
2596   8DFE CD CF 91                    call    sub_71CF
2597   8E01 CD 79 92                    call    sub_7279
2598   8E04 C3 2E 8D                    jp      loc_6D2E
2599   8E07             ; ---------------------------------------------------------------------------
2600   8E07             
2601   8E07             loc_6E07:                               ; CODE XREF: sub_6BD8+219↑j
2602   8E07 FE C0                       cp      0C0h
2603   8E09 20 0E                       jr      nz, loc_6E19
2604   8E0B 21 01 9D                    ld      hl, byte_7D01
2605   8E0E 3E 0A                       ld      a, 0Ah
2606   8E10 32 8D 9B                    ld      (byte_7B8D), a
2607   8E13 CD 61 90                    call    sub_7061
2608   8E16 C3 CF 91                    jp      sub_71CF
2609   8E19             ; ---------------------------------------------------------------------------
2610   8E19             
2611   8E19             loc_6E19:                               ; CODE XREF: sub_6BD8+231↑j
2612   8E19 FE C7                       cp      0C7h
2613   8E1B 20 14                       jr      nz, loc_6E31
2614   8E1D 3E 0B                       ld      a, 0Bh
2615   8E1F 32 8D 9B                    ld      (byte_7B8D), a
2616   8E22 21 06 9D                    ld      hl, byte_7D06
2617   8E25 CD 61 90                    call    sub_7061
2618   8E28 2A D4 9E                    ld      hl, (GEN_PTR_16)
2619   8E2B 7E                          ld      a, (hl)
2620   8E2C E6 38                       and     38h ; '8'
2621   8E2E C3 47 91                    jp      sub_7147
2622   8E31             ; ---------------------------------------------------------------------------
2623   8E31             
2624   8E31             loc_6E31:                               ; CODE XREF: sub_6BD8+243↑j
2625   8E31 FE 05                       cp      5
2626   8E33 20 09                       jr      nz, loc_6E3E
2627   8E35 21 CE 9C                    ld      hl, byte_7CCE
2628   8E38 CD 61 90                    call    sub_7061
2629   8E3B             
2630   8E3B             loc_6E3B:                               ; CODE XREF: sub_6BD8+1FD↑j
2631   8E3B C3 25 91                    jp      sub_7125
2632   8E3E             ; ---------------------------------------------------------------------------
2633   8E3E             
2634   8E3E             loc_6E3E:                               ; CODE XREF: sub_6BD8+25B↑j
2635   8E3E 7E                          ld      a, (hl)
2636   8E3F E6 CF                       and     0CFh
2637   8E41 FE 01                       cp      1
2638   8E43 20 12                       jr      nz, loc_6E57
2639   8E45 21 91 9C                    ld      hl, byte_7C91
2640   8E48 CD 61 90                    call    sub_7061
2641   8E4B CD 94 91                    call    sub_7194
2642   8E4E CD 3B 91                    call    inc_PTR_16
2643   8E51 CD 79 92                    call    sub_7279
2644   8E54 C3 73 91                    jp      sub_7173
2645   8E57             ; ---------------------------------------------------------------------------
2646   8E57             
2647   8E57             loc_6E57:                               ; CODE XREF: sub_6BD8+26B↑j
2648   8E57 FE C5                       cp      0C5h
2649   8E59 20 06                       jr      nz, loc_6E61
2650   8E5B 21 AF 9C                    ld      hl, byte_7CAF
2651   8E5E 18 08                       jr      loc_6E68
2652   8E60 C9                          ret
2653   8E61             ; ---------------------------------------------------------------------------
2654   8E61             
2655   8E61             loc_6E61:                               ; CODE XREF: sub_6BD8+281↑j
2656   8E61 FE C1                       cp      0C1h
2657   8E63 20 09                       jr      nz, loc_6E6E
2658   8E65 21 B5 9C                    ld      hl, byte_7CB5
2659   8E68             
2660   8E68             loc_6E68:                               ; CODE XREF: sub_6BD8+286↑j
2661   8E68 CD 61 90                    call    sub_7061
2662   8E6B C3 BB 91                    jp      loc_71BB
2663   8E6E             ; ---------------------------------------------------------------------------
2664   8E6E             
2665   8E6E             loc_6E6E:                               ; CODE XREF: sub_6BD8+28B↑j
2666   8E6E 7E                          ld      a, (hl)
2667   8E6F E6 F8                       and     0F8h
2668   8E71 FE 80                       cp      80h
2669   8E73 20 08                       jr      nz, loc_6E7D
2670   8E75 21 BA 9C                    ld      hl, byte_7CBA
2671   8E78 CD 61 90                    call    sub_7061
2672   8E7B 18 25                       jr      loc_6EA2
2673   8E7D             ; ---------------------------------------------------------------------------
2674   8E7D             
2675   8E7D             loc_6E7D:                               ; CODE XREF: sub_6BD8+29B↑j
2676   8E7D FE 88                       cp      88h
2677   8E7F 20 05                       jr      nz, loc_6E86
2678   8E81 21 18 9D                    ld      hl, byte_7D18
2679   8E84 18 19                       jr      loc_6E9F
2680   8E86             ; ---------------------------------------------------------------------------
2681   8E86             
2682   8E86             loc_6E86:                               ; CODE XREF: sub_6BD8+2A7↑j
2683   8E86 FE 90                       cp      90h
2684   8E88 20 05                       jr      nz, loc_6E8F
2685   8E8A 21 1F 9D                    ld      hl, byte_7D1F
2686   8E8D 18 10                       jr      loc_6E9F
2687   8E8F             ; ---------------------------------------------------------------------------
2688   8E8F             
2689   8E8F             loc_6E8F:                               ; CODE XREF: sub_6BD8+2B0↑j
2690   8E8F FE 98                       cp      98h
2691   8E91 20 05                       jr      nz, loc_6E98
2692   8E93 21 24 9D                    ld      hl, byte_7D24
2693   8E96 18 07                       jr      loc_6E9F
2694   8E98             ; ---------------------------------------------------------------------------
2695   8E98             
2696   8E98             loc_6E98:                               ; CODE XREF: sub_6BD8+2B9↑j
2697   8E98 FE A0                       cp      0A0h
2698   8E9A 20 09                       jr      nz, loc_6EA5
2699   8E9C 21 2B 9D                    ld      hl, byte_7D2B
2700   8E9F             
2701   8E9F             loc_6E9F:                               ; CODE XREF: sub_6BD8+2AC↑j
2702   8E9F                                                     ; sub_6BD8+2B5↑j ...
2703   8E9F CD 61 90                    call    sub_7061
2704   8EA2             
2705   8EA2             loc_6EA2:                               ; CODE XREF: sub_6BD8+2A3↑j
2706   8EA2 C3 33 91                    jp      loc_7133
2707   8EA5             ; ---------------------------------------------------------------------------
2708   8EA5             
2709   8EA5             loc_6EA5:                               ; CODE XREF: sub_6BD8+2C2↑j
2710   8EA5 FE B0                       cp      0B0h
2711   8EA7 20 05                       jr      nz, loc_6EAE
2712   8EA9 21 30 9D                    ld      hl, byte_7D30
2713   8EAC 18 F1                       jr      loc_6E9F
2714   8EAE             ; ---------------------------------------------------------------------------
2715   8EAE             
2716   8EAE             loc_6EAE:                               ; CODE XREF: sub_6BD8+2CF↑j
2717   8EAE FE A8                       cp      0A8h
2718   8EB0 20 05                       jr      nz, loc_6EB7
2719   8EB2 21 34 9D                    ld      hl, byte_7D34
2720   8EB5 18 E8                       jr      loc_6E9F
2721   8EB7             ; ---------------------------------------------------------------------------
2722   8EB7             
2723   8EB7             loc_6EB7:                               ; CODE XREF: sub_6BD8+2D8↑j
2724   8EB7 FE B8                       cp      0B8h
2725   8EB9 20 05                       jr      nz, loc_6EC0
2726   8EBB 21 39 9D                    ld      hl, byte_7D39
2727   8EBE 18 DF                       jr      loc_6E9F
2728   8EC0             ; ---------------------------------------------------------------------------
2729   8EC0             
2730   8EC0             loc_6EC0:                               ; CODE XREF: sub_6BD8+2E1↑j
2731   8EC0 7E                          ld      a, (hl)
2732   8EC1 E6 CF                       and     0CFh
2733   8EC3 FE 09                       cp      9
2734   8EC5 20 14                       jr      nz, loc_6EDB
2735   8EC7 21 AE 9D                    ld      hl, byte_7DAE
2736   8ECA CD 61 90                    call    sub_7061
2737   8ECD CD 8B 91                    call    sub_718B
2738   8ED0 CD 79 92                    call    sub_7279
2739   8ED3 18 03                       jr      loc_6ED8
2740   8ED5             ; ---------------------------------------------------------------------------
2741   8ED5             
2742   8ED5             loc_6ED5:                               ; CODE XREF: sub_6BD8+30A↓j
2743   8ED5                                                     ; sub_6BD8+313↓j
2744   8ED5 CD 61 90                    call    sub_7061
2745   8ED8             
2746   8ED8             loc_6ED8:                               ; CODE XREF: sub_6BD8+2FB↑j
2747   8ED8 C3 94 91                    jp      sub_7194
2748   8EDB             ; ---------------------------------------------------------------------------
2749   8EDB             
2750   8EDB             loc_6EDB:                               ; CODE XREF: sub_6BD8+2ED↑j
2751   8EDB FE 03                       cp      3
2752   8EDD 20 05                       jr      nz, loc_6EE4
2753   8EDF 21 C1 9C                    ld      hl, byte_7CC1
2754   8EE2 18 F1                       jr      loc_6ED5
2755   8EE4             ; ---------------------------------------------------------------------------
2756   8EE4             
2757   8EE4             loc_6EE4:                               ; CODE XREF: sub_6BD8+305↑j
2758   8EE4 FE 0B                       cp      0Bh
2759   8EE6 20 05                       jr      nz, loc_6EED
2760   8EE8 21 CE 9C                    ld      hl, byte_7CCE
2761   8EEB 18 E8                       jr      loc_6ED5
2762   8EED             ; ---------------------------------------------------------------------------
2763   8EED             
2764   8EED             loc_6EED:                               ; CODE XREF: sub_6BD8+30E↑j
2765   8EED 7E                          ld      a, (hl)
2766   8EEE FE CB                       cp      0CBh
2767   8EF0 C2 9D 8F                    jp      nz, loc_6F9D
2768   8EF3 CD 3B 91                    call    inc_PTR_16
2769   8EF6 3A 8A 9B                    ld      a, (byte_7B8A)
2770   8EF9 B7                          or      a
2771   8EFA C4 3B 91                    call    nz, inc_PTR_16
2772   8EFD 7E                          ld      a, (hl)
2773   8EFE E6 F8                       and     0F8h
2774   8F00 20 05                       jr      nz, loc_6F07
2775   8F02 21 3D 9D                    ld      hl, byte_7D3D
2776   8F05 18 22                       jr      loc_6F29
2777   8F07             ; ---------------------------------------------------------------------------
2778   8F07             
2779   8F07             loc_6F07:                               ; CODE XREF: sub_6BD8+328↑j
2780   8F07 FE 10                       cp      10h
2781   8F09 20 05                       jr      nz, loc_6F10
2782   8F0B 21 42 9D                    ld      hl, byte_7D42
2783   8F0E 18 19                       jr      loc_6F29
2784   8F10             ; ---------------------------------------------------------------------------
2785   8F10             
2786   8F10             loc_6F10:                               ; CODE XREF: sub_6BD8+331↑j
2787   8F10 FE 08                       cp      8
2788   8F12 20 05                       jr      nz, loc_6F19
2789   8F14 21 46 9D                    ld      hl, byte_7D46
2790   8F17 18 10                       jr      loc_6F29
2791   8F19             ; ---------------------------------------------------------------------------
2792   8F19             
2793   8F19             loc_6F19:                               ; CODE XREF: sub_6BD8+33A↑j
2794   8F19 FE 18                       cp      18h
2795   8F1B 20 05                       jr      nz, loc_6F22
2796   8F1D 21 4B 9D                    ld      hl, byte_7D4B
2797   8F20 18 07                       jr      loc_6F29
2798   8F22             ; ---------------------------------------------------------------------------
2799   8F22             
2800   8F22             loc_6F22:                               ; CODE XREF: sub_6BD8+343↑j
2801   8F22 FE 20                       cp      20h ; ' '
2802   8F24 20 25                       jr      nz, loc_6F4B
2803   8F26 21 4F 9D                    ld      hl, byte_7D4F
2804   8F29             
2805   8F29             loc_6F29:                               ; CODE XREF: sub_6BD8+32D↑j
2806   8F29                                                     ; sub_6BD8+336↑j ...
2807   8F29 CD 61 90                    call    sub_7061
2808   8F2C 3A 8A 9B                    ld      a, (byte_7B8A)
2809   8F2F B7                          or      a
2810   8F30 28 48                       jr      z, loc_6F7A
2811   8F32             
2812   8F32             loc_6F32:                               ; CODE XREF: sub_6BD8+3BA↓j
2813   8F32 2A D4 9E                    ld      hl, (GEN_PTR_16)
2814   8F35 7E                          ld      a, (hl)
2815   8F36 E6 07                       and     7
2816   8F38 FE 06                       cp      6
2817   8F3A 28 06                       jr      z, loc_6F42
2818   8F3C CD DA 90                    call    sub_70DA
2819   8F3F CD 79 92                    call    sub_7279
2820   8F42             
2821   8F42             loc_6F42:                               ; CODE XREF: sub_6BD8+362↑j
2822   8F42                                                     ; sub_6BD8+3A5↓j
2823   8F42 CD 06 92                    call    dec2_PTR_16
2824   8F45 CD 0F 92                    call    sub_720F
2825   8F48 C3 3B 91                    jp      inc_PTR_16
2826   8F4B             ; ---------------------------------------------------------------------------
2827   8F4B             
2828   8F4B             loc_6F4B:                               ; CODE XREF: sub_6BD8+34C↑j
2829   8F4B FE 28                       cp      28h ; '('
2830   8F4D 20 05                       jr      nz, loc_6F54
2831   8F4F 21 59 9D                    ld      hl, byte_7D59
2832   8F52 18 D5                       jr      loc_6F29
2833   8F54             ; ---------------------------------------------------------------------------
2834   8F54             
2835   8F54             loc_6F54:                               ; CODE XREF: sub_6BD8+375↑j
2836   8F54 FE 30                       cp      30h ; '0'
2837   8F56 20 05                       jr      nz, loc_6F5D
2838   8F58 21 5E 9D                    ld      hl, byte_7D5E
2839   8F5B 18 CC                       jr      loc_6F29
2840   8F5D             ; ---------------------------------------------------------------------------
2841   8F5D             
2842   8F5D             loc_6F5D:                               ; CODE XREF: sub_6BD8+37E↑j
2843   8F5D FE 38                       cp      38h ; '8'
2844   8F5F 20 05                       jr      nz, loc_6F66
2845   8F61 21 54 9D                    ld      hl, byte_7D54
2846   8F64 18 C3                       jr      loc_6F29
2847   8F66             ; ---------------------------------------------------------------------------
2848   8F66             
2849   8F66             loc_6F66:                               ; CODE XREF: sub_6BD8+387↑j
2850   8F66 7E                          ld      a, (hl)
2851   8F67 E6 C0                       and     0C0h
2852   8F69 FE 40                       cp      40h ; '@'
2853   8F6B 20 12                       jr      nz, loc_6F7F
2854   8F6D 21 63 9D                    ld      hl, byte_7D63
2855   8F70 CD 61 90                    call    sub_7061
2856   8F73 CD E1 91                    call    sub_71E1
2857   8F76 3A 8A 9B                    ld      a, (byte_7B8A)
2858   8F79 B7                          or      a
2859   8F7A             
2860   8F7A             loc_6F7A:                               ; CODE XREF: sub_6BD8+358↑j
2861   8F7A                                                     ; sub_6BD8+3B8↓j
2862   8F7A CA 33 91                    jp      z, loc_7133
2863   8F7D 18 C3                       jr      loc_6F42
2864   8F7F             ; ---------------------------------------------------------------------------
2865   8F7F             
2866   8F7F             loc_6F7F:                               ; CODE XREF: sub_6BD8+393↑j
2867   8F7F FE C0                       cp      0C0h
2868   8F81 20 11                       jr      nz, loc_6F94
2869   8F83 21 68 9D                    ld      hl, byte_7D68
2870   8F86             
2871   8F86             loc_6F86:                               ; CODE XREF: sub_6BD8+3C3↓j
2872   8F86 CD 61 90                    call    sub_7061
2873   8F89 CD E1 91                    call    sub_71E1
2874   8F8C 3A 8A 9B                    ld      a, (byte_7B8A)
2875   8F8F B7                          or      a
2876   8F90 28 E8                       jr      z, loc_6F7A
2877   8F92 18 9E                       jr      loc_6F32
2878   8F94             ; ---------------------------------------------------------------------------
2879   8F94             
2880   8F94             loc_6F94:                               ; CODE XREF: sub_6BD8+3A9↑j
2881   8F94 FE 80                       cp      80h
2882   8F96 20 25                       jr      nz, loc_6FBD
2883   8F98 21 6D 9D                    ld      hl, byte_7D6D
2884   8F9B 18 E9                       jr      loc_6F86
2885   8F9D             ; ---------------------------------------------------------------------------
2886   8F9D             
2887   8F9D             loc_6F9D:                               ; CODE XREF: sub_6BD8+318↑j
2888   8F9D 3A 8A 9B                    ld      a, (byte_7B8A)
2889   8FA0 B7                          or      a
2890   8FA1 28 17                       jr      z, loc_6FBA
2891   8FA3 7E                          ld      a, (hl)
2892   8FA4 FE F9                       cp      0F9h
2893   8FA6 20 05                       jr      nz, loc_6FAD
2894   8FA8 21 9E 9D                    ld      hl, byte_7D9E
2895   8FAB 18 07                       jr      loc_6FB4
2896   8FAD             ; ---------------------------------------------------------------------------
2897   8FAD             
2898   8FAD             loc_6FAD:                               ; CODE XREF: sub_6BD8+3CE↑j
2899   8FAD FE E3                       cp      0E3h
2900   8FAF 20 0C                       jr      nz, loc_6FBD
2901   8FB1 21 A5 9D                    ld      hl, byte_7DA5
2902   8FB4             
2903   8FB4             loc_6FB4:                               ; CODE XREF: sub_6BD8+3D3↑j
2904   8FB4 CD 61 90                    call    sub_7061
2905   8FB7 C3 2F 92                    jp      loc_722F
2906   8FBA             ; ---------------------------------------------------------------------------
2907   8FBA             
2908   8FBA             loc_6FBA:                               ; CODE XREF: sub_6BD8+3C9↑j
2909   8FBA 7E                          ld      a, (hl)
2910   8FBB FE ED                       cp      0EDh
2911   8FBD             
2912   8FBD             loc_6FBD:                               ; CODE XREF: sub_6BD8+3BE↑j
2913   8FBD                                                     ; sub_6BD8+3D7↑j
2914   8FBD C2 9C 92                    jp      nz, loc_729C
2915   8FC0 CD 3B 91                    call    inc_PTR_16
2916   8FC3 7E                          ld      a, (hl)
2917   8FC4 21 45 9C                    ld      hl, byte_7C45
2918   8FC7 06 1C                       ld      b, 1Ch
2919   8FC9 11 3F 9E                    ld      de, byte_7E3F
2920   8FCC CD B0 92                    call    sub_72B0
2921   8FCF C8                          ret     z
2922   8FD0 7E                          ld      a, (hl)
2923   8FD1 E6 CF                       and     0CFh
2924   8FD3 FE 4B                       cp      4Bh ; 'K'
2925   8FD5 20 12                       jr      nz, loc_6FE9
2926   8FD7 21 91 9C                    ld      hl, byte_7C91
2927   8FDA CD 61 90                    call    sub_7061
2928   8FDD CD 94 91                    call    sub_7194
2929   8FE0 CD 79 92                    call    sub_7279
2930   8FE3 CD 3B 91                    call    inc_PTR_16
2931   8FE6 C3 67 91                    jp      sub_7167
2932   8FE9             ; ---------------------------------------------------------------------------
2933   8FE9             
2934   8FE9             loc_6FE9:                               ; CODE XREF: sub_6BD8+3FD↑j
2935   8FE9 FE 43                       cp      43h ; 'C'
2936   8FEB 20 1B                       jr      nz, loc_7008
2937   8FED 21 91 9C                    ld      hl, byte_7C91
2938   8FF0 CD 61 90                    call    sub_7061
2939   8FF3 CD 3B 91                    call    inc_PTR_16
2940   8FF6 CD 67 91                    call    sub_7167
2941   8FF9 CD 06 92                    call    dec2_PTR_16
2942   8FFC CD 79 92                    call    sub_7279
2943   8FFF CD 94 91                    call    sub_7194
2944   9002 CD 3B 91                    call    inc_PTR_16
2945   9005 C3 3B 91                    jp      inc_PTR_16
2946   9008             ; ---------------------------------------------------------------------------
2947   9008             
2948   9008             loc_7008:                               ; CODE XREF: sub_6BD8+413↑j
2949   9008 7E                          ld      a, (hl)
2950   9009 E6 CF                       and     0CFh
2951   900B FE 4A                       cp      4Ah ; 'J'
2952   900D 20 05                       jr      nz, loc_7014
2953   900F 21 72 9D                    ld      hl, byte_7D72
2954   9012 18 07                       jr      loc_701B
2955   9014             ; ---------------------------------------------------------------------------
2956   9014             
2957   9014             loc_7014:                               ; CODE XREF: sub_6BD8+435↑j
2958   9014 FE 42                       cp      42h ; 'B'
2959   9016 20 09                       jr      nz, loc_7021
2960   9018 21 7A 9D                    ld      hl, byte_7D7A
2961   901B             
2962   901B             loc_701B:                               ; CODE XREF: sub_6BD8+43A↑j
2963   901B CD 61 90                    call    sub_7061
2964   901E C3 94 91                    jp      sub_7194
2965   9021             ; ---------------------------------------------------------------------------
2966   9021             
2967   9021             loc_7021:                               ; CODE XREF: sub_6BD8+43E↑j
2968   9021 7E                          ld      a, (hl)
2969   9022 FE 4D                       cp      4Dh ; 'M'
2970   9024 20 0A                       jr      nz, loc_7030
2971   9026 21 82 9D                    ld      hl, byte_7D82
2972   9029             
2973   9029             loc_7029:                               ; CODE XREF: sub_6BD8+45F↓j
2974   9029 3E 09                       ld      a, 9
2975   902B 32 8D 9B                    ld      (byte_7B8D), a
2976   902E 18 31                       jr      sub_7061
2977   9030             ; ---------------------------------------------------------------------------
2978   9030             
2979   9030             loc_7030:                               ; CODE XREF: sub_6BD8+44C↑j
2980   9030 FE 45                       cp      45h ; 'E'
2981   9032 20 05                       jr      nz, loc_7039
2982   9034 21 87 9D                    ld      hl, byte_7D87
2983   9037 18 F0                       jr      loc_7029
2984   9039             ; ---------------------------------------------------------------------------
2985   9039             
2986   9039             loc_7039:                               ; CODE XREF: sub_6BD8+45A↑j
2987   9039 E6 C7                       and     0C7h
2988   903B FE 40                       cp      40h ; '@'
2989   903D 20 11                       jr      nz, loc_7050
2990   903F 21 8C 9D                    ld      hl, byte_7D8C
2991   9042 CD 61 90                    call    sub_7061
2992   9045 CD 25 91                    call    sub_7125
2993   9048 CD 79 92                    call    sub_7279
2994   904B 21 90 9D                    ld      hl, byte_7D90
2995   904E 18 1F                       jr      SHOW_INSTR_HDR
2996   9050             ; ---------------------------------------------------------------------------
2997   9050             
2998   9050             loc_7050:                               ; CODE XREF: sub_6BD8+465↑j
2999   9050 7E                          ld      a, (hl)
3000   9051 E6 C7                       and     0C7h
3001   9053 FE 41                       cp      41h ; 'A'
3002   9055 C2 9C 92                    jp      nz, loc_729C
3003   9058 21 95 9D                    ld      hl, byte_7D95
3004   905B CD 61 90                    call    sub_7061
3005   905E C3 25 91                    jp      sub_7125
3006   9061             
3007   9061             ; =============== S U B R O U T I N E =======================================
3008   9061             
3009   9061             
3010   9061             sub_7061:                               ; CODE XREF: sub_6BD8+48↑p
3011   9061                                                     ; sub_6BD8+5F↑p ...
3012   9061 2B                          dec     hl
3013   9062 3A E4 9E                    ld      a, (byte_7EE4)
3014   9065 B7                          or      a
3015   9066 20 20                       jr      nz, loc_7088
3016   9068 3A 8C 9B                    ld      a, (dis_DISPLAY_FLG)
3017   906B B7                          or      a
3018   906C C8                          ret     z
3019   906D 18 20                       jr      loc_708F
3020   906F             ; End of function sub_7061
3021   906F             
3022   906F             
3023   906F             ; =============== S U B R O U T I N E =======================================
3024   906F             
3025   906F             
3026   906F             SHOW_INSTR_HDR:                               ; CODE XREF: RAM:601F↑p
3027   906F                                                     ; SHOW_REGS+83↑p ...
3028   906F             
3029   906F 3A E4 9E                    ld      a, (byte_7EE4)
3030   9072 B7                          or      a
3031   9073 20 05                       jr      nz, loc_707A
3032   9075 3A 8C 9B                    ld      a, (dis_DISPLAY_FLG)
3033   9078 B7                          or      a
3034   9079 C8                          ret     z
3035   907A             
3036   907A             loc_707A:                               ; CODE XREF: SHOW_INSTR_HDR+4↑j
3037   907A                                                     ; SHOW_INSTR_HDR+47↓j
3038   907A 7E                          ld      a, (hl)
3039   907B FE 03                       cp      3
3040   907D C8                          ret     z
3041   907E FE 09                       cp      9
3042   9080 20 2C                       jr      nz, loc_70AE
3043   9082 3A E4 9E                    ld      a, (byte_7EE4)
3044   9085 B7                          or      a
3045   9086 28 07                       jr      z, loc_708F
3046   9088             
3047   9088             loc_7088:                               ; CODE XREF: sub_7061+5↑j
3048   9088 3E 09                       ld      a, 9
3049   908A CD B2 93                    call    sub_73B2
3050   908D 18 23                       jr      loc_70B2
3051   908F             ; ---------------------------------------------------------------------------
3052   908F             
3053   908F             loc_708F:                               ; CODE XREF: sub_7061+C↑j
3054   908F                                                     ; SHOW_INSTR_HDR+17↑j
3055   908F 3E 13                       ld      a, 13h
3056   9091 CD 96 90                    call    sub_7096
3057   9094 18 1C                       jr      loc_70B2
3058   9096             ; End of function SHOW_INSTR_HDR
3059   9096             
3060   9096             
3061   9096             ; =============== S U B R O U T I N E =======================================
3062   9096             
3063   9096             
3064   9096             sub_7096:                               ; CODE XREF: DISASSEMBLE+78↑p
3065   9096                                                     ; SHOW_INSTR_HDR+22↑p ...
3066   9096 4F                          ld      c, a
3067   9097 3A 20 40                    ld      a, (NEXT_CHAR_ADD_L2) ; L2 Video DCB next char address $3C00<=X<=$3FFF
3068   909A E6 3F                       and     3Fh ; '?'
3069   909C 47                          ld      b, a
3070   909D B9                          cp      c
3071   909E 79                          ld      a, c
3072   909F 38 05                       jr      c, loc_70A6
3073   90A1 78                          ld      a, b
3074   90A2 E6 38                       and     38h ; '8'
3075   90A4 C6 08                       add     a, 8
3076   90A6             
3077   90A6             loc_70A6:                               ; CODE XREF: sub_7096+9↑j
3078   90A6 90                          sub     b
3079   90A7 47                          ld      b, a
3080   90A8             
3081   90A8             loc_70A8:                               ; CODE XREF: sub_7096+15↓j
3082   90A8 CD 82 92                    call    sub_7282
3083   90AB 10 FB                       djnz    loc_70A8
3084   90AD C9                          ret
3085   90AE             ; End of function sub_7096
3086   90AE             
3087   90AE             ; ---------------------------------------------------------------------------
3088   90AE             
3089   90AE             loc_70AE:                               ; CODE XREF: SHOW_INSTR_HDR+11↑j
3090   90AE 7E                          ld      a, (hl)
3091   90AF CD B8 90                    call    sub_70B8
3092   90B2             
3093   90B2             loc_70B2:                               ; CODE XREF: SHOW_INSTR_HDR+1E↑j
3094   90B2                                                     ; SHOW_INSTR_HDR+25↑j
3095   90B2 23                          inc     hl
3096   90B3 FE 0D                       cp      0Dh
3097   90B5 C8                          ret     z
3098   90B6 18 C2                       jr      loc_707A
3099   90B8             
3100   90B8             ; =============== S U B R O U T I N E =======================================
3101   90B8             
3102   90B8             
3103   90B8             sub_70B8:                               ; CODE XREF: DISASSEMBLE+85↑p
3104   90B8                                                     ; sub_6BD8+73↑p ...
3105   90B8 F5                          push    af
3106   90B9 3A E4 9E                    ld      a, (byte_7EE4)
3107   90BC B7                          or      a
3108   90BD 28 04                       jr      z, loc_70C3
3109   90BF F1                          pop     af
3110   90C0 C3 B2 93                    jp      sub_73B2
3111   90C3             ; ---------------------------------------------------------------------------
3112   90C3             
3113   90C3             loc_70C3:                               ; CODE XREF: sub_70B8+5↑j
3114   90C3 3A 8C 9B                    ld      a, (dis_DISPLAY_FLG)
3115   90C6 B7                          or      a
3116   90C7 20 02                       jr      nz, loc_70CB
3117   90C9             
3118   90C9             loc_70C9:                               ; CODE XREF: sub_70B8+1C↓j
3119   90C9 F1                          pop     af
3120   90CA C9                          ret
3121   90CB             ; ---------------------------------------------------------------------------
3122   90CB             
3123   90CB             loc_70CB:                               ; CODE XREF: sub_70B8+F↑j
3124   90CB F1                          pop     af
3125   90CC CD 86 9A                    call    TAS_VID_DRIVER
3126   90CF F5                          push    af
3127   90D0 3A AB 9B                    ld      a, (PRINT_OUT_FLAG)
3128   90D3 B7                          or      a
3129   90D4 28 F3                       jr      z, loc_70C9
3130   90D6 F1                          pop     af
3131   90D7 C3 B4 9A                    jp      TAS_PTR_DRIVER
3132   90DA             ; End of function sub_70B8
3133   90DA             
3134   90DA             
3135   90DA             ; =============== S U B R O U T I N E =======================================
3136   90DA             
3137   90DA             
3138   90DA             sub_70DA:                               ; CODE XREF: sub_6BD8+364↑p
3139   90DA FE 04                       cp      4
3140   90DC 38 12                       jr      c, loc_70F0
3141   90DE 20 04                       jr      nz, loc_70E4
3142   90E0 3E 48                       ld      a, 'H'
3143   90E2 18 D4                       jr      sub_70B8
3144   90E4             ; ---------------------------------------------------------------------------
3145   90E4             
3146   90E4             loc_70E4:                               ; CODE XREF: sub_70DA+4↑j
3147   90E4 FE 05                       cp      5
3148   90E6 20 0C                       jr      nz, loc_70F4
3149   90E8 3E 4C                       ld      a, 'L'
3150   90EA 18 CC                       jr      sub_70B8
3151   90EC             ; ---------------------------------------------------------------------------
3152   90EC             
3153   90EC             loc_70EC:                               ; CODE XREF: sub_7129+8↓j
3154   90EC                                                     ; sub_6BD8+561↓j
3155   90EC FE 04                       cp      4
3156   90EE 30 04                       jr      nc, loc_70F4
3157   90F0             
3158   90F0             loc_70F0:                               ; CODE XREF: sub_70DA+2↑j
3159   90F0 C6 42                       add     a, 'B'
3160   90F2 18 C4                       jr      sub_70B8
3161   90F4             ; ---------------------------------------------------------------------------
3162   90F4             
3163   90F4             loc_70F4:                               ; CODE XREF: sub_70DA+C↑j
3164   90F4                                                     ; sub_70DA+14↑j
3165   90F4 FE 07                       cp      7
3166   90F6 38 04                       jr      c, loc_70FC
3167   90F8 3E 41                       ld      a, 'A'
3168   90FA 18 BC                       jr      sub_70B8
3169   90FC             ; ---------------------------------------------------------------------------
3170   90FC             
3171   90FC             loc_70FC:                               ; CODE XREF: sub_70DA+1C↑j
3172   90FC FE 05                       cp      5
3173   90FE 28 06                       jr      z, loc_7106
3174   9100 30 16                       jr      nc, loc_7118
3175   9102 3E 48                       ld      a, 'H'
3176   9104 18 02                       jr      loc_7108
3177   9106             ; ---------------------------------------------------------------------------
3178   9106             
3179   9106             loc_7106:                               ; CODE XREF: sub_70DA+24↑j
3180   9106 3E 4C                       ld      a, 'L'
3181   9108             
3182   9108             loc_7108:                               ; CODE XREF: sub_70DA+2A↑j
3183   9108 CD B8 90                    call    sub_70B8
3184   910B 3A 8B 9B                    ld      a, (byte_7B8B)
3185   910E FE DD                       cp      0DDh
3186   9110 D8                          ret     c
3187   9111 3E 58                       ld      a, 58h ; 'X'
3188   9113 28 A3                       jr      z, sub_70B8
3189   9115 3C                          inc     a
3190   9116 18 A0                       jr      sub_70B8
3191   9118             ; ---------------------------------------------------------------------------
3192   9118             
3193   9118             loc_7118:                               ; CODE XREF: sub_70DA+26↑j
3194   9118 3A 8A 9B                    ld      a, (byte_7B8A)
3195   911B B7                          or      a
3196   911C C2 0F 92                    jp      nz, sub_720F
3197   911F 21 95 9C                    ld      hl, HL_ascii    ; Text for (HL)
3198   9122 C3 6F 90                    jp      SHOW_INSTR_HDR
3199   9125             ; End of function sub_70DA
3200   9125             
3201   9125             
3202   9125             ; =============== S U B R O U T I N E =======================================
3203   9125             
3204   9125             
3205   9125             sub_7125:                               ; CODE XREF: sub_6BD8+1E7↑p
3206   9125                                                     ; sub_6BD8:loc_6E3B↑j ...
3207   9125 2A D4 9E                    ld      hl, (GEN_PTR_16)
3208   9128 7E                          ld      a, (hl)
3209   9129             ; End of function sub_7125
3210   9129             
3211   9129             
3212   9129             ; =============== S U B R O U T I N E =======================================
3213   9129             
3214   9129             
3215   9129             sub_7129:                               ; CODE XREF: sub_6BD8+4D↑p
3216   9129 E6 38                       and     38h ; '8'
3217   912B CB 3F                       srl     a
3218   912D CB 3F                       srl     a
3219   912F CB 3F                       srl     a
3220   9131 18 B9                       jr      loc_70EC
3221   9133             ; End of function sub_7129
3222   9133             
3223   9133             ; ---------------------------------------------------------------------------
3224   9133             
3225   9133             loc_7133:                               ; CODE XREF: sub_6BD8:loc_6EA2↑j
3226   9133                                                     ; sub_6BD8:loc_6F7A↑j
3227   9133 2A D4 9E                    ld      hl, (GEN_PTR_16)
3228   9136 7E                          ld      a, (hl)
3229   9137             
3230   9137             loc_7137:                               ; CODE XREF: sub_6BD8+54↑j
3231   9137 E6 07                       and     7
3232   9139 18 B1                       jr      loc_70EC
3233   913B             
3234   913B             ; =============== S U B R O U T I N E =======================================
3235   913B             
3236   913B             ; Increment general purpose 16 bit pointer by 1
3237   913B             
3238   913B             inc_PTR_16:	
3239   913B 2A D4 9E    		ld      hl, (GEN_PTR_16)
3240   913E 23                          inc     hl
3241   913F 22 D4 9E                    ld      (GEN_PTR_16), hl
3242   9142 C9                          ret
3243   9143             
3244   9143             ; =============== S U B R O U T I N E =======================================
3245   9143             
3246   9143             
3247   9143             sub_7143:                               ; CODE XREF: sub_6BD8+BB↑j
3248   9143                                                     ; sub_6BD8+178↑p ...
3249   9143 2A D4 9E                    ld      hl, (GEN_PTR_16)
3250   9146             ; End of function sub_7143
3251   9146             
3252   9146             
3253   9146             ; =============== S U B R O U T I N E =======================================
3254   9146             
3255   9146             
3256   9146             sub_7146:                               ; CODE XREF: DISASSEMBLE:loc_6B79↑p
3257   9146                                                     ; sub_7173+F↓p ...
3258   9146 7E                          ld      a, (hl)
3259   9147             ; End of function sub_7146
3260   9147             
3261   9147             
3262   9147             ; =============== S U B R O U T I N E =======================================
3263   9147             
3264   9147             
3265   9147             sub_7147:                               ; CODE XREF: SHOW_REGS+90↑p
3266   9147                                                     ; GET_COMMAND+4B1↑p ...
3267   9147 F5                          push    af
3268   9148 3A E4 9E                    ld      a, (byte_7EE4)
3269   914B B7                          or      a
3270   914C C2 9F 94                    jp      nz, loc_749F
3271   914F F1                          pop     af
3272   9150             ; End of function sub_7147
3273   9150             
3274   9150             
3275   9150             ; =============== S U B R O U T I N E =======================================
3276   9150             
3277   9150             
3278   9150             sub_7150:                               ; CODE XREF: sub_748C+21↓p
3279   9150 F5                          push    af
3280   9151 CB 3F                       srl     a
3281   9153 CB 3F                       srl     a
3282   9155 CB 3F                       srl     a
3283   9157 CB 3F                       srl     a
3284   9159 CD 5F 91                    call    sub_715F
3285   915C F1                          pop     af
3286   915D E6 0F                       and     0Fh
3287   915F             ; End of function sub_7150
3288   915F             
3289   915F             
3290   915F             ; =============== S U B R O U T I N E =======================================
3291   915F             
3292   915F             
3293   915F             sub_715F:                               ; CODE XREF: sub_7150+9↑p
3294   915F                                                     ; sub_724D+9↓p ...
3295   915F C6 90                       add     a, 90h
3296   9161 27                          daa
3297   9162 CE 40                       adc     a, 40h ; '@'
3298   9164 27                          daa
3299   9165 18 4A                       jr      loc_71B1
3300   9167             ; End of function sub_715F
3301   9167             
3302   9167             
3303   9167             ; =============== S U B R O U T I N E =======================================
3304   9167             
3305   9167             
3306   9167             sub_7167:                               ; CODE XREF: sub_6BD8:loc_6C6D↑j
3307   9167                                                     ; sub_6BD8+A5↑p ...
3308   9167 3E 28                       ld      a, 28h ; '('
3309   9169 CD B8 90                    call    sub_70B8
3310   916C CD 73 91                    call    sub_7173
3311   916F 3E 29                       ld      a, 29h ; ')'
3312   9171 18 3E                       jr      loc_71B1
3313   9173             ; End of function sub_7167
3314   9173             
3315   9173             
3316   9173             ; =============== S U B R O U T I N E =======================================
3317   9173             
3318   9173             
3319   9173             sub_7173:                               ; CODE XREF: SHOW_REGS+46↑p
3320   9173                                                     ; GET_COMMAND:loc_6609↑p ...
3321   9173             
3322   9173 3A E9 9E                    ld      a, (byte_7EE9)
3323   9176 B7                          or      a
3324   9177 C2 B5 94                    jp      nz, loc_74B5
3325   917A 3A E4 9E                    ld      a, (byte_7EE4)
3326   917D B7                          or      a
3327   917E C2 C4 94                    jp      nz, loc_74C4
3328   9181 23                          inc     hl
3329   9182 CD 46 91                    call    sub_7146
3330   9185 2B                          dec     hl
3331   9186 CD 46 91                    call    sub_7146
3332   9189 18 B0                       jr      inc_PTR_16
3333   918B             ; End of function sub_7173
3334   918B             
3335   918B             
3336   918B             ; =============== S U B R O U T I N E =======================================
3337   918B             
3338   918B             
3339   918B             sub_718B:                               ; CODE XREF: sub_6BD8+8C↑p
3340   918B                                                     ; sub_6BD8+AB↑j ...
3341   918B 06 00                       ld      b, 0
3342   918D 0E 04                       ld      c, 4
3343   918F 21 61 9C                    ld      hl, byte_7C61
3344   9192 18 1F                       jr      loc_71B3
3345   9194             ; End of function sub_718B
3346   9194             
3347   9194             
3348   9194             ; =============== S U B R O U T I N E =======================================
3349   9194             
3350   9194             
3351   9194             sub_7194:                               ; CODE XREF: sub_6BD8+273↑p
3352   9194                                                     ; sub_6BD8:loc_6ED8↑j ...
3353   9194             
3354   9194 2A D4 9E                    ld      hl, (GEN_PTR_16)
3355   9197 7E                          ld      a, (hl)
3356   9198 E6 30                       and     30h ; '0'
3357   919A CB 3F                       srl     a
3358   919C CB 3F                       srl     a
3359   919E CB 3F                       srl     a
3360   91A0 4F                          ld      c, a
3361   91A1 06 00                       ld      b, 0
3362   91A3 21 69 9C                    ld      hl, byte_7C69
3363   91A6             
3364   91A6             loc_71A6:                               ; CODE XREF: sub_6BD8+5F5↓j
3365   91A6 FE 04                       cp      4
3366   91A8 28 09                       jr      z, loc_71B3
3367   91AA             
3368   91AA             loc_71AA:                               ; CODE XREF: sub_7194+23↓j
3369   91AA                                                     ; sub_71CF+10↓j
3370   91AA 09                          add     hl, bc
3371   91AB 7E                          ld      a, (hl)
3372   91AC CD B8 90                    call    sub_70B8
3373   91AF 23                          inc     hl
3374   91B0 7E                          ld      a, (hl)
3375   91B1             
3376   91B1             loc_71B1:                               ; CODE XREF: sub_715F+6↑j
3377   91B1                                                     ; sub_7167+A↑j
3378   91B1 18 79                       jr      loc_722C
3379   91B3             ; ---------------------------------------------------------------------------
3380   91B3             
3381   91B3             loc_71B3:                               ; CODE XREF: sub_718B+7↑j
3382   91B3                                                     ; sub_7194+14↑j
3383   91B3 3A 8A 9B                    ld      a, (byte_7B8A)
3384   91B6 B7                          or      a
3385   91B7 28 F1                       jr      z, loc_71AA
3386   91B9 18 74                       jr      loc_722F
3387   91BB             ; End of function sub_7194
3388   91BB             
3389   91BB             ; ---------------------------------------------------------------------------
3390   91BB             
3391   91BB             loc_71BB:                               ; CODE XREF: sub_6BD8+293↑j
3392   91BB 2A D4 9E                    ld      hl, (GEN_PTR_16)
3393   91BE 7E                          ld      a, (hl)
3394   91BF E6 30                       and     30h ; '0'
3395   91C1 CB 3F                       srl     a
3396   91C3 CB 3F                       srl     a
3397   91C5 CB 3F                       srl     a
3398   91C7 4F                          ld      c, a
3399   91C8 06 00                       ld      b, 0
3400   91CA 21 61 9C                    ld      hl, byte_7C61
3401   91CD 18 D7                       jr      loc_71A6
3402   91CF             
3403   91CF             ; =============== S U B R O U T I N E =======================================
3404   91CF             
3405   91CF             
3406   91CF             sub_71CF:                               ; CODE XREF: sub_6BD8+20E↑p
3407   91CF                                                     ; sub_6BD8+226↑p ...
3408   91CF 2A D4 9E                    ld      hl, (GEN_PTR_16)
3409   91D2 7E                          ld      a, (hl)
3410   91D3 E6 38                       and     38h ; '8'
3411   91D5 CB 3F                       srl     a
3412   91D7 CB 3F                       srl     a
3413   91D9 4F                          ld      c, a
3414   91DA 06 00                       ld      b, 0
3415   91DC 21 81 9C                    ld      hl, byte_7C81
3416   91DF 18 C9                       jr      loc_71AA
3417   91E1             ; End of function sub_71CF
3418   91E1             
3419   91E1             
3420   91E1             ; =============== S U B R O U T I N E =======================================
3421   91E1             
3422   91E1             
3423   91E1             sub_71E1:                               ; CODE XREF: sub_6BD8+39B↑p
3424   91E1                                                     ; sub_6BD8+3B1↑p
3425   91E1 2A D4 9E                    ld      hl, (GEN_PTR_16)
3426   91E4 7E                          ld      a, (hl)
3427   91E5 E6 38                       and     38h ; '8'
3428   91E7 CB 3F                       srl     a
3429   91E9 CB 3F                       srl     a
3430   91EB CB 3F                       srl     a
3431   91ED C6 30                       add     a, 30h ; '0'
3432   91EF CD B8 90                    call    sub_70B8
3433   91F2 C3 79 92                    jp      sub_7279
3434   91F5             ; End of function sub_71E1
3435   91F5             
3436   91F5             
3437   91F5             ; =============== S U B R O U T I N E =======================================
3438   91F5             
3439   91F5             
3440   91F5             sub_71F5:                               ; CODE XREF: sub_60FF+A5↑p
3441   91F5                                                     ; sub_6BD8+103↑j
3442   91F5 2A D4 9E                    ld      hl, (GEN_PTR_16)
3443   91F8 7E                          ld      a, (hl)
3444   91F9 4F                          ld      c, a
3445   91FA 06 00                       ld      b, 0
3446   91FC 03                          inc     bc
3447   91FD 79                          ld      a, c
3448   91FE CB 7F                       bit     7, a
3449   9200 28 01                       jr      z, loc_7203
3450   9202 25                          dec     h
3451   9203             
3452   9203             loc_7203:                               ; CODE XREF: sub_71F5+B↑j
3453   9203 09                          add     hl, bc
3454   9204 18 39                       jr      HL_to_HEX
3455   9206             ; End of function sub_71F5
3456   9206             
3457   9206             
3458   9206             ; =============== S U B R O U T I N E =======================================
3459   9206             
3460   9206             ; decrement egneral purpose PTR16 by 2
3461   9206             
3462   9206             dec2_PTR_16:
3463   9206 2A D4 9E    		ld      hl, (GEN_PTR_16)
3464   9209 2B                          dec     hl
3465   920A 2B                          dec     hl
3466   920B 22 D4 9E                    ld      (GEN_PTR_16), hl
3467   920E C9                          ret
3468   920F             
3469   920F             ; =============== S U B R O U T I N E =======================================
3470   920F             
3471   920F             
3472   920F             sub_720F:                               ; CODE XREF: sub_6BD8+36D↑p
3473   920F                                                     ; sub_70DA+42↑j
3474   920F 3E 28                       ld      a, 28h ; '('
3475   9211 CD B8 90                    call    sub_70B8
3476   9214 3A 8A 9B                    ld      a, (byte_7B8A)
3477   9217 FE DD                       cp      0DDh
3478   9219 21 1C 9C                    ld      hl, a_IXplus
3479   921C 28 03                       jr      z, loc_7221
3480   921E 21 20 9C                    ld      hl, a_IYplus
3481   9221             
3482   9221             loc_7221:                               ; CODE XREF: sub_720F+D↑j
3483   9221 CD 6F 90                    call    SHOW_INSTR_HDR
3484   9224 CD 3B 91                    call    inc_PTR_16
3485   9227 CD 43 91                    call    sub_7143
3486   922A 3E 29                       ld      a, 29h ; ')'
3487   922C             
3488   922C             loc_722C:                               ; CODE XREF: sub_7194:loc_71B1↑j
3489   922C                                                     ; sub_7279+2↓j
3490   922C C3 B8 90                    jp      sub_70B8
3491   922F             ; End of function sub_720F
3492   922F             
3493   922F             ; ---------------------------------------------------------------------------
3494   922F             
3495   922F             loc_722F:                               ; CODE XREF: sub_6BD8+3DF↑j
3496   922F                                                     ; sub_7194+25↑j
3497   922F 3A 8A 9B                    ld      a, (byte_7B8A)
3498   9232 FE DD                       cp      0DDh
3499   9234 21 24 9C                    ld      hl, a_IX
3500   9237 28 03                       jr      z, loc_723C
3501   9239 21 27 9C                    ld      hl, a_IY
3502   923C             
3503   923C             loc_723C:                               ; CODE XREF: sub_6BD8+65F↑j
3504   923C C3 6F 90                    jp      SHOW_INSTR_HDR
3505   923F             
3506   923F             ; =============== S U B R O U T I N E =======================================
3507   923F             
3508   923F             
3509   923F             HL_to_HEX:                              ; CODE XREF: sub_60FF+9↑p
3510   923F                                                     ; GET_COMMAND:loc_64CD↑p ...
3511   923F             
3512   923F             
3513   923F 3A E4 9E                    ld      a, (byte_7EE4)
3514   9242 B7                          or      a
3515   9243 C2 80 94                    jp      nz, loc_7480
3516   9246 3A E9 9E                    ld      a, (byte_7EE9)
3517   9249 B7                          or      a
3518   924A C2 12 94                    jp      nz, loc_7412
3519   924D             
3520   924D             ; =============== S U B R O U T I N E =======================================
3521   924D             
3522   924D             
3523   924D             sub_724D:                               ; CODE XREF: sub_748C:loc_7498↓p
3524   924D 7C                          ld      a, h
3525   924E CB 3F                       srl     a
3526   9250 CB 3F                       srl     a
3527   9252 CB 3F                       srl     a
3528   9254 CB 3F                       srl     a
3529   9256 CD 5F 91                    call    sub_715F
3530   9259 7C                          ld      a, h
3531   925A E6 0F                       and     0Fh
3532   925C CD 5F 91                    call    sub_715F
3533   925F 7D                          ld      a, l
3534   9260 CB 3F                       srl     a
3535   9262 CB 3F                       srl     a
3536   9264 CB 3F                       srl     a
3537   9266 CB 3F                       srl     a
3538   9268 CD 5F 91                    call    sub_715F
3539   926B 7D                          ld      a, l
3540   926C E6 0F                       and     0Fh
3541   926E C3 5F 91                    jp      sub_715F
3542   9271             ; End of function sub_724D
3543   9271             
3544   9271             ; ---------------------------------------------------------------------------
3545   9271 2A D4 9E                    ld      hl, (GEN_PTR_16)
3546   9274 2B                          dec     hl
3547   9275 22 D4 9E                    ld      (GEN_PTR_16), hl
3548   9278 C9                          ret
3549   9279             
3550   9279             ; =============== S U B R O U T I N E =======================================
3551   9279             
3552   9279             
3553   9279             sub_7279:                               ; CODE XREF: sub_6BD8+50↑p
3554   9279                                                     ; sub_6BD8+8F↑p ...
3555   9279 3E 2C                       ld      a, 2Ch ; ','
3556   927B 18 AF                       jr      loc_722C
3557   927D             ; End of function sub_7279
3558   927D             
3559   927D             
3560   927D             ; =============== S U B R O U T I N E =======================================
3561   927D             
3562   927D             ; Output a SPC to video and return to caller
3563   927D             
3564   927D             SPC_VID_OUT:                            ; CODE XREF: sub_60FF+C↑p
3565   927D                                                     ; SHOW_REGS+4D↑p ...
3566   927D 3E 20                       ld      a, 20h ; ' '
3567   927F C3 86 9A                    jp      TAS_VID_DRIVER
3568   9282             ; End of function SPC_VID_OUT
3569   9282             
3570   9282             
3571   9282             ; =============== S U B R O U T I N E =======================================
3572   9282             
3573   9282             
3574   9282             sub_7282:                               ; CODE XREF: DISASSEMBLE+2F↑p
3575   9282                                                     ; sub_7096:loc_70A8↑p
3576   9282 3A E4 9E                    ld      a, (byte_7EE4)
3577   9285 B7                          or      a
3578   9286 20 05                       jr      nz, sub_728D
3579   9288 3A 8C 9B                    ld      a, (dis_DISPLAY_FLG)
3580   928B B7                          or      a
3581   928C C8                          ret     z
3582   928D             ; End of function sub_7282
3583   928D             
3584   928D             
3585   928D             ; =============== S U B R O U T I N E =======================================
3586   928D             
3587   928D             
3588   928D             sub_728D:                               ; CODE XREF: DISASSEMBLE:loc_6BAF↑p
3589   928D                                                     ; sub_7282+4↑j
3590   928D 3E 20                       ld      a, 20h ; ' '
3591   928F CD 86 9A                    call    TAS_VID_DRIVER
3592   9292 3A AB 9B                    ld      a, (PRINT_OUT_FLAG)
3593   9295 B7                          or      a
3594   9296 C8                          ret     z
3595   9297 3E 20                       ld      a, 20h ; ' '
3596   9299 C3 B4 9A                    jp      TAS_PTR_DRIVER
3597   929C             ; End of function sub_728D
3598   929C             
3599   929C             ; ---------------------------------------------------------------------------
3600   929C             
3601   929C             loc_729C:                               ; CODE XREF: sub_6BD8:loc_6FBD↑j
3602   929C                                                     ; sub_6BD8+47D↑j
3603   929C 3E 01                       ld      a, 1
3604   929E 32 EB 9E                    ld      (byte_7EEB), a
3605   92A1 2A D6 9E                    ld      hl, (dis_DISASSEM_START)
3606   92A4 22 D4 9E                    ld      (GEN_PTR_16), hl
3607   92A7 21 2A 9C                    ld      hl, a_DEFB
3608   92AA CD 61 90                    call    sub_7061
3609   92AD C3 43 91                    jp      sub_7143
3610   92B0             
3611   92B0             ; =============== S U B R O U T I N E =======================================
3612   92B0             
3613   92B0             
3614   92B0             sub_72B0:                               ; CODE XREF: sub_6BD8+C↑p
3615   92B0                                                     ; sub_6BD8+3F4↑p
3616   92B0 48                          ld      c, b
3617   92B1             
3618   92B1             loc_72B1:                               ; CODE XREF: sub_72B0+5↓j
3619   92B1 BE                          cp      (hl)
3620   92B2 28 0A                       jr      z, loc_72BE
3621   92B4 23                          inc     hl
3622   92B5 10 FA                       djnz    loc_72B1
3623   92B7 2A D4 9E                    ld      hl, (GEN_PTR_16)
3624   92BA 3E 01                       ld      a, 1
3625   92BC B7                          or      a
3626   92BD C9                          ret
3627   92BE             ; ---------------------------------------------------------------------------
3628   92BE             
3629   92BE             loc_72BE:                               ; CODE XREF: sub_72B0+2↑j
3630   92BE 79                          ld      a, c
3631   92BF 90                          sub     b
3632   92C0 3C                          inc     a
3633   92C1 EB                          ex      de, hl
3634   92C2 5F                          ld      e, a
3635   92C3 3E 03                       ld      a, 3
3636   92C5 01 00 00                    ld      bc, 0
3637   92C8             
3638   92C8             loc_72C8:                               ; CODE XREF: sub_72B0+1B↓j
3639   92C8 ED B1                       cpir
3640   92CA 1D                          dec     e
3641   92CB 20 FB                       jr      nz, loc_72C8
3642   92CD CD 61 90                    call    sub_7061
3643   92D0 2A D4 9E                    ld      hl, (GEN_PTR_16)
3644   92D3 AF                          xor     a
3645   92D4 C9                          ret
3646   92D5             
3647   92D5             ; ---------------------------------------------------------------------------
3648   92D5             
3649   92D5             output_disassembly:                     ; CODE XREF: GET_COMMAND+7B↑j
3650   92D5 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
3651   92D8             
3652   92D8             out_key_error:                          ; CODE XREF: GET_COMMAND+12A9↓j
3653   92D8 CD E8 80                    call    GET_CHAR        ; get character, return in A
3654   92DB 06 00                       ld      b, 0
3655   92DD FE 44                       cp      44h ; 'D'
3656   92DF 28 05                       jr      z, out_disassem_disk
3657   92E1 FE 54                       cp      54h ; 'T'
3658   92E3 20 F3                       jr      nz, out_key_error
3659   92E5 04                          inc     b
3660   92E6             
3661   92E6             out_disassem_disk:                      ; CODE XREF: GET_COMMAND+12A5↑j
3662   92E6 CD A7 97                    call    GET_PARAMS
3663   92E9 78                          ld      a, b
3664   92EA 32 EA 9E                    ld      (byte_7EEA), a
3665   92ED 2A 49 40                    ld      hl, (MEM_SIZE)
3666   92F0 22 E5 9E                    ld      (word_7EE5), hl
3667   92F3 21 00 00                    ld      hl, 0
3668   92F6 22 E7 9E                    ld      (word_7EE7), hl
3669   92F9 ED 5B 2D 9F                 ld      de, (parm_START)
3670   92FD 2A 2B 9F                    ld      hl, (parm_END)
3671   9300 CD 25 98                    call    check_range     ; HL = Start, DE = End. Ensure DE >= HL (1=OK, 0=ERR)
3672   9303 CA F3 80                    jp      z, return_from_user
3673   9306 3A EA 9E                    ld      a, (byte_7EEA)
3674   9309 B7                          or      a
3675   930A 20 16                       jr      nz, loc_7322
3676   930C CD 42 96                    call    OPEN_DSK_FILE_WR
3677   930F CD 9B 93                    call    sub_739B
3678   9312 3E D3                       ld      a, 0D3h
3679   9314 CD C1 93                    call    sub_73C1
3680   9317 06 06                       ld      b, 6
3681   9319             
3682   9319             loc_7319:                               ; CODE XREF: GET_COMMAND+12E4↓j
3683   9319 3E 41                       ld      a, 41h ; 'A'
3684   931B CD C1 93                    call    sub_73C1
3685   931E 10 F9                       djnz    loc_7319
3686   9320 18 0B                       jr      loc_732D
3687   9322             ; ---------------------------------------------------------------------------
3688   9322             
3689   9322             loc_7322:                               ; CODE XREF: GET_COMMAND+12D0↑j
3690   9322 CD 21 97                    call    GET_PARAM_STRING
3691   9325 CD 9B 93                    call    sub_739B
3692   9328 3E D3                       ld      a, 0D3h
3693   932A CD 33 97                    call    WRITE_FILENAME
3694   932D             
3695   932D             loc_732D:                               ; CODE XREF: GET_COMMAND+12E6↑j
3696   932D CD 6D 89                    call    SET_PROMPT_POS
3697   9330 CD 1B 8A                    call    do_clear_screen
3698   9333 CD 03 94                    call    sub_7403
3699   9336 21 DA 9E                    ld      hl, disORG
3700   9339 3E 01                       ld      a, 1
3701   933B 32 E4 9E                    ld      (byte_7EE4), a
3702   933E 32 8C 9B                    ld      (dis_DISPLAY_FLG), a
3703   9341 CD 61 90                    call    sub_7061
3704   9344 2A 2D 9F                    ld      hl, (parm_START)
3705   9347 CD 8C 94                    call    sub_748C
3706   934A AF                          xor     a
3707   934B 32 E4 9E                    ld      (byte_7EE4), a
3708   934E 32 8C 9B                    ld      (dis_DISPLAY_FLG), a
3709   9351 3E 0D                       ld      a, 0Dh
3710   9353 CD B2 93                    call    sub_73B2
3711   9356 22 D4 9E                    ld      (GEN_PTR_16), hl
3712   9359 3E 01                       ld      a, 1
3713   935B 32 E4 9E                    ld      (byte_7EE4), a
3714   935E 2A 2D 9F                    ld      hl, (parm_START)
3715   9361 22 D4 9E                    ld      (GEN_PTR_16), hl
3716   9364 CD D5 93                    call    sub_73D5
3717   9367 CD 03 94                    call    sub_7403
3718   936A 21 DF 9E                    ld      hl, disEND
3719   936D CD 61 90                    call    sub_7061
3720   9370 2A 2F 9F                    ld      hl, (parm_TRANSFER)
3721   9373 CD 8C 94                    call    sub_748C
3722   9376 AF                          xor     a
3723   9377 32 E4 9E                    ld      (byte_7EE4), a
3724   937A 3E 0D                       ld      a, 0Dh
3725   937C CD B2 93                    call    sub_73B2
3726   937F 3E 1A                       ld      a, 1Ah
3727   9381 CD B2 93                    call    sub_73B2
3728   9384 3A EA 9E                    ld      a, (byte_7EEA)
3729   9387 B7                          or      a
3730   9388 28 05                       jr      z, loc_738F
3731   938A CD F8 01                    call    Cassette_Off
3732   938D 18 09                       jr      loc_7398
3733   938F             ; ---------------------------------------------------------------------------
3734   938F             
3735   938F             loc_738F:                               ; CODE XREF: GET_COMMAND+134E↑j
3736   938F 11 3E 9F                    ld      de, string_buffer
3737   9392 CD 28 44                    call    DOS_CLOSE
3738   9395 C2 02 96                    jp      nz, loc_7602
3739   9398             
3740   9398             loc_7398:                               ; CODE XREF: GET_COMMAND+1353↑j
3741   9398 C3 F3 80                    jp      return_from_user
3742   939B             
3743   939B             ; =============== S U B R O U T I N E =======================================
3744   939B             
3745   939B             
3746   939B             sub_739B:                               ; CODE XREF: GET_COMMAND+12D5↑p
3747   939B                                                     ; GET_COMMAND+12EB↑p
3748   939B AF                          xor     a
3749   939C 32 8C 9B                    ld      (dis_DISPLAY_FLG), a
3750   939F 3C                          inc     a
3751   93A0 32 E9 9E                    ld      (byte_7EE9), a
3752   93A3 2A 2D 9F                    ld      hl, (parm_START)
3753   93A6 22 D4 9E                    ld      (GEN_PTR_16), hl
3754   93A9 F3                          di
3755   93AA CD D5 93                    call    sub_73D5
3756   93AD AF                          xor     a
3757   93AE 32 E9 9E                    ld      (byte_7EE9), a
3758   93B1 C9                          ret
3759   93B2             
3760   93B2             
3761   93B2             ; =============== S U B R O U T I N E =======================================
3762   93B2             
3763   93B2             
3764   93B2             sub_73B2:                               ; CODE XREF: SHOW_INSTR_HDR+1B↑p
3765   93B2                                                     ; sub_70B8+8↑j ...
3766   93B2 F5                          push    af
3767   93B3 FE 09                       cp      9
3768   93B5 20 06                       jr      nz, loc_73BD
3769   93B7 AF                          xor     a
3770   93B8 CD 96 90                    call    sub_7096
3771   93BB 18 03                       jr      loc_73C0
3772   93BD             ; ---------------------------------------------------------------------------
3773   93BD             
3774   93BD             loc_73BD:                               ; CODE XREF: sub_73B2+3↑j
3775   93BD CD 86 9A                    call    TAS_VID_DRIVER
3776   93C0             
3777   93C0             loc_73C0:                               ; CODE XREF: sub_73B2+9↑j
3778   93C0 F1                          pop     af
3779   93C1             ; End of function sub_73B2
3780   93C1             
3781   93C1             
3782   93C1             ; =============== S U B R O U T I N E =======================================
3783   93C1             
3784   93C1             
3785   93C1             sub_73C1:                               ; CODE XREF: GET_COMMAND+12DA↑p
3786   93C1                                                     ; GET_COMMAND+12E1↑p ...
3787   93C1 D5                          push    de
3788   93C2 F5                          push    af
3789   93C3 3A EA 9E                    ld      a, (byte_7EEA)
3790   93C6 B7                          or      a
3791   93C7 28 06                       jr      z, loc_73CF
3792   93C9 F1                          pop     af
3793   93CA CD 64 02                    call    CASS_WRITE_BYTE
3794   93CD D1                          pop     de
3795   93CE C9                          ret
3796   93CF             ; ---------------------------------------------------------------------------
3797   93CF             
3798   93CF             loc_73CF:                               ; CODE XREF: sub_73C1+6↑j
3799   93CF F1                          pop     af
3800   93D0 CD 36 96                    call    sub_7636
3801   93D3 D1                          pop     de
3802   93D4 C9                          ret
3803   93D5             ; End of function sub_73C1
3804   93D5             
3805   93D5             
3806   93D5             ; =============== S U B R O U T I N E =======================================
3807   93D5             
3808   93D5             
3809   93D5             sub_73D5:                               ; CODE XREF: GET_COMMAND+132A↑p
3810   93D5                                                     ; sub_739B+F↑p ...
3811   93D5 2A D4 9E                    ld      hl, (GEN_PTR_16)
3812   93D8 3A E4 9E                    ld      a, (byte_7EE4)
3813   93DB B7                          or      a
3814   93DC 28 03                       jr      z, loc_73E1
3815   93DE CD 03 94                    call    sub_7403
3816   93E1             
3817   93E1             loc_73E1:                               ; CODE XREF: sub_73D5+7↑j
3818   93E1 01 01 00                    ld      bc, 1
3819   93E4 AF                          xor     a
3820   93E5 CD 0C 8B                    call    DISASSEMBLE
3821   93E8 CD 3B 91                    call    inc_PTR_16
3822   93EB 3A E4 9E                    ld      a, (byte_7EE4)
3823   93EE B7                          or      a
3824   93EF 28 05                       jr      z, loc_73F6
3825   93F1 3E 0D                       ld      a, 0Dh
3826   93F3 CD B2 93                    call    sub_73B2
3827   93F6             
3828   93F6             loc_73F6:                               ; CODE XREF: sub_73D5+1A↑j
3829   93F6 2A D4 9E                    ld      hl, (GEN_PTR_16)
3830   93F9 ED 5B 2B 9F                 ld      de, (parm_END)
3831   93FD CD 25 98                    call    check_range     ; HL = Start, DE = End. Ensure DE >= HL (1=OK, 0=ERR)
3832   9400 28 D3                       jr      z, sub_73D5
3833   9402 C9                          ret
3834   9403             ; End of function sub_73D5
3835   9403             
3836   9403             
3837   9403             ; =============== S U B R O U T I N E =======================================
3838   9403             
3839   9403             
3840   9403             sub_7403:                               ; CODE XREF: GET_COMMAND+12F9↑p
3841   9403                                                     ; GET_COMMAND+132D↑p ...
3842   9403 06 05                       ld      b, 5
3843   9405             
3844   9405             loc_7405:                               ; CODE XREF: sub_7403+7↓j
3845   9405 3E B0                       ld      a, 0B0h
3846   9407 CD C1 93                    call    sub_73C1
3847   940A 10 F9                       djnz    loc_7405
3848   940C 3E 20                       ld      a, 20h ; ' '
3849   940E CD C1 93                    call    sub_73C1
3850   9411 C9                          ret
3851   9412             ; End of function sub_7403
3852   9412             
3853   9412             ; ---------------------------------------------------------------------------
3854   9412             
3855   9412             loc_7412:                               ; CODE XREF: HL_to_HEX+B↑j
3856   9412                                                     ; sub_7173+34E↓j
3857   9412 D5                          push    de
3858   9413 ED 5B 2D 9F                 ld      de, (parm_START)
3859   9417 CD 25 98                    call    check_range     ; HL = Start, DE = End. Ensure DE >= HL (1=OK, 0=ERR)
3860   941A 28 2B                       jr      z, loc_7447
3861   941C ED 5B 2B 9F                 ld      de, (parm_END)
3862   9420 CD 25 98                    call    check_range     ; HL = Start, DE = End. Ensure DE >= HL (1=OK, 0=ERR)
3863   9423 20 22                       jr      nz, loc_7447
3864   9425 D1                          pop     de
3865   9426 CD 49 94                    call    sub_7449
3866   9429 C8                          ret     z
3867   942A ED 73 92 9B                 ld      (word_7B92), sp
3868   942E ED 7B E5 9E                 ld      sp, (word_7EE5)
3869   9432 E5                          push    hl
3870   9433 ED 73 E5 9E                 ld      (word_7EE5), sp
3871   9437 ED 7B 92 9B                 ld      sp, (word_7B92)
3872   943B C5                          push    bc
3873   943C ED 4B E7 9E                 ld      bc, (word_7EE7)
3874   9440 03                          inc     bc
3875   9441 ED 43 E7 9E                 ld      (word_7EE7), bc
3876   9445 C1                          pop     bc
3877   9446 C9                          ret
3878   9447             ; ---------------------------------------------------------------------------
3879   9447             
3880   9447             loc_7447:                               ; CODE XREF: HL_to_HEX+1DB↑j
3881   9447                                                     ; HL_to_HEX+1E4↑j
3882   9447 D1                          pop     de
3883   9448 C9                          ret
3884   9449             
3885   9449             ; =============== S U B R O U T I N E =======================================
3886   9449             
3887   9449             
3888   9449             sub_7449:                               ; CODE XREF: HL_to_HEX+1E7↑p
3889   9449                                                     ; sub_747A↓p ...
3890   9449 C5                          push    bc
3891   944A D5                          push    de
3892   944B ED 73 92 9B                 ld      (word_7B92), sp
3893   944F ED 7B E5 9E                 ld      sp, (word_7EE5)
3894   9453 ED 4B E7 9E                 ld      bc, (word_7EE7)
3895   9457 78                          ld      a, b
3896   9458 B1                          or      c
3897   9459 28 0D                       jr      z, loc_7468
3898   945B             
3899   945B             loc_745B:                               ; CODE XREF: sub_7449+1D↓j
3900   945B D1                          pop     de
3901   945C EB                          ex      de, hl
3902   945D AF                          xor     a
3903   945E ED 52                       sbc     hl, de
3904   9460 EB                          ex      de, hl
3905   9461 28 0F                       jr      z, loc_7472
3906   9463 0B                          dec     bc
3907   9464 78                          ld      a, b
3908   9465 B1                          or      c
3909   9466 20 F3                       jr      nz, loc_745B
3910   9468             
3911   9468             loc_7468:                               ; CODE XREF: sub_7449+10↑j
3912   9468 ED 7B 92 9B                 ld      sp, (word_7B92)
3913   946C D1                          pop     de
3914   946D C1                          pop     bc
3915   946E 3E 01                       ld      a, 1
3916   9470 B7                          or      a
3917   9471 C9                          ret
3918   9472             ; ---------------------------------------------------------------------------
3919   9472             
3920   9472             loc_7472:                               ; CODE XREF: sub_7449+18↑j
3921   9472 ED 7B 92 9B                 ld      sp, (word_7B92)
3922   9476 D1                          pop     de
3923   9477 C1                          pop     bc
3924   9478 AF                          xor     a
3925   9479 C9                          ret
3926   947A             ; End of function sub_7449
3927   947A             
3928   947A             
3929   947A             ; =============== S U B R O U T I N E =======================================
3930   947A             
3931   947A             
3932   947A             sub_747A:                               ; CODE XREF: DISASSEMBLE+1A↑p
3933   947A CD 49 94                    call    sub_7449
3934   947D C0                          ret     nz
3935   947E 18 05                       jr      loc_7485
3936   9480             ; ---------------------------------------------------------------------------
3937   9480             
3938   9480             loc_7480:                               ; CODE XREF: HL_to_HEX+4↑j
3939   9480                                                     ; sub_7173+35D↓j
3940   9480 CD 49 94                    call    sub_7449
3941   9483 20 07                       jr      nz, sub_748C
3942   9485             
3943   9485             loc_7485:                               ; CODE XREF: sub_747A+4↑j
3944   9485 3E 5A                       ld      a, 5Ah ; 'Z'
3945   9487 CD B2 93                    call    sub_73B2
3946   948A 18 0C                       jr      loc_7498
3947   948C             ; End of function sub_747A
3948   948C             
3949   948C             
3950   948C             ; =============== S U B R O U T I N E =======================================
3951   948C             
3952   948C             
3953   948C             sub_748C:                               ; CODE XREF: GET_COMMAND+130D↑p
3954   948C                                                     ; GET_COMMAND+1339↑p ...
3955   948C 7C                          ld      a, h
3956   948D CB 3F                       srl     a
3957   948F FE 50                       cp      50h ; 'P'
3958   9491 38 05                       jr      c, loc_7498
3959   9493 3E 30                       ld      a, 30h ; '0'
3960   9495 CD B2 93                    call    sub_73B2
3961   9498             
3962   9498             loc_7498:                               ; CODE XREF: sub_747A+10↑j
3963   9498                                                     ; sub_748C+5↑j
3964   9498 CD 4D 92                    call    sub_724D
3965   949B 3E 48                       ld      a, 48h ; 'H'
3966   949D 18 13                       jr      loc_74B2
3967   949F             ; ---------------------------------------------------------------------------
3968   949F             
3969   949F             loc_749F:                               ; CODE XREF: sub_7147+5↑j
3970   949F F1                          pop     af
3971   94A0 F5                          push    af
3972   94A1 CB 3F                       srl     a
3973   94A3 FE 50                       cp      50h ; 'P'
3974   94A5 38 05                       jr      c, loc_74AC
3975   94A7 3E 30                       ld      a, 30h ; '0'
3976   94A9 CD B2 93                    call    sub_73B2
3977   94AC             
3978   94AC             loc_74AC:                               ; CODE XREF: sub_748C+19↑j
3979   94AC F1                          pop     af
3980   94AD CD 50 91                    call    sub_7150
3981   94B0 3E 48                       ld      a, 48h ; 'H'
3982   94B2             
3983   94B2             loc_74B2:                               ; CODE XREF: sub_748C+11↑j
3984   94B2 C3 B2 93                    jp      sub_73B2
3985   94B5             ; End of function sub_748C
3986   94B5             
3987   94B5             ; ---------------------------------------------------------------------------
3988   94B5             
3989   94B5             loc_74B5:                               ; CODE XREF: sub_7173+4↑j
3990   94B5 7E                          ld      a, (hl)
3991   94B6 F5                          push    af
3992   94B7 23                          inc     hl
3993   94B8 7E                          ld      a, (hl)
3994   94B9 67                          ld      h, a
3995   94BA F1                          pop     af
3996   94BB 6F                          ld      l, a
3997   94BC E5                          push    hl
3998   94BD CD 3B 91                    call    inc_PTR_16
3999   94C0 E1                          pop     hl
4000   94C1 C3 12 94                    jp      loc_7412
4001   94C4             ; ---------------------------------------------------------------------------
4002   94C4             
4003   94C4             loc_74C4:                               ; CODE XREF: sub_7173+B↑j
4004   94C4 7E                          ld      a, (hl)
4005   94C5 F5                          push    af
4006   94C6 23                          inc     hl
4007   94C7 7E                          ld      a, (hl)
4008   94C8 67                          ld      h, a
4009   94C9 F1                          pop     af
4010   94CA 6F                          ld      l, a
4011   94CB E5                          push    hl
4012   94CC CD 3B 91                    call    inc_PTR_16
4013   94CF E1                          pop     hl
4014   94D0 18 AE                       jr      loc_7480
4015   94D2             
4016   94D2             ; ---------------------------------------------------------------------------
4017   94D2             
4018   94D2             load_cmd_file:                          ; CODE XREF: GET_COMMAND+67↑j
4019   94D2 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
4020   94D5 F3                          di
4021   94D6 AF                          xor     a
4022   94D7 32 3D 9F                    ld      (byte_7F3D), a
4023   94DA 21 00 00                    ld      hl, 0
4024   94DD 22 31 9F                    ld      (parm_OFFSET), hl
4025   94E0 22 2D 9F                    ld      (parm_START), hl
4026   94E3 2B                          dec     hl
4027   94E4 22 2B 9F                    ld      (parm_END), hl
4028   94E7             
4029   94E7             loc_74E7:                               ; CODE XREF: GET_COMMAND+14B7↓j
4030   94E7 CD E8 80                    call    GET_CHAR        ; get character, return in A
4031   94EA FE 54                       cp      54h ; 'T'
4032   94EC CA 6A 96                    jp      z, load_tape_file
4033   94EF FE 44                       cp      44h ; 'D'
4034   94F1 20 F4                       jr      nz, loc_74E7
4035   94F3 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
4036   94F6             
4037   94F6             loc_74F6:                               ; CODE XREF: GET_COMMAND+14C5↓j
4038   94F6 CD AA 85                    call    GET_HEX_CHAR
4039   94F9 28 06                       jr      z, loc_7501
4040   94FB FE 0D                       cp      0Dh
4041   94FD 28 0B                       jr      z, loc_750A
4042   94FF 18 F5                       jr      loc_74F6
4043   9501             ; ---------------------------------------------------------------------------
4044   9501             
4045   9501             loc_7501:                               ; CODE XREF: GET_COMMAND+14BF↑j
4046   9501 CD 6C 85                    call    HEX_VAL_to_HL   ; 4 byte hex value to HL register
4047   9504 22 31 9F                    ld      (parm_OFFSET), hl
4048   9507             
4049   9507             disk_file_info:                         ; CODE XREF: GET_COMMAND+1A19↓j
4050   9507 CD 86 9A                    call    TAS_VID_DRIVER
4051   950A             
4052   950A             loc_750A:                               ; CODE XREF: GET_COMMAND+14C3↑j
4053   950A CD 4B 96                    call    OPEN_DSK_FILE_RD
4054   950D             
4055   950D             loc_750D:                               ; CODE XREF: GET_COMMAND+14FC↓j
4056   950D                                                     ; GET_COMMAND+1536↓j
4057   950D CD A3 95                    call    sub_75A3
4058   9510 FE 01                       cp      1
4059   9512 28 24                       jr      z, loc_7538
4060   9514 FE 02                       cp      2
4061   9516 28 5A                       jr      z, loc_7572
4062   9518 B7                          or      a
4063   9519 28 0A                       jr      z, loc_7525
4064   951B FE 03                       cp      3
4065   951D FA AE 95                    jp      m, loc_75AE
4066   9520 FE 20                       cp      20h ; ' '
4067   9522 F2 AE 95                    jp      p, loc_75AE
4068   9525             
4069   9525             loc_7525:                               ; CODE XREF: GET_COMMAND+14DF↑j
4070   9525 CD A3 95                    call    sub_75A3
4071   9528 D6 02                       sub     2
4072   952A 47                          ld      b, a
4073   952B CD A3 95                    call    sub_75A3
4074   952E CD A3 95                    call    sub_75A3
4075   9531             
4076   9531             loc_7531:                               ; CODE XREF: GET_COMMAND+14FA↓j
4077   9531 CD A3 95                    call    sub_75A3
4078   9534 10 FB                       djnz    loc_7531
4079   9536 18 D5                       jr      loc_750D
4080   9538             ; ---------------------------------------------------------------------------
4081   9538             
4082   9538             loc_7538:                               ; CODE XREF: GET_COMMAND+14D8↑j
4083   9538 CD A3 95                    call    sub_75A3
4084   953B D6 02                       sub     2
4085   953D 47                          ld      b, a
4086   953E CD A3 95                    call    sub_75A3
4087   9541 6F                          ld      l, a
4088   9542 CD A3 95                    call    sub_75A3
4089   9545 67                          ld      h, a
4090   9546 ED 5B 31 9F                 ld      de, (parm_OFFSET)
4091   954A 19                          add     hl, de
4092   954B ED 5B 2B 9F                 ld      de, (parm_END)
4093   954F EB                          ex      de, hl
4094   9550 CD 13 98                    call    sub_7813
4095   9553 EB                          ex      de, hl
4096   9554             
4097   9554             loc_7554:                               ; CODE XREF: GET_COMMAND+152A↓j
4098   9554 CD A3 95                    call    sub_75A3
4099   9557 F5                          push    af
4100   9558 3A 3D 9F                    ld      a, (byte_7F3D)
4101   955B B7                          or      a
4102   955C 28 03                       jr      z, loc_7561
4103   955E F1                          pop     af
4104   955F 18 02                       jr      loc_7563
4105   9561             ; ---------------------------------------------------------------------------
4106   9561             
4107   9561             loc_7561:                               ; CODE XREF: GET_COMMAND+1522↑j
4108   9561 F1                          pop     af
4109   9562 77                          ld      (hl), a
4110   9563             
4111   9563             loc_7563:                               ; CODE XREF: GET_COMMAND+1525↑j
4112   9563 23                          inc     hl
4113   9564 10 EE                       djnz    loc_7554
4114   9566 2B                          dec     hl
4115   9567 ED 5B 2D 9F                 ld      de, (parm_START)
4116   956B EB                          ex      de, hl
4117   956C CD 1C 98                    call    sub_781C
4118   956F EB                          ex      de, hl
4119   9570 18 9B                       jr      loc_750D
4120   9572             ; ---------------------------------------------------------------------------
4121   9572             
4122   9572             loc_7572:                               ; CODE XREF: GET_COMMAND+14DC↑j
4123   9572 CD A3 95                    call    sub_75A3
4124   9575 CD A3 95                    call    sub_75A3
4125   9578 6F                          ld      l, a
4126   9579 CD A3 95                    call    sub_75A3
4127   957C 67                          ld      h, a
4128   957D ED 5B 31 9F                 ld      de, (parm_OFFSET)
4129   9581 19                          add     hl, de
4130   9582 E5                          push    hl
4131   9583 11 3E 9F                    ld      de, string_buffer
4132   9586 CD 28 44                    call    DOS_CLOSE
4133   9589 20 77                       jr      nz, loc_7602
4134   958B 2A 2B 9F                    ld      hl, (parm_END)
4135   958E CD 3F 92                    call    HL_to_HEX
4136   9591 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
4137   9594 2A 2D 9F                    ld      hl, (parm_START)
4138   9597 CD 3F 92                    call    HL_to_HEX
4139   959A CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
4140   959D E1                          pop     hl
4141   959E CD 3F 92                    call    HL_to_HEX
4142   95A1 18 75                       jr      loc_7618
4143   95A3             
4144   95A3             ; =============== S U B R O U T I N E =======================================
4145   95A3             
4146   95A3             
4147   95A3             sub_75A3:                               ; CODE XREF: GET_COMMAND:loc_750D↑p
4148   95A3                                                     ; GET_COMMAND:loc_7525↑p ...
4149   95A3             
4150   95A3 D5                          push    de
4151   95A4 11 3E 9F                    ld      de, string_buffer
4152   95A7 CD 13 00                    call    ROM_KBD_Routine
4153   95AA D1                          pop     de
4154   95AB 20 55                       jr      nz, loc_7602
4155   95AD C9                          ret
4156   95AE             ; ---------------------------------------------------------------------------
4157   95AE             
4158   95AE             loc_75AE:                               ; CODE XREF: GET_COMMAND+14E3↑j
4159   95AE                                                     ; GET_COMMAND+14E8↑j
4160   95AE 3E 22                       ld      a, 22h ; '"'
4161   95B0 18 50                       jr      loc_7602
4162   95B2             ; ---------------------------------------------------------------------------
4163   95B2             
4164   95B2             write_tape_disk:                        ; CODE XREF: GET_COMMAND+6C↑j
4165   95B2 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
4166   95B5 F3                          di
4167   95B6             
4168   95B6             loc_75B6:                               ; CODE XREF: sub_75A3+1D↓j
4169   95B6 CD E8 80                    call    GET_CHAR        ; get character, return in A
4170   95B9 FE 54                       cp      54h ; 'T'
4171   95BB CA 4B 97                    jp      z, write_tape_file
4172   95BE FE 44                       cp      44h ; 'D'
4173   95C0 20 F4                       jr      nz, loc_75B6
4174   95C2 CD A7 97                    call    GET_PARAMS
4175   95C5 CD 42 96                    call    OPEN_DSK_FILE_WR
4176   95C8 ED 5B 2D 9F                 ld      de, (parm_START)
4177   95CC 2A 2B 9F                    ld      hl, (parm_END)
4178   95CF AF                          xor     a
4179   95D0 ED 52                       sbc     hl, de
4180   95D2 23                          inc     hl
4181   95D3             
4182   95D3             loc_75D3:                               ; CODE XREF: sub_75A3+39↓j
4183   95D3 25                          dec     h
4184   95D4 FA DE 95                    jp      m, loc_75DE
4185   95D7 06 00                       ld      b, 0
4186   95D9 CD 1B 96                    call    sub_761B
4187   95DC 18 F5                       jr      loc_75D3
4188   95DE             ; ---------------------------------------------------------------------------
4189   95DE             
4190   95DE             loc_75DE:                               ; CODE XREF: sub_75A3+31↑j
4191   95DE 45                          ld      b, l
4192   95DF AF                          xor     a
4193   95E0 BD                          cp      l
4194   95E1 C4 1B 96                    call    nz, sub_761B
4195   95E4 3E 02                       ld      a, 2
4196   95E6 CD 36 96                    call    sub_7636
4197   95E9 3E 02                       ld      a, 2
4198   95EB CD 36 96                    call    sub_7636
4199   95EE 3A 2F 9F                    ld      a, (parm_TRANSFER)
4200   95F1 CD 36 96                    call    sub_7636
4201   95F4 3A 30 9F                    ld      a, (parm_TRANSFER+1)
4202   95F7 CD 36 96                    call    sub_7636
4203   95FA 11 3E 9F                    ld      de, string_buffer
4204   95FD CD 28 44                    call    DOS_CLOSE
4205   9600 28 16                       jr      z, loc_7618
4206   9602             
4207   9602             loc_7602:                               ; CODE XREF: GET_COMMAND+135B↑j
4208   9602                                                     ; GET_COMMAND+154F↑j ...
4209   9602 F5                          push    af
4210   9603 AF                          xor     a
4211   9604 32 E4 9E                    ld      (byte_7EE4), a
4212   9607 3C                          inc     a
4213   9608 32 8C 9B                    ld      (dis_DISPLAY_FLG), a
4214   960B CD 77 89                    call    SCROLL_SAVEREGS ; save all regs and scroll down
4215   960E 21 EC 9E                    ld      hl, DOS_ERROR
4216   9611 CD 6F 90                    call    SHOW_INSTR_HDR
4217   9614 F1                          pop     af
4218   9615 CD 47 91                    call    sub_7147
4219   9618             
4220   9618             loc_7618:                               ; CODE XREF: GET_COMMAND+1567↑j
4221   9618                                                     ; sub_75A3+5D↑j
4222   9618 C3 F3 80                    jp      return_from_user
4223   961B             
4224   961B             ; =============== S U B R O U T I N E =======================================
4225   961B             
4226   961B             
4227   961B             sub_761B:                               ; CODE XREF: sub_75A3+36↑p
4228   961B                                                     ; sub_75A3+3E↑p
4229   961B 3E 01                       ld      a, 1
4230   961D CD 36 96                    call    sub_7636
4231   9620 3E 02                       ld      a, 2
4232   9622 80                          add     a, b
4233   9623 CD 36 96                    call    sub_7636
4234   9626 7B                          ld      a, e
4235   9627 CD 36 96                    call    sub_7636
4236   962A 7A                          ld      a, d
4237   962B CD 36 96                    call    sub_7636
4238   962E             
4239   962E             loc_762E:                               ; CODE XREF: sub_761B+18↓j
4240   962E 1A                          ld      a, (de)
4241   962F CD 36 96                    call    sub_7636
4242   9632 13                          inc     de
4243   9633 10 F9                       djnz    loc_762E
4244   9635 C9                          ret
4245   9636             
4246   9636             ; =============== S U B R O U T I N E =======================================
4247   9636             
4248   9636             
4249   9636             sub_7636:
4250   9636 D5          		push    de
4251   9637 11 3E 9F                    ld      de, string_buffer
4252   963A CD 1B 00                    call    ROM_DISPLAY_Routine
4253   963D 20 C3                       jr      nz, loc_7602
4254   963F F3                          di
4255   9640 D1                          pop     de
4256   9641 C9                          ret
4257   9642             
4258   9642             OPEN_DSK_FILE_WR:
4259   9642 CD 56 96    		call    GET_DOS_PARAMS
4260   9645 CD 20 44                    call    DOS_INIT
4261   9648 20 B8                       jr      nz, loc_7602
4262   964A C9                          ret
4263   964B             
4264   964B             
4265   964B             OPEN_DSK_FILE_RD:                               
4266   964B CD 56 96                    call    GET_DOS_PARAMS
4267   964E CD 24 44                    call    DOS_OPEN
4268   9651 20 AF                       jr      nz, loc_7602
4269   9653 C3 77 89                    jp      SCROLL_SAVEREGS ; save all regs and scroll down
4270   9656             
4271   9656             
4272   9656             GET_DOS_PARAMS:
4273   9656 CD 77 89    		call    SCROLL_SAVEREGS		; save all regs and scroll down
4274   9659 21 3E 9F                    ld      hl, string_buffer
4275   965C 06 17                       ld      b, 17h
4276   965E CD 60 99                    call    GET_ASCII		; Get ascii string to (HL), maxlen = B
4277   9661 11 3E 9F                    ld      de, string_buffer
4278   9664 06 00                       ld      b, 0			; LRL 0 = 256 bytes
4279   9666 21 5E 9F                    ld      hl, Sector_Buffer	; 256 byte DOS workspace
4280   9669 C9                          ret
4281   966A             
4282   966A             ; ---------------------------------------------------------------------------
4283   966A             
4284   966A             load_tape_file:                         ; CODE XREF: GET_COMMAND+14B2↑j
4285   966A CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
4286   966D             
4287   966D             loc_766D:                               ; CODE XREF: GET_COMMAND+163C↓j
4288   966D CD AA 85                    call    GET_HEX_CHAR
4289   9670 28 06                       jr      z, loc_7678
4290   9672 FE 0D                       cp      0Dh
4291   9674 28 08                       jr      z, tape_file_info
4292   9676 18 F5                       jr      loc_766D
4293   9678             ; ---------------------------------------------------------------------------
4294   9678             
4295   9678             loc_7678:                               ; CODE XREF: GET_COMMAND+1636↑j
4296   9678 CD 6C 85                    call    HEX_VAL_to_HL   ; 4 byte hex value to HL register
4297   967B 22 31 9F                    ld      (parm_OFFSET), hl
4298   967E             
4299   967E             tape_file_info:                         ; CODE XREF: GET_COMMAND+163A↑j
4300   967E                                                     ; GET_COMMAND+1A23↓j
4301   967E CD 77 89                    call    SCROLL_SAVEREGS ; save all regs and scroll down
4302   9681 AF                          xor     a
4303   9682 CD 12 02                    call    Select_Cass_Unit
4304   9685 CD 96 02                    call    Cass_Find_Sync
4305   9688             
4306   9688             wait_cass_sync_byte:                    ; CODE XREF: GET_COMMAND+1653↓j
4307   9688 CD 35 02                    call    CASS_READ_BYTE
4308   968B FE 55                       cp      55h ; 'U'
4309   968D 20 F9                       jr      nz, wait_cass_sync_byte
4310   968F 06 06                       ld      b, 6
4311   9691             
4312   9691             show_tape_filename:                     ; CODE XREF: GET_COMMAND+165D↓j
4313   9691 CD 35 02                    call    CASS_READ_BYTE
4314   9694 CD 86 9A                    call    TAS_VID_DRIVER
4315   9697 10 F8                       djnz    show_tape_filename
4316   9699             
4317   9699             loc_7699:                               ; CODE XREF: GET_COMMAND+1668↓j
4318   9699                                                     ; GET_COMMAND+16A8↓j
4319   9699 CD 35 02                    call    CASS_READ_BYTE
4320   969C FE 78                       cp      78h ; 'x'
4321   969E 28 44                       jr      z, loc_76E4
4322   96A0 FE 3C                       cp      3Ch ; '<'
4323   96A2 20 F5                       jr      nz, loc_7699
4324   96A4 CD 35 02                    call    CASS_READ_BYTE
4325   96A7 47                          ld      b, a
4326   96A8 CD 35 02                    call    CASS_READ_BYTE
4327   96AB 5F                          ld      e, a
4328   96AC CD 35 02                    call    CASS_READ_BYTE
4329   96AF 57                          ld      d, a
4330   96B0 83                          add     a, e
4331   96B1 4F                          ld      c, a
4332   96B2 2A 31 9F                    ld      hl, (parm_OFFSET)
4333   96B5 19                          add     hl, de
4334   96B6 E5                          push    hl
4335   96B7 D1                          pop     de
4336   96B8 2A 2B 9F                    ld      hl, (parm_END)
4337   96BB CD 13 98                    call    sub_7813
4338   96BE             
4339   96BE             loc_76BE:                               ; CODE XREF: GET_COMMAND+1696↓j
4340   96BE CD 35 02                    call    CASS_READ_BYTE
4341   96C1 F5                          push    af
4342   96C2 3A 3D 9F                    ld      a, (byte_7F3D)
4343   96C5 B7                          or      a
4344   96C6 28 03                       jr      z, loc_76CB
4345   96C8 F1                          pop     af
4346   96C9 18 02                       jr      loc_76CD
4347   96CB             ; ---------------------------------------------------------------------------
4348   96CB             
4349   96CB             loc_76CB:                               ; CODE XREF: GET_COMMAND+168C↑j
4350   96CB F1                          pop     af
4351   96CC 12                          ld      (de), a
4352   96CD             
4353   96CD             loc_76CD:                               ; CODE XREF: GET_COMMAND+168F↑j
4354   96CD 13                          inc     de
4355   96CE 81                          add     a, c
4356   96CF 4F                          ld      c, a
4357   96D0 10 EC                       djnz    loc_76BE
4358   96D2 1B                          dec     de
4359   96D3 2A 2D 9F                    ld      hl, (parm_START)
4360   96D6 CD 1C 98                    call    sub_781C
4361   96D9 CD 35 02                    call    CASS_READ_BYTE
4362   96DC B9                          cp      c
4363   96DD 20 32                       jr      nz, loc_7711
4364   96DF CD 2C 02                    call    Blink_Asterisk
4365   96E2 18 B5                       jr      loc_7699
4366   96E4             ; ---------------------------------------------------------------------------
4367   96E4             
4368   96E4             loc_76E4:                               ; CODE XREF: GET_COMMAND+1664↑j
4369   96E4 CD 35 02                    call    CASS_READ_BYTE
4370   96E7 6F                          ld      l, a
4371   96E8 CD 35 02                    call    CASS_READ_BYTE
4372   96EB 67                          ld      h, a
4373   96EC ED 5B 31 9F                 ld      de, (parm_OFFSET)
4374   96F0 19                          add     hl, de
4375   96F1 E5                          push    hl
4376   96F2 CD F8 01                    call    Cassette_Off
4377   96F5 CD 77 89                    call    SCROLL_SAVEREGS ; save all regs and scroll down
4378   96F8 2A 2B 9F                    ld      hl, (parm_END)
4379   96FB CD 3F 92                    call    HL_to_HEX
4380   96FE CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
4381   9701 2A 2D 9F                    ld      hl, (parm_START)
4382   9704 CD 3F 92                    call    HL_to_HEX
4383   9707 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
4384   970A E1                          pop     hl
4385   970B CD 3F 92                    call    HL_to_HEX
4386   970E C3 F3 80                    jp      return_from_user
4387   9711             ; ---------------------------------------------------------------------------
4388   9711             
4389   9711             loc_7711:                               ; CODE XREF: GET_COMMAND+16A3↑j
4390   9711 CD 77 89                    call    SCROLL_SAVEREGS ; save all regs and scroll down
4391   9714 AF                          xor     a
4392   9715 32 E4 9E                    ld      (byte_7EE4), a
4393   9718 21 F7 9E                    ld      hl, TAPE_ERROR  ; tape error message
4394   971B CD 6F 90                    call    SHOW_INSTR_HDR
4395   971E C3 F8 01                    jp      Cassette_Off
4396   9721             
4397   9721             
4398   9721             ; =============== S U B R O U T I N E =======================================
4399   9721             
4400   9721             
4401   9721             GET_PARAM_STRING:
4402   9721             
4403   9721 CD 77 89                    call    SCROLL_SAVEREGS ; save all regs and scroll down
4404   9724 21 3E 9F                    ld      hl, string_buffer
4405   9727 06 06                       ld      b, 6
4406   9729 CD 60 99                    call    GET_ASCII       ; Get ascii string to (HL), maxlen = B
4407   972C AF                          xor     a
4408   972D CD 12 02                    call    Select_Cass_Unit
4409   9730 C3 87 02                    jp      Write_Leader_Sync
4410   9733             
4411   9733             ; =============== S U B R O U T I N E =======================================
4412   9733             
4413   9733             
4414   9733             WRITE_FILENAME:                        ; CODE XREF: GET_COMMAND+12F0↑p
4415   9733                                                     ; sub_75A3+1B0↓p
4416   9733 CD 64 02                    call    CASS_WRITE_BYTE
4417   9736 21 3E 9F                    ld      hl, string_buffer
4418   9739 06 06                       ld      b, 6
4419   973B             
4420   973B             loc_773B:                               ; CODE XREF: WRITE_FILENAME+15↓j
4421   973B 7E                          ld      a, (hl)
4422   973C FE 0D                       cp      0Dh
4423   973E 20 04                       jr      nz, loc_7744
4424   9740 3E 20                       ld      a, 20h ; ' '
4425   9742 18 01                       jr      loc_7745
4426   9744             ; ---------------------------------------------------------------------------
4427   9744             
4428   9744             loc_7744:                               ; CODE XREF: WRITE_FILENAME+B↑j
4429   9744 23                          inc     hl
4430   9745             
4431   9745             loc_7745:                               ; CODE XREF: WRITE_FILENAME+F↑j
4432   9745 CD 64 02                    call    CASS_WRITE_BYTE
4433   9748 10 F1                       djnz    loc_773B
4434   974A C9                          ret
4435   974B             
4436   974B             ; ---------------------------------------------------------------------------
4437   974B             
4438   974B             write_tape_file:                        ; CODE XREF: sub_75A3+18↑j
4439   974B CD A7 97                    call    GET_PARAMS
4440   974E CD 21 97                    call    GET_PARAM_STRING
4441   9751 3E 55                       ld      a, 55h ; 'U'
4442   9753 CD 33 97                    call    WRITE_FILENAME
4443   9756 AF                          xor     a
4444   9757 ED 5B 2D 9F                 ld      de, (parm_START)
4445   975B 2A 2B 9F                    ld      hl, (parm_END)
4446   975E ED 52                       sbc     hl, de
4447   9760 23                          inc     hl
4448   9761             
4449   9761             loc_7761:                               ; CODE XREF: sub_75A3+1C7↓j
4450   9761 25                          dec     h
4451   9762 FA 6C 97                    jp      m, tape_less_256
4452   9765 06 00                       ld      b, 0			; 0 == 256 bytes
4453   9767 CD 86 97                    call    WRITE_TAPE_BLOCK	; B = number of bytes, DE = ptr to Data
4454   976A 18 F5                       jr      loc_7761
4455   976C             ; ---------------------------------------------------------------------------
4456   976C             
4457   976C             tape_less_256:                               ; CODE XREF: sub_75A3+1BF↑j
4458   976C AF                          xor     a
4459   976D BD                          cp      l
4460   976E 45                          ld      b, l
4461   976F C4 86 97                    call    nz, WRITE_TAPE_BLOCK	; B = number of bytes, DE = ptr to Data
4462   9772 3E 78                       ld      a, 78h ; 'x'
4463   9774 CD 64 02                    call    CASS_WRITE_BYTE
4464   9777 3A 2F 9F                    ld      a, (parm_TRANSFER)
4465   977A CD 64 02                    call    CASS_WRITE_BYTE
4466   977D 3A 30 9F                    ld      a, (parm_TRANSFER+1)	; 2 bytes of execution address
4467   9780 CD 64 02                    call    CASS_WRITE_BYTE
4468   9783 C3 F8 01                    jp      Cassette_Off
4469   9786             
4470   9786             ; =============== S U B R O U T I N E =======================================
4471   9786             
4472   9786             ; B = number of bytes, DE = ptr to Data
4473   9786             
4474   9786             WRITE_TAPE_BLOCK: 
4475   9786             		
4476   9786 7A          		ld      a, d
4477   9787 83                          add     a, e
4478   9788 4F                          ld      c, a
4479   9789 3E 3C                       ld      a, 3Ch ; '<'
4480   978B CD 64 02                    call    CASS_WRITE_BYTE
4481   978E 78                          ld      a, b
4482   978F CD 64 02                    call    CASS_WRITE_BYTE
4483   9792 7B                          ld      a, e
4484   9793 CD 64 02                    call    CASS_WRITE_BYTE
4485   9796 7A                          ld      a, d
4486   9797 CD 64 02                    call    CASS_WRITE_BYTE
4487   979A             
4488   979A             loc_779A:                               ; CODE XREF: WRITE_TAPE_BLOCK+1B↓j
4489   979A 1A                          ld      a, (de)
4490   979B CD 64 02                    call    CASS_WRITE_BYTE
4491   979E 81                          add     a, c
4492   979F 4F                          ld      c, a
4493   97A0 13                          inc     de
4494   97A1 10 F7                       djnz    loc_779A
4495   97A3 79                          ld      a, c
4496   97A4 C3 64 02                    jp      CASS_WRITE_BYTE	; Write checksum byte
4497   97A7             ; End of function WRITE_TAPE_BLOCK
4498   97A7             
4499   97A7             
4500   97A7             ; =============== S U B R O U T I N E =======================================
4501   97A7             
4502   97A7             
4503   97A7             GET_PARAMS:                             ; CODE XREF: GET_COMMAND:out_disassem_disk↑p
4504   97A7                                                     ; sub_75A3+1F↑p ...
4505   97A7 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
4506   97AA CD 67 85                    call    HEX_to_HL       ; get 4 digit hex value into the HL register
4507   97AD 22 2D 9F                    ld      (parm_START), hl
4508   97B0 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
4509   97B3 CD 67 85                    call    HEX_to_HL       ; get 4 digit hex value into the HL register
4510   97B6 22 2B 9F                    ld      (parm_END), hl
4511   97B9 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
4512   97BC CD 67 85                    call    HEX_to_HL       ; get 4 digit hex value into the HL register
4513   97BF 22 2F 9F                    ld      (parm_TRANSFER), hl
4514   97C2 C9                          ret
4515   97C3             ; End of function GET_PARAMS
4516   97C3             
4517   97C3             ; ---------------------------------------------------------------------------
4518   97C3             
4519   97C3             loc_77C3:                               ; CODE XREF: GET_COMMAND+71↑j
4520   97C3 3E 5E                       ld      a, 5Eh ; '^'
4521   97C5 CD 86 9A                    call    TAS_VID_DRIVER
4522   97C8 2A 08 9B                    ld      hl, (reg_PC)
4523   97CB 01 01 00                    ld      bc, 1
4524   97CE AF                          xor     a
4525   97CF CD 0C 8B                    call    DISASSEMBLE
4526   97D2 2A D4 9E                    ld      hl, (GEN_PTR_16)
4527   97D5 22 08 9B                    ld      (reg_PC), hl
4528   97D8 18 0E                       jr      loc_77E8
4529   97DA             ; ---------------------------------------------------------------------------
4530   97DA             
4531   97DA             loc_77DA:                               ; CODE XREF: GET_COMMAND+76↑j
4532   97DA 3E 5D                       ld      a, 5Dh ; ']'
4533   97DC CD 86 9A                    call    TAS_VID_DRIVER
4534   97DF 2A 08 9B                    ld      hl, (reg_PC)
4535   97E2 CD EB 97                    call    sub_77EB
4536   97E5 22 08 9B                    ld      (reg_PC), hl
4537   97E8             
4538   97E8             loc_77E8:                               ; CODE XREF: GET_COMMAND+179E↑j
4539   97E8 C3 65 83                    jp      SHOW_REGS
4540   97EB             
4541   97EB             ; =============== S U B R O U T I N E =======================================
4542   97EB             
4543   97EB             
4544   97EB             sub_77EB:                               ; CODE XREF: GET_COMMAND+6DC↑p
4545   97EB                                                     ; GET_COMMAND+17A8↑p
4546   97EB 22 3B 9F                    ld      (word_7F3B), hl
4547   97EE 01 0A 00                    ld      bc, 0Ah
4548   97F1 ED 42                       sbc     hl, bc
4549   97F3             
4550   97F3             loc_77F3:                               ; CODE XREF: sub_77EB+21↓j
4551   97F3 01 01 00                    ld      bc, 1
4552   97F6 AF                          xor     a
4553   97F7 22 2B 9F                    ld      (parm_END), hl
4554   97FA CD 0C 8B                    call    DISASSEMBLE
4555   97FD 2A D4 9E                    ld      hl, (GEN_PTR_16)
4556   9800 ED 4B 3B 9F                 ld      bc, (word_7F3B)
4557   9804 AF                          xor     a
4558   9805 ED 42                       sbc     hl, bc
4559   9807 28 06                       jr      z, loc_780F
4560   9809 2A D4 9E                    ld      hl, (GEN_PTR_16)
4561   980C FA F3 97                    jp      m, loc_77F3
4562   980F             
4563   980F             loc_780F:                               ; CODE XREF: sub_77EB+1C↑j
4564   980F 2A 2B 9F                    ld      hl, (parm_END)
4565   9812 C9                          ret
4566   9813             ; End of function sub_77EB
4567   9813             
4568   9813             
4569   9813             ; =============== S U B R O U T I N E =======================================
4570   9813             
4571   9813             
4572   9813             sub_7813:                               ; CODE XREF: GET_COMMAND+1516↑p
4573   9813                                                     ; GET_COMMAND+1681↑p
4574   9813 CD 25 98                    call    check_range     ; HL = Start, DE = End. Ensure DE >= HL (1=OK, 0=ERR)
4575   9816 C8                          ret     z
4576   9817 ED 53 2B 9F                 ld      (parm_END), de
4577   981B C9                          ret
4578   981C             ; End of function sub_7813
4579   981C             
4580   981C             
4581   981C             ; =============== S U B R O U T I N E =======================================
4582   981C             
4583   981C             
4584   981C             sub_781C:                               ; CODE XREF: GET_COMMAND+1532↑p
4585   981C                                                     ; GET_COMMAND+169C↑p
4586   981C CD 25 98                    call    check_range     ; HL = Start, DE = End. Ensure DE >= HL (1=OK, 0=ERR)
4587   981F C0                          ret     nz
4588   9820 ED 53 2D 9F                 ld      (parm_START), de
4589   9824 C9                          ret
4590   9825             ; End of function sub_781C
4591   9825             
4592   9825             
4593   9825             ; =============== S U B R O U T I N E =======================================
4594   9825             
4595   9825             ; HL = Start, DE = End. Ensure DE >= HL (1=OK, 0=ERR)
4596   9825             
4597   9825             check_range:                            ; CODE XREF: GET_COMMAND+12C6↑p
4598   9825                                                     ; sub_73D5+28↑p ...
4599   9825 E5                          push    hl
4600   9826 B7                          or      a
4601   9827 ED 52                       sbc     hl, de
4602   9829 E1                          pop     hl
4603   982A 38 04                       jr      c, range_check_error
4604   982C 3E 01                       ld      a, 1
4605   982E B7                          or      a
4606   982F C9                          ret
4607   9830             ; ---------------------------------------------------------------------------
4608   9830             
4609   9830             range_check_error:                      ; CODE XREF: check_range+5↑j
4610   9830 AF                          xor     a
4611   9831 C9                          ret
4612   9832             ; End of function check_range
4613   9832             
4614   9832             ; ---------------------------------------------------------------------------
4615   9832             
4616   9832             relocate_memory:                        ; CODE XREF: GET_COMMAND+80↑j
4617   9832 CD A7 97                    call    GET_PARAMS
4618   9835 ED 5B 2D 9F                 ld      de, (parm_START)
4619   9839 2A 2B 9F                    ld      hl, (parm_END)
4620   983C CD 25 98                    call    check_range     ; HL = Start, DE = End. Ensure DE >= HL (1=OK, 0=ERR)
4621   983F CA F3 80                    jp      z, return_from_user
4622   9842 AF                          xor     a
4623   9843 ED 52                       sbc     hl, de
4624   9845 23                          inc     hl
4625   9846 E5                          push    hl
4626   9847 22 33 9F                    ld      (word_7F33), hl
4627   984A 2A 2F 9F                    ld      hl, (parm_TRANSFER)
4628   984D ED 5B 2D 9F                 ld      de, (parm_START)
4629   9851 AF                          xor     a
4630   9852 ED 52                       sbc     hl, de
4631   9854 22 31 9F                    ld      (parm_OFFSET), hl
4632   9857 C1                          pop     bc
4633   9858 2A 2D 9F                    ld      hl, (parm_START)
4634   985B ED 5B 2F 9F                 ld      de, (parm_TRANSFER)
4635   985F CD 14 99                    call    MOVE            ; MOVE HL=SRC, DE=DEST, BC=COUNT (overlap aware!)
4636   9862 2A 2F 9F                    ld      hl, (parm_TRANSFER)
4637   9865 22 D4 9E                    ld      (GEN_PTR_16), hl
4638   9868             
4639   9868             loc_7868:                               ; CODE XREF: GET_COMMAND+1866↓j
4640   9868 7E                          ld      a, (hl)
4641   9869 FE ED                       cp      0EDh
4642   986B 28 35                       jr      z, reloc_ED
4643   986D FE DD                       cp      0DDh
4644   986F 28 4C                       jr      z, reloc_DD_FD
4645   9871 FE FD                       cp      0FDh
4646   9873 28 48                       jr      z, reloc_DD_FD
4647   9875 DD 21 02 9F                 ld      ix, XX_Adjust   ; 26 x  Single Byte instructions requiring adjustment
4648   9879 06 1A                       ld      b, 26
4649   987B             
4650   987B             loc_787B:                               ; CODE XREF: GET_COMMAND+1848↓j
4651   987B DD BE 00                    cp      (ix+0)
4652   987E 28 39                       jr      z, loc_78B9
4653   9880 DD 23                       inc     ix
4654   9882 10 F7                       djnz    loc_787B
4655   9884             
4656   9884             loc_7884:                               ; CODE XREF: GET_COMMAND+1879↓j
4657   9884                                                     ; GET_COMMAND+1891↓j
4658   9884 01 01 00                    ld      bc, 1
4659   9887 2A D4 9E                    ld      hl, (GEN_PTR_16)
4660   988A AF                          xor     a
4661   988B CD 0C 8B                    call    DISASSEMBLE
4662   988E             
4663   988E             loc_788E:                               ; CODE XREF: GET_COMMAND+18B8↓j
4664   988E                                                     ; GET_COMMAND+18C1↓j
4665   988E 2A 33 9F                    ld      hl, (word_7F33)
4666   9891 4F                          ld      c, a
4667   9892 06 00                       ld      b, 0
4668   9894 AF                          xor     a
4669   9895 ED 42                       sbc     hl, bc
4670   9897 22 33 9F                    ld      (word_7F33), hl
4671   989A FA F3 80                    jp      m, return_from_user
4672   989D 2A D4 9E                    ld      hl, (GEN_PTR_16)
4673   98A0 18 C6                       jr      loc_7868
4674   98A2             ; ---------------------------------------------------------------------------
4675   98A2             
4676   98A2             reloc_ED:                               ; CODE XREF: GET_COMMAND+1831↑j
4677   98A2 23                          inc     hl
4678   98A3 7E                          ld      a, (hl)
4679   98A4 DD 21 1C 9F                 ld      ix, ED_adjust   ; 8 x  ED XX instructions requiring adjustment
4680   98A8 06 08                       ld      b, 8
4681   98AA             
4682   98AA             loc_78AA:                               ; CODE XREF: GET_COMMAND+1877↓j
4683   98AA DD BE 00                    cp      (ix+0)
4684   98AD 28 06                       jr      z, loc_78B5
4685   98AF DD 23                       inc     ix
4686   98B1 10 F7                       djnz    loc_78AA
4687   98B3 18 CF                       jr      loc_7884
4688   98B5             ; ---------------------------------------------------------------------------
4689   98B5             
4690   98B5             loc_78B5:                               ; CODE XREF: GET_COMMAND+1873↑j
4691   98B5                                                     ; GET_COMMAND+1887↓j ...
4692   98B5 3E 04                       ld      a, 4
4693   98B7 18 14                       jr      loc_78CD
4694   98B9             ; ---------------------------------------------------------------------------
4695   98B9             
4696   98B9             loc_78B9:                               ; CODE XREF: GET_COMMAND+1844↑j
4697   98B9 3E 03                       ld      a, 3
4698   98BB 18 10                       jr      loc_78CD
4699   98BD             ; ---------------------------------------------------------------------------
4700   98BD             
4701   98BD             reloc_DD_FD:                            ; CODE XREF: GET_COMMAND+1835↑j
4702   98BD                                                     ; GET_COMMAND+1839↑j
4703   98BD 23                          inc     hl
4704   98BE 7E                          ld      a, (hl)
4705   98BF FE 21                       cp      21h ; '!'
4706   98C1 28 F2                       jr      z, loc_78B5
4707   98C3 FE 22                       cp      22h ; '"'
4708   98C5 28 EE                       jr      z, loc_78B5
4709   98C7 FE 2A                       cp      2Ah ; '*'
4710   98C9 28 EA                       jr      z, loc_78B5
4711   98CB 18 B7                       jr      loc_7884
4712   98CD             ; ---------------------------------------------------------------------------
4713   98CD             
4714   98CD             loc_78CD:                               ; CODE XREF: GET_COMMAND+187D↑j
4715   98CD                                                     ; GET_COMMAND+1881↑j
4716   98CD F5                          push    af
4717   98CE 23                          inc     hl
4718   98CF E5                          push    hl
4719   98D0 5E                          ld      e, (hl)
4720   98D1 23                          inc     hl
4721   98D2 56                          ld      d, (hl)
4722   98D3 2A 2B 9F                    ld      hl, (parm_END)
4723   98D6 CD 25 98                    call    check_range     ; HL = Start, DE = End. Ensure DE >= HL (1=OK, 0=ERR)
4724   98D9 28 19                       jr      z, loc_78F4
4725   98DB 2A 2D 9F                    ld      hl, (parm_START)
4726   98DE CD 25 98                    call    check_range     ; HL = Start, DE = End. Ensure DE >= HL (1=OK, 0=ERR)
4727   98E1 20 11                       jr      nz, loc_78F4
4728   98E3 2A 31 9F                    ld      hl, (parm_OFFSET)
4729   98E6 19                          add     hl, de
4730   98E7 E5                          push    hl
4731   98E8 D1                          pop     de
4732   98E9 E1                          pop     hl
4733   98EA 73                          ld      (hl), e
4734   98EB 23                          inc     hl
4735   98EC 72                          ld      (hl), d
4736   98ED 23                          inc     hl
4737   98EE 22 D4 9E                    ld      (GEN_PTR_16), hl
4738   98F1 F1                          pop     af
4739   98F2 18 9A                       jr      loc_788E
4740   98F4             ; ---------------------------------------------------------------------------
4741   98F4             
4742   98F4             loc_78F4:                               ; CODE XREF: GET_COMMAND+189F↑j
4743   98F4                                                     ; GET_COMMAND+18A7↑j
4744   98F4 E1                          pop     hl
4745   98F5 23                          inc     hl
4746   98F6 23                          inc     hl
4747   98F7 22 D4 9E                    ld      (GEN_PTR_16), hl
4748   98FA F1                          pop     af
4749   98FB 18 91                       jr      loc_788E
4750   98FD             ; ---------------------------------------------------------------------------
4751   98FD             
4752   98FD             block_move:                             ; CODE XREF: GET_COMMAND+85↑j
4753   98FD CD A7 97                    call    GET_PARAMS
4754   9900 2A 2B 9F                    ld      hl, (parm_END)
4755   9903 ED 5B 2D 9F                 ld      de, (parm_START)
4756   9907 AF                          xor     a
4757   9908 ED 52                       sbc     hl, de
4758   990A 23                          inc     hl
4759   990B E5                          push    hl
4760   990C C1                          pop     bc
4761   990D 2A 2D 9F                    ld      hl, (parm_START)
4762   9910 ED 5B 2F 9F                 ld      de, (parm_TRANSFER)
4763   9914             
4764   9914             ; =============== S U B R O U T I N E =======================================
4765   9914             
4766   9914             ; MOVE HL=SRC, DE=DEST, BC=COUNT (overlap aware!)
4767   9914             
4768   9914             MOVE:                                   ; CODE XREF: GET_COMMAND+1825↑p
4769   9914 E5                          push    hl
4770   9915 B7                          or      a
4771   9916 ED 52                       sbc     hl, de
4772   9918 E1                          pop     hl
4773   9919 38 03                       jr      c, blk_overlap
4774   991B ED B0                       ldir
4775   991D C9                          ret
4776   991E             ; ---------------------------------------------------------------------------
4777   991E             
4778   991E             blk_overlap:                            ; CODE XREF: MOVE+5↑j
4779   991E 09                          add     hl, bc
4780   991F 2B                          dec     hl
4781   9920 EB                          ex      de, hl
4782   9921 09                          add     hl, bc
4783   9922 2B                          dec     hl
4784   9923 EB                          ex      de, hl
4785   9924 ED B8                       lddr
4786   9926 C9                          ret
4787   9927             ; End of function MOVE
4788   9927             
4789   9927             
4790   9927             ; =============== S U B R O U T I N E =======================================
4791   9927             
4792   9927             
4793   9927             SCREEN_DUMP:                               ; CODE XREF: GET_CHAR+5↑p
4794   9927             
4795   9927 CD 2E 99                    call    checkFDC        ; Look for FDC chip
4796   992A 28 0A                       jr      z, loc_7936
4797   992C AF                          xor     a
4798   992D C9                          ret
4799   992E             
4800   992E             
4801   992E             ; =============== S U B R O U T I N E =======================================
4802   992E             
4803   992E             ; Look for FDC chip
4804   992E             
4805   992E             checkFDC:                               ; CODE XREF: GET_COMMAND+99F↑p
4806   992E                                                     ; SCREEN_DUMP↑p
4807   992E 3A E8 37                    ld      a, (37E8h)
4808   9931 E6 F0                       and     0F0h
4809   9933 FE 30                       cp      30h ; '0'
4810   9935 C9                          ret
4811   9936             
4812   9936             ; ---------------------------------------------------------------------------
4813   9936             
4814   9936             loc_7936:                               ; CODE XREF: SCREEN_DUMP+3↑j
4815   9936 E5                          push    hl
4816   9937 C5                          push    bc
4817   9938 21 00 3C                    ld      hl, SCREEN_START
4818   993B 0E 10                       ld      c, 10h
4819   993D             
4820   993D             loc_793D:                               ; CODE XREF: SCREEN_DUMP+33↓j
4821   993D 06 40                       ld      b, 40h ; '@'
4822   993F             
4823   993F             loc_793F:                               ; CODE XREF: SCREEN_DUMP+2B↓j
4824   993F 7E                          ld      a, (hl)
4825   9940 FE 1B                       cp      1Bh
4826   9942 38 08                       jr      c, loc_794C
4827   9944 FE 81                       cp      81h
4828   9946 38 06                       jr      c, loc_794E
4829   9948 3E 2E                       ld      a, 2Eh ; '.'
4830   994A 18 02                       jr      loc_794E
4831   994C             ; ---------------------------------------------------------------------------
4832   994C             
4833   994C             loc_794C:                               ; CODE XREF: SCREEN_DUMP+1B↑j
4834   994C C6 40                       add     a, 40h ; '@'
4835   994E             
4836   994E             loc_794E:                               ; CODE XREF: SCREEN_DUMP+1F↑j
4837   994E                                                     ; SCREEN_DUMP+23↑j
4838   994E CD B4 9A                    call    TAS_PTR_DRIVER
4839   9951 23                          inc     hl
4840   9952 10 EB                       djnz    loc_793F
4841   9954 3E 0D                       ld      a, 0Dh
4842   9956 CD B4 9A                    call    TAS_PTR_DRIVER
4843   9959 0D                          dec     c
4844   995A 20 E1                       jr      nz, loc_793D
4845   995C C1                          pop     bc
4846   995D E1                          pop     hl
4847   995E AF                          xor     a
4848   995F C9                          ret
4849   9960             
4850   9960             ; =============== S U B R O U T I N E =======================================
4851   9960             
4852   9960             ; Get ascii string to (HL), maxlen = B
4853   9960             
4854   9960             GET_ASCII:                              ; CODE XREF: GET_DOS_PARAMS+8↑p
4855   9960                                                     ; GET_PARAM_STRING+8↑p
4856   9960 48                          ld      c, b
4857   9961             
4858   9961             loc_7961:                               ; CODE XREF: GET_ASCII+34↓j
4859   9961                                                     ; GET_ASCII+4A↓j
4860   9961 3E 5F                       ld      a, 5Fh ; '_'
4861   9963 CD 86 9A                    call    TAS_VID_DRIVER
4862   9966             
4863   9966             loc_7966:                               ; CODE XREF: GET_ASCII+A↓j
4864   9966                                                     ; GET_ASCII+1A↓j ...
4865   9966 CD 2E 9A                    call    sub_7A2E
4866   9969 B7                          or      a
4867   996A 28 FA                       jr      z, loc_7966
4868   996C FE 01                       cp      1
4869   996E 28 3C                       jr      z, loc_79AC
4870   9970 FE 0D                       cp      0Dh
4871   9972 28 25                       jr      z, loc_7999
4872   9974 FE 08                       cp      8
4873   9976 28 24                       jr      z, loc_799C
4874   9978 FE 20                       cp      20h ; ' '
4875   997A 38 EA                       jr      c, loc_7966
4876   997C FE 5B                       cp      5Bh ; '['
4877   997E 30 E6                       jr      nc, loc_7966
4878   9980 F5                          push    af
4879   9981 78                          ld      a, b
4880   9982 B7                          or      a
4881   9983 28 11                       jr      z, loc_7996
4882   9985 05                          dec     b
4883   9986             
4884   9986             loc_7986:                               ; CODE XREF: GET_ASCII+3A↓j
4885   9986 3E 08                       ld      a, 8
4886   9988 CD 86 9A                    call    TAS_VID_DRIVER
4887   998B F1                          pop     af
4888   998C 77                          ld      (hl), a
4889   998D 23                          inc     hl
4890   998E FE 0D                       cp      0Dh
4891   9990 C8                          ret     z
4892   9991 CD 86 9A                    call    TAS_VID_DRIVER
4893   9994 18 CB                       jr      loc_7961
4894   9996             ; ---------------------------------------------------------------------------
4895   9996             
4896   9996             loc_7996:                               ; CODE XREF: GET_ASCII+23↑j
4897   9996 F1                          pop     af
4898   9997 18 CD                       jr      loc_7966
4899   9999             ; ---------------------------------------------------------------------------
4900   9999             
4901   9999             loc_7999:                               ; CODE XREF: GET_ASCII+12↑j
4902   9999 F5                          push    af
4903   999A 18 EA                       jr      loc_7986
4904   999C             ; ---------------------------------------------------------------------------
4905   999C             
4906   999C             loc_799C:                               ; CODE XREF: GET_ASCII+16↑j
4907   999C 78                          ld      a, b
4908   999D 91                          sub     c
4909   999E 28 C6                       jr      z, loc_7966
4910   99A0 04                          inc     b
4911   99A1 2B                          dec     hl
4912   99A2 3E 08                       ld      a, 8
4913   99A4 CD 86 9A                    call    TAS_VID_DRIVER
4914   99A7 CD 86 9A                    call    TAS_VID_DRIVER
4915   99AA 18 B5                       jr      loc_7961
4916   99AC             ; ---------------------------------------------------------------------------
4917   99AC             
4918   99AC             loc_79AC:                               ; CODE XREF: GET_ASCII+E↑j
4919   99AC 3E 08                       ld      a, 8
4920   99AE CD 86 9A                    call    TAS_VID_DRIVER
4921   99B1 C3 F3 80                    jp      return_from_user
4922   99B4             
4923   99B4             ; =============== S U B R O U T I N E =======================================
4924   99B4             
4925   99B4             ; tasmon internal keyboard driver
4926   99B4             ; very similar to L2 keyboard driver @ $03E3
4927   99B4             ;
4928   99B4             
4929   99B4             TAS_KBD_DRIVER:                         
4930   99B4 21 24 9F                    ld      hl, TAS_KBD_work_area ; 7 bytes of previously pressed key rows
4931   99B7 01 01 38                    ld      bc, KBD_ROW_01
4932   99BA 16 00                       ld      d, 0            ; column index
4933   99BC             
4934   99BC             tas_rows_remaining:                     ; CODE XREF: TAS_KBD_DRIVER+13↓j
4935   99BC 0A                          ld      a, (bc)         ; get data from Row
4936   99BD 5F                          ld      e, a
4937   99BE AE                          xor     (hl)            ; exclude any previously pressed keys
4938   99BF 73                          ld      (hl), e
4939   99C0 A3                          and     e               ; A (and E) both now have the new key press bit
4940   99C1 20 38                       jr      nz, key_active  ; Key active in this row
4941   99C3 14                          inc     d
4942   99C4 23                          inc     hl              ; bump to next work area row
4943   99C5 CB 01                       rlc     c               ; step row address from 3801h => 3840h
4944   99C7 F2 BC 99                    jp      p, tas_rows_remaining ; Scan rows 3801 => 3840.  3880 (Shift Key) checked later
4945   99CA 3A 35 9F                    ld      a, (KBD_LAST_BYTE)
4946   99CD B7                          or      a
4947   99CE C8                          ret     z               ; no previously pressed key active
4948   99CF 2A 38 9F                    ld      hl, (KBD_LAST_ROW)
4949   99D2 BE                          cp      (hl)            ; If last active row, and last active bit combo match, do auto-repeat
4950   99D3 28 07                       jr      z, AUTO_REPEAT
4951   99D5 AF                          xor     a               ; clear auto-repeat key bit combo
4952   99D6 32 35 9F                    ld      (KBD_LAST_BYTE), a
4953   99D9 C9                          ret
4954   99DA             ; ---------------------------------------------------------------------------
4955   99DA             
4956   99DA             continue_delay:
4957   99DA AF                          xor     a
4958   99DB C9                          ret
4959   99DC             ; ---------------------------------------------------------------------------
4960   99DC             
4961   99DC             AUTO_REPEAT: 
4962   99DC 2A 36 9F                    ld      hl, (REPEAT_DELAY)
4963   99DF 2B                          dec     hl
4964   99E0 22 36 9F                    ld      (REPEAT_DELAY), hl
4965   99E3 7C                          ld      a, h
4966   99E4 B5                          or      l
4967   99E5 20 F3                       jr      nz, continue_delay	; Repeat counter not ZERO yet, return to caller without keypress
4968   99E7 21 60 00                    ld      hl, 60h ; '`'		; Delay between each auto-repeated key
4969   99EA 22 36 9F                    ld      (REPEAT_DELAY), hl
4970   99ED 3A 3A 9F                    ld      a, (byte_7F3A)
4971   99F0 57                          ld      d, a
4972   99F1 3A 35 9F                    ld      a, (KBD_LAST_BYTE)
4973   99F4 ED 4B 38 9F                 ld      bc, (KBD_LAST_ROW)
4974   99F8 5F                          ld      e, a
4975   99F9 18 0E                       jr      loc_7A09
4976   99FB             ; ---------------------------------------------------------------------------
4977   99FB             
4978   99FB             key_active:
4979   99FB 32 35 9F                    ld      (KBD_LAST_BYTE), a
4980   99FE ED 43 38 9F                 ld      (KBD_LAST_ROW), bc
4981   9A02 5F                          ld      e, a
4982   9A03 21 00 0A                    ld      hl, 0A00h       ; Delay before auto-repeat kicks in
4983   9A06 22 36 9F                    ld      (REPEAT_DELAY), hl ; set up auto repeat delay on this key bit
4984   9A09             
4985   9A09             loc_7A09:                               ; CODE XREF: TAS_KBD_DRIVER+45↑j
4986   9A09 7A                          ld      a, d
4987   9A0A 32 3A 9F                    ld      (byte_7F3A), a
4988   9A0D F5                          push    af
4989   9A0E 01 00 0A                    ld      bc, 0A00h
4990   9A11 CD 60 00                    call    Delay
4991   9A14 3A 0C 40                    ld      a, (RST28_Vector) ; disable any 3rd Party Keyboard intercepts
4992   9A17 32 5E A0                    ld      (RST28_SAVE), a
4993   9A1A 3E C9                       ld      a, 0C9h
4994   9A1C 32 0C 40                    ld      (RST28_Vector), a
4995   9A1F F1                          pop     af
4996   9A20 07                          rlca
4997   9A21 07                          rlca
4998   9A22 CD FE 03                    call    sub_3FE         ; Jump into LV2 Keyboard Routine
4999   9A25 F5                          push    af
5000   9A26 3A 5E A0                    ld      a, (RST28_SAVE) ; Restore any 3rd party vectors
5001   9A29 32 0C 40                    ld      (RST28_Vector), a
5002   9A2C F1                          pop     af
5003   9A2D C9                          ret
5004   9A2E             
5005   9A2E             ; =============== S U B R O U T I N E =======================================
5006   9A2E             
5007   9A2E             
5008   9A2E             sub_7A2E:                               ; CODE XREF: GET_CHAR↑p
5009   9A2E                                                     ; GET_ASCII:loc_7966↑p
5010   9A2E E5                          push    hl
5011   9A2F D5                          push    de
5012   9A30 C5                          push    bc
5013   9A31 CD B4 99                    call    TAS_KBD_DRIVER  ; tasmon internal keyboard driver
5014   9A34 C1                          pop     bc
5015   9A35 D1                          pop     de
5016   9A36 E1                          pop     hl
5017   9A37 C9                          ret
5018   9A38             ; End of function sub_7A2E
5019   9A38             
5020   9A38             ; ---------------------------------------------------------------------------
5021   9A38             
5022   9A38             view_file_info:                         ; CODE XREF: GET_COMMAND+8F↑j
5023   9A38 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
5024   9A3B 3E 01                       ld      a, 1
5025   9A3D 32 3D 9F                    ld      (byte_7F3D), a
5026   9A40 21 00 00                    ld      hl, 0
5027   9A43 22 31 9F                    ld      (parm_OFFSET), hl
5028   9A46 22 2D 9F                    ld      (parm_START), hl
5029   9A49 2B                          dec     hl
5030   9A4A 22 2B 9F                    ld      (parm_END), hl
5031   9A4D F3                          di
5032   9A4E             
5033   9A4E             loc_7A4E:                               ; CODE XREF: GET_COMMAND+1A1E↓j
5034   9A4E CD E8 80                    call    GET_CHAR        ; get character, return in A
5035   9A51 FE 44                       cp      44h ; 'D'
5036   9A53 CA 07 95                    jp      z, disk_file_info
5037   9A56 FE 54                       cp      54h ; 'T'
5038   9A58 20 F4                       jr      nz, loc_7A4E
5039   9A5A CD 86 9A                    call    TAS_VID_DRIVER
5040   9A5D C3 7E 96                    jp      tape_file_info
5041   9A60             ; ---------------------------------------------------------------------------
5042   9A60             
5043   9A60             set_memory:                             ; CODE XREF: GET_COMMAND+8A↑j
5044   9A60 CD C4 89                    call    OUT_CHAR_SPC    ; output char in A, followed by a space to vid and return
5045   9A63 CD 67 85                    call    HEX_to_HL       ; get 4 digit hex value into the HL register
5046   9A66 E5                          push    hl
5047   9A67 CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
5048   9A6A CD 67 85                    call    HEX_to_HL       ; get 4 digit hex value into the HL register
5049   9A6D E5                          push    hl
5050   9A6E CD 7D 92                    call    SPC_VID_OUT     ; Output a SPC to video and return to caller
5051   9A71 CD 88 85                    call    HEX_VAL_to_L    ; 2 byte hex value to L register (also in A)
5052   9A74 E1                          pop     hl              ; end
5053   9A75 D1                          pop     de              ; start
5054   9A76 B7                          or      a
5055   9A77 ED 52                       sbc     hl, de          ; calc number of bytes to fill
5056   9A79 23                          inc     hl
5057   9A7A EB                          ex      de, hl          ; HL = start, DE = number of bytes
5058   9A7B 47                          ld      b, a            ; fill value
5059   9A7C             
5060   9A7C             fill_continue:                          ; CODE XREF: GET_COMMAND+1A47↓j
5061   9A7C 70                          ld      (hl), b
5062   9A7D 23                          inc     hl
5063   9A7E 1B                          dec     de
5064   9A7F 7A                          ld      a, d
5065   9A80 B3                          or      e
5066   9A81 20 F9                       jr      nz, fill_continue
5067   9A83 C3 F3 80                    jp      return_from_user
5068   9A86             
5069   9A86             ; =============== S U B R O U T I N E =======================================
5070   9A86             
5071   9A86             
5072   9A86             TAS_VID_DRIVER:                         ; CODE XREF: GET_COMMAND+2↑p
5073   9A86                                                     ; sub_60FF+15↑p ...
5074   9A86             
5075   9A86 C5                          push    bc
5076   9A87 E5                          push    hl
5077   9A88 DD E5                       push    ix
5078   9A8A D5                          push    de
5079   9A8B DD 21 1D 40                 ld      ix, L2_VIDEO_DCB
5080   9A8F 4F                          ld      c, a
5081   9A90 21 DD 03                    ld      hl, restore_regs ; restore regs after DCB call, then return to caller
5082   9A93 E5                          push    hl
5083   9A94 DD 6E 03                    ld      l, (ix+3)
5084   9A97 DD 66 04                    ld      h, (ix+4)
5085   9A9A DD 7E 05                    ld      a, (ix+5)
5086   9A9D B7                          or      a
5087   9A9E 28 01                       jr      z, loc_7AA1
5088   9AA0 77                          ld      (hl), a
5089   9AA1             
5090   9AA1             loc_7AA1:                               ; CODE XREF: TAS_VID_DRIVER+18↑j
5091   9AA1 79                          ld      a, c
5092   9AA2 FE 20                       cp      20h ; ' '
5093   9AA4 DA 06 05                    jp      c, PROCESS_CONTROL
5094   9AA7 FE 80                       cp      80h
5095   9AA9 D2 A6 04                    jp      nc, CHECK_GRAPHIC
5096   9AAC 77                          ld      (hl), a
5097   9AAD BE                          cp      (hl)
5098   9AAE C2 7B 04                    jp      nz, CONVERT_LCASE
5099   9AB1 C3 7D 04                    jp      OUTPUT_CHAR
5100   9AB4             ; End of function TAS_VID_DRIVER
5101   9AB4             
5102   9AB4             
5103   9AB4             ; =============== S U B R O U T I N E =======================================
5104   9AB4             
5105   9AB4             
5106   9AB4             TAS_PTR_DRIVER:                         
5107   9AB4             
5108   9AB4 C5                          push    bc
5109   9AB5 E5                          push    hl
5110   9AB6 DD E5                       push    ix
5111   9AB8 D5                          push    de
5112   9AB9 DD 21 25 40                 ld      ix, L2_PRINTER_DCB
5113   9ABD 21 DD 03                    ld      hl, restore_regs ; restore regs after DCB call, then return to caller
5114   9AC0 E5                          push    hl
5115   9AC1 4F                          ld      c, a
5116   9AC2 C3 8D 05                    jp      ROM_PRT_DRIVER
5117   9AC5             
5118   9AC5             ; DATA Follows
5119   9AC5             
5120   9AC5             ; ---------------------------------------------------------------------------
5121   9AC5 5441534D4F4ETasmonVer222:	.DB "TASMON  VER 2.22\n"
5121   9ACB 202056455220322E32320A
5122   9AD6 284329203139                .DB "(C) 1981 by Bruce G. Hansen"
5122   9ADC 383120627920427275636520472E2048616E73656E
5123   9AF1 03                          .DB  3
5124   9AF2             USER_REGS:			; user register save area
5125   9AF2 00 00       reg_IX:		.DW  0                    
5126   9AF4 00 00       reg_IY:		.DW  0
5127   9AF6 00 00       reg_xAF:        .DW  0		; ALT regs followed by normal
5128   9AF8 00 00       reg_xBC:        .DW  0
5129   9AFA 00 00       reg_xDE:        .DW  0
5130   9AFC 00 00       reg_xHL:        .DW  0
5131   9AFE 00 00       reg_AF:		.DW  0 
5132   9B00 00 00       reg_BC:		.DW  0 
5133   9B02 00 00       reg_DE:	        .DW  0
5134   9B04 00 00       reg_HL:		.DW  0
5135   9B06 FE 41       reg_SP:		.DW  41FEh 
5136   9B08 2D 40       reg_PC:		.DW  402Dh 
5137   9B0A             
5138   9B0A             REG_ASCII_LAYOUT:			; DATA XREF: SHOW_REGS+32↑o
5139   9B0A 495820204959		.DB  "IX  IY ",80h                 
5139   9B10 2080
5140   9B12 414627204243                .DB  "AF",27h," BC",27h,80h
5140   9B18 2780
5141   9B1A 44452720484C                .DB  "DE",27h," HL",27h,80h
5141   9B20 2780
5142   9B22 414620204243                .DB  "AF  BC ",80h
5142   9B28 2080
5143   9B2A 44452020484C                .DB  "DE  HL ",80h
5143   9B30 2080
5144   9B32 535020205043                .DB  "SP  PC ",80h,80h
5144   9B38 208080
5145   9B3B             
5146   9B3B 00 00       BREAKPOINTS:    .DW  0                    ; DATA XREF: GET_COMMAND+5A7↑o
5147   9B3D                                                     ; GET_COMMAND+5BF↑o ...
5148   9B3D                                                     ; 9 breakpoints (9 x 2 byte addresses)
5149   9B3D 00 00                       .DW  0
5150   9B3F 00 00                       .DW  0
5151   9B41 00 00                       .DW  0
5152   9B43 00 00                       .DW  0
5153   9B45 00 00                       .DW  0
5154   9B47 00 00                       .DW  0
5155   9B49 00 00                       .DW  0
5156   9B4B 00 00                       .DW  0
5157   9B4D 00          CODE_SAVE:      .DB  0                    ; DATA XREF: LOAD_BREAKPOINTS+5↑o
5158   9B4E                                                     ; RESTORE_BREAKPOINTS+5↑o
5159   9B4E 00                          .DB  0
5160   9B4F 00                          .DB  0
5161   9B50 00                          .DB  0
5162   9B51 00                          .DB  0
5163   9B52 00                          .DB  0
5164   9B53 00                          .DB  0
5165   9B54 00                          .DB  0
5166   9B55 00                          .DB  0
5167   9B56 00                          .DB  0
5168   9B57 00                          .DB  0
5169   9B58 00                          .DB  0
5170   9B59 00                          .DB  0
5171   9B5A 00                          .DB  0
5172   9B5B 00                          .DB  0
5173   9B5C 00                          .DB  0
5174   9B5D 00                          .DB  0
5175   9B5E 00                          .DB  0
5176   9B5F 00                          .DB  0
5177   9B60 00                          .DB  0
5178   9B61 00                          .DB  0
5179   9B62 00                          .DB  0
5180   9B63 00                          .DB  0
5181   9B64 00                          .DB  0
5182   9B65 00                          .DB  0
5183   9B66 00                          .DB  0
5184   9B67 00                          .DB  0
5185   9B68 00          EXEC1:          .DB  0                    ; DATA XREF: SET_EXEC1_to_1+2↑o
5186   9B69                                                     ; copy_EXEC1_to_EXEC2+2↑o ...
5187   9B69 00                          .DB  0
5188   9B6A 00                          .DB  0
5189   9B6B 00                          .DB  0
5190   9B6C 00                          .DB  0
5191   9B6D 00                          .DB  0
5192   9B6E 00                          .DB  0
5193   9B6F 00                          .DB  0
5194   9B70 00                          .DB  0
5195   9B71 00          EXEC2:          .DB  0                    ; DATA XREF: GET_COMMAND+5C2↑o
5196   9B72                                                     ; copy_EXEC1_to_EXEC2+5↑o ...
5197   9B72 00                          .DB  0
5198   9B73 00                          .DB  0
5199   9B74 00                          .DB  0
5200   9B75 00                          .DB  0
5201   9B76 00                          .DB  0
5202   9B77 00                          .DB  0
5203   9B78 00                          .DB  0
5204   9B79 00                          .DB  0
5205   9B7A             
5206   9B7A 532D5A2D312DFLAGS:		.DB  "S-Z-1-H-1-P-N-C-"    ; flags in display format              
5206   9B80 482D312D502D4E2D432D
5207   9B8A             
5208   9B8A 00          byte_7B8A:      .DB  0                    ; DATA XREF: sub_6BD8+11↑w
5209   9B8B                                                     ; sub_6BD8:loc_6BF8↑w ...
5210   9B8B 00          byte_7B8B:      .DB  0                    ; DATA XREF: sub_6BD8+14↑w
5211   9B8C                                                     ; sub_6BD8+39↑w ...
5212   9B8C 00          dis_DISPLAY_FLG:      .DB  0                    ; DATA XREF: RAM:601C↑w
5213   9B8D                                                     ; GET_COMMAND+7↑w ...
5214   9B8D 00          byte_7B8D:      .DB  0                    ; DATA XREF: sub_60FF+27↑r
5215   9B8E                                                     ; GET_COMMAND+854↑r ...
5216   9B8E 00          byte_7B8E:      .DB  0                    ; DATA XREF: sub_60FF:loc_61F7↑r
5217   9B8F                                                     ; sub_6739+2↑w ...
5218   9B8F 00 00       SAVE_CURSOR:      .DW  0                    ; DATA XREF: SHOW_REGS+3↑w
5219   9B91                                                     ; SHOW_REGS+93↑r
5220   9B91 00                          .DB     0
5221   9B92 00 00       word_7B92:      .DW  0                    ; DATA XREF: sub_60FF+108↑w
5222   9B94                                                     ; sub_60FF+115↑r ...
5223   9B94 00 00       word_7B94:      .DW  0                    ; DATA XREF: sub_60FF+3D↑w
5224   9B96                                                     ; sub_60FF+69↑r
5225   9B96 00 00       word_7B96:      .DW  0                    ; DATA XREF: GET_COMMAND+729↑w
5226   9B98                                                     ; GET_COMMAND:loc_67A3↑r ...
5227   9B98 00          byte_7B98:      .DB  0                    ; DATA XREF: GET_COMMAND+770↑r
5228   9B99 00                          .DB  0
5229   9B9A 00                          .DB  0
5230   9B9B 00                          .DB  0
5231   9B9C 00          byte_7B9C:      .DB  0                    ; DATA XREF: GET_COMMAND+75F↑w
5232   9B9D                                                     ; GET_COMMAND+781↑r
5233   9B9D 00 00       word_7B9D:      .DW  0                    ; DATA XREF: GET_COMMAND+765↑w
5234   9B9F                                                     ; GET_COMMAND+76C↑r ...
5235   9B9F 00 00       word_7B9F:      .DW  0                    ; DATA XREF: GET_COMMAND+8FD↑w
5236   9BA1                                                     ; GET_COMMAND:loc_6948↑r ...
5237   9BA1 00 00       word_7BA1:      .DW  0                    ; DATA XREF: GET_COMMAND+906↑w
5238   9BA3                                                     ; GET_COMMAND+911↑r ...
5239   9BA3 00          byte_7BA3:      .DB  0                    ; DATA XREF: GET_COMMAND+83A↑w
5240   9BA4                                                     ; GET_COMMAND+895↑w ...
5241   9BA4 00 00       word_7BA4:      .DW  0                    ; DATA XREF: RAM:BREAKPOINT_RETURN↑w
5242   9BA6                                                     ; RAM:6330↑r
5243   9BA6 00          byte_7BA6:      .DB  0                    ; DATA XREF: SHOW_REGS+22↑w
5244   9BA7                                                     ; SHOW_REGS+2F↑w ...
5245   9BA7 00 00       word_7BA7:      .DW  0                    ; DATA XREF: RAM:6007↑w
5246   9BA9                                                     ; sub_62CC+7↑r ...
5247   9BA9 00 00       NEXT_CHAR_ADD_TM:.DW  0                   ; DATA XREF: RAM:6343↑r
5248   9BAB                                                     ; SHOW_REGS↑r ...
5249   9BAB 00          PRINT_OUT_FLAG: .DB  0                    ; DATA XREF: GET_COMMAND+9B0↑w
5250   9BAC                                                     ; GET_COMMAND+9BE↑w ...
5251   9BAC                                                     ; 1 = out to printer, 0 = no printer output
5252   9BAC 00          byte_7BAC:      .DB  0                    ; DATA XREF: GET_COMMAND+827↑w
5253   9BAD                                                     ; GET_COMMAND+832↑w ...
5254   9BAD 00          byte_7BAD:      .DB  0
5255   9BAE 00                          .DB  0
5256   9BAF 00                          .DB  0
5257   9BB0 00                          .DB  0
5258   9BB1 00                          .DB  0
5259   9BB2 00                          .DB  0
5260   9BB3 00                          .DB  0
5261   9BB4 00          byte_7BB4:      .DB  0                    ; DATA XREF: sub_60FF:loc_612F↑r
5262   9BB5                                                     ; SHOW_REGS+28↑w
5263   9BB5 00          HEX_ASCII_FLAG: .DB  0                    ; DATA XREF: GET_COMMAND:loc_64C2↑w
5264   9BB6                                                     ; GET_COMMAND+4D1↑r ...
5265   9BB6 00          byte_7BB6:      .DB  0                    ; DATA XREF: GET_COMMAND+816↑w
5266   9BB7                                                     ; GET_COMMAND+84E↑r ...
5267   9BB7 00          byte_7BB7:      .DB  0                    ; DATA XREF: RAM:6011↑w
5268   9BB8                                                     ; sub_62CC+D↑r ...
5269   9BB8 00          RESTARTS_STYLE: .DB  0                    ; DATA XREF: sub_60FF+148↑r
5270   9BB9                                                     ; GET_COMMAND+6E7↑r ...
5271   9BB9 00 3C       USER_SCREEN_ptr:.DW  3C00h                ; DATA XREF: sub_62CC+1C↑r
5272   9BBB                                                     ; RAM:635E↑r ...
5273   9BBB                                                     ; ptr to user supplied $400 byte screen area
5274   9BBB 00          KEEP_SCREEN_STATE:.DB  0                  ; DATA XREF: sub_62CC+13↑r
5275   9BBC                                                     ; RAM:6353↑r ...
5276   9BBC                                                     ; 0 = keep screen off, 1 = keep screen on
5277   9BBC 00                          .DB     0
5278   9BBD 00                          .DB     0
5279   9BBE 00                          .DB     0
5280   9BBF 00                          .DB     0
5281   9BC0 00                          .DB     0
5282   9BC1 00                          .DB     0
5283   9BC2 00                          .DB     0
5284   9BC3 00                          .DB     0
5285   9BC4 00                          .DB     0
5286   9BC5 00                          .DB     0
5287   9BC6 00                          .DB     0
5288   9BC7 00                          .DB     0
5289   9BC8 00                          .DB     0
5290   9BC9 00                          .DB     0
5291   9BCA 00                          .DB     0
5292   9BCB 00                          .DB     0
5293   9BCC 00                          .DB     0
5294   9BCD 00                          .DB     0
5295   9BCE 00                          .DB     0
5296   9BCF 00                          .DB     0
5297   9BD0 00                          .DB     0
5298   9BD1 00                          .DB     0
5299   9BD2 00                          .DB     0
5300   9BD3 00                          .DB     0
5301   9BD4 00                          .DB     0
5302   9BD5 00                          .DB     0
5303   9BD6 00                          .DB     0
5304   9BD7 00                          .DB     0
5305   9BD8 00                          .DB     0
5306   9BD9 00                          .DB     0
5307   9BDA 00                          .DB     0
5308   9BDB 00                          .DB     0
5309   9BDC 00                          .DB     0
5310   9BDD 00                          .DB     0
5311   9BDE 00                          .DB     0
5312   9BDF 00                          .DB     0
5313   9BE0 00                          .DB     0
5314   9BE1 00                          .DB     0
5315   9BE2 00                          .DB     0
5316   9BE3 00                          .DB     0
5317   9BE4 00                          .DB     0
5318   9BE5 00                          .DB     0
5319   9BE6 00                          .DB     0
5320   9BE7 00                          .DB     0
5321   9BE8 00                          .DB     0
5322   9BE9 00                          .DB     0
5323   9BEA 00                          .DB     0
5324   9BEB 00                          .DB     0
5325   9BEC 00                          .DB     0
5326   9BED 00                          .DB     0
5327   9BEE 00                          .DB     0
5328   9BEF 00                          .DB     0
5329   9BF0 00                          .DB     0
5330   9BF1 00                          .DB     0
5331   9BF2 00                          .DB     0
5332   9BF3 00                          .DB     0
5333   9BF4 00                          .DB     0
5334   9BF5 00                          .DB     0
5335   9BF6 00                          .DB     0
5336   9BF7 00                          .DB     0
5337   9BF8 00                          .DB     0
5338   9BF9 00                          .DB     0
5339   9BFA 00                          .DB     0
5340   9BFB 00                          .DB     0
5341   9BFC 00                          .DB     0
5342   9BFD 00                          .DB     0
5343   9BFE 00                          .DB     0
5344   9BFF 00                          .DB     0
5345   9C00 00                          .DB     0
5346   9C01 00                          .DB     0
5347   9C02 00                          .DB     0
5348   9C03 00                          .DB     0
5349   9C04 00                          .DB     0
5350   9C05 00                          .DB     0
5351   9C06 00                          .DB     0
5352   9C07 00                          .DB     0
5353   9C08 00                          .DB     0
5354   9C09 00                          .DB     0
5355   9C0A 00                          .DB     0
5356   9C0B 00                          .DB     0
5357   9C0C 00                          .DB     0
5358   9C0D 00                          .DB     0
5359   9C0E 00                          .DB     0
5360   9C0F 00                          .DB     0
5361   9C10 00                          .DB     0
5362   9C11 00                          .DB     0
5363   9C12 00                          .DB     0
5364   9C13 00                          .DB     0
5365   9C14 00                          .DB     0
5366   9C15 00                          .DB     0
5367   9C16 00                          .DB     0
5368   9C17 00                          .DB     0
5369   9C18 00                          .DB     0
5370   9C19 00                          .DB     0
5371   9C1A 00                          .DB     0
5372   9C1B 00                          .DB     0
5373   9C1C 49          a_IXplus:       .DB  'I'               
5374   9C1D                                                    
5375   9C1D 58                          .DB  'X'
5376   9C1E 2B                          .DB  '+'
5377   9C1F 03                          .DB  3
5378   9C20 49          a_IYplus:       .DB  'I'               
5379   9C21 59                          .DB  'Y'
5380   9C22 2B                          .DB  '+'
5381   9C23 03                          .DB  3
5382   9C24 49          a_IX:           .DB  'I'               
5383   9C25 58                          .DB  'X'
5384   9C26 03                          .DB  3
5385   9C27 49          a_IY:           .DB  'I'               
5386   9C28 59                          .DB  'Y'
5387   9C29 03                          .DB  3
5388   9C2A 44          a_DEFB:         .DB  'D'               
5389   9C2B 45                          .DB  'E'
5390   9C2C 46                          .DB  'F'
5391   9C2D 42                          .DB  'B'
5392   9C2E 09                          .DB  9
5393   9C2F 03                          .DB  3
5394   9C30 0A          byte_7C30:	.DB   0Ah
5395   9C31 1A                          .DB   1Ah
5396   9C32 02                          .DB     2
5397   9C33 12                          .DB   12h
5398   9C34 F9                          .DB  0F9h
5399   9C35 EB                          .DB  0EBh
5400   9C36 08                          .DB     8
5401   9C37 D9                          .DB  0D9h
5402   9C38 E3                          .DB  0E3h
5403   9C39 27                          .DB   27h ; '
5404   9C3A 2F                          .DB   2Fh ; /
5405   9C3B 3F                          .DB   3Fh ; ?
5406   9C3C 37                          .DB   37h ; 7
5407   9C3D 00                          .DB     0
5408   9C3E 76                          .DB   76h ; v
5409   9C3F F3                          .DB  0F3h
5410   9C40 FB                          .DB  0FBh
5411   9C41 07                          .DB     7
5412   9C42 17                          .DB   17h
5413   9C43 0F                          .DB   0Fh
5414   9C44 1F                          .DB   1Fh
5415   9C45 57          byte_7C45:	.DB   57h ; W
5416   9C46 5F                          .DB   5Fh ; _
5417   9C47 47                          .DB   47h ; G
5418   9C48 4F                          .DB   4Fh ; O
5419   9C49 A0                          .DB  0A0h
5420   9C4A B0                          .DB  0B0h
5421   9C4B A8                          .DB  0A8h
5422   9C4C B8                          .DB  0B8h
5423   9C4D A1                          .DB  0A1h
5424   9C4E B1                          .DB  0B1h
5425   9C4F A9                          .DB  0A9h
5426   9C50 B9                          .DB  0B9h
5427   9C51 44                          .DB   44h ; D
5428   9C52 46                          .DB   46h ; F
5429   9C53 56                          .DB   56h ; V
5430   9C54 5E                          .DB   5Eh ; ^
5431   9C55 6F                          .DB   6Fh ; o
5432   9C56 67                          .DB   67h ; g
5433   9C57 A2                          .DB  0A2h
5434   9C58 B2                          .DB  0B2h
5435   9C59 AA                          .DB  0AAh
5436   9C5A BA                          .DB  0BAh
5437   9C5B A3                          .DB  0A3h
5438   9C5C B3                          .DB  0B3h
5439   9C5D AB                          .DB  0ABh
5440   9C5E BB                          .DB  0BBh
5441   9C5F 70                          .DB   70h ; p
5442   9C60 71                          .DB   71h ; q
5443   9C61             
5444   9C61 42434445484Cbyte_7C61:	.db "BCDEHLAF"
5444   9C67 4146
5445   9C69             
5446   9C69 42434445484Cbyte_7C69:	.db "BCDEHLSPBCDEIXSPBCDEIYSP"
5446   9C6F 535042434445495853504243444549595350
5447   9C81             
5448   9C81 4E5A005A4E43byte_7C81:	.db "NZ",0,"ZNC",0,"CPOPE",0,'P',0,'M'
5448   9C87 0043504F50450050004D
5449   9C91             
5450   9C91 4C 44 09 03 byte_7C91:	.DB  "LD",9,3
5451   9C95             
5452   9C95 28484C2903  HL_ascii:       .DB  "(HL)",3
5453   9C9A                             
5454   9C9A 4C4409412C03byte_7C9A:	.DB   "LD",9,"A,",3
5455   9CA0             
5456   9CA0 29 2C 41 03 byte_7CA0:	.DB   "),A",3
5457   9CA4 4C4409484C2C                .DB   "LD",9,"HL,",3
5457   9CAA 03
5458   9CAB 2C 48 4C 03 		.DB   ",HL",3
5459   9CAF             
5460   9CAF 505553480903byte_7CAF:	.DB   "PUSH",9,3
5461   9CB5 504F500903  byte_7CB5:	.DB   "POP",9,3
5462   9CBA 41444409412Cbyte_7CBA:	.DB   "ADD",9,"A,",3
5462   9CC0 03
5463   9CC1 494E430903  byte_7CC1:	.DB   "INC",9,3
5464   9CC6 41444409484C                .DB   "ADD",9,"HL,",3
5464   9CCC 2C03
5465   9CCE 4445430903  byte_7CCE:	.DB   "DEC",9,3
5466   9CD3             
5467   9CD3 4A 50 09 03 byte_7CD3:	.DB   "JP",9,3
5468   9CD7             
5469   9CD7 4A 52 09 03 byte_7CD7:	.DB   "JR",9,3
5470   9CDB             
5471   9CDB 4A5209432C03byte_7CDB:	.DB   "JR",9,"C,",3
5472   9CE1             
5473   9CE1 4A52094E432Cbyte_7CE1:	.DB   "JR",9,"NC,",3
5473   9CE7 03
5474   9CE8             
5475   9CE8 4A52095A2C03byte_7CE8:	.DB   "JR",9,"Z,",3
5476   9CEE             
5477   9CEE 4A52094E5A2Cbyte_7CEE:	.DB   "JR",9,"NZ,",3
5477   9CF4 03
5478   9CF5             
5479   9CF5 444A4E5A0903byte_7CF5:	.DB   "DJNZ",9,3
5480   9CFB 43414C4C0903byte_7CFB:	.DB   "CALL",9,3
5481   9D01 5245540903  byte_7D01:	.DB   "RET",9,3
5482   9D06 5253540903  byte_7D06:	.DB   "RST",9,3
5483   9D0B 494E09412C28byte_7D0B:	.DB   "IN",9,"A,(",3
5483   9D11 03
5484   9D12 4F5554092803byte_7D12:	.DB   "OUT",9,'(',3
5485   9D18 41444309412Cbyte_7D18:	.DB   "ADC",9,"A,",3
5485   9D1E 03
5486   9D1F 5355420903  byte_7D1F:	.DB   "SUB",9,3
5487   9D24 53424309412Cbyte_7D24:	.DB   "SBC",9,"A,",3
5487   9D2A 03
5488   9D2B 414E440903  byte_7D2B:	.DB   "AND",9,3
5489   9D30 4F 52 09 03 byte_7D30:	.DB   "OR",9,3
5490   9D34 584F520903  byte_7D34:	.DB   "XOR",9,3
5491   9D39 43 50 09 03 byte_7D39:	.DB   "CP",9,3
5492   9D3D 524C430903  byte_7D3D:	.DB   "RLC",9,3
5493   9D42 52 4C 09 03 byte_7D42:	.DB   "RL",9,3
5494   9D46 5252430903  byte_7D46:	.DB   "RRC",9,3
5495   9D4B 52 52 09 03 byte_7D4B:	.DB   "RR",9,3
5496   9D4F 534C410903  byte_7D4F:	.DB   "SLA",9,3
5497   9D54 53524C0903  byte_7D54:	.DB   "SRL",9,3
5498   9D59 5352410903  byte_7D59:	.DB   "SRA",9,3
5499   9D5E 534C530903  byte_7D5E:	.DB   "SLS",9,3
5500   9D63 4249540903  byte_7D63:	.DB   "BIT",9,3
5501   9D68 5345540903  byte_7D68:	.DB   "SET",9,3
5502   9D6D 5245530903  byte_7D6D:	.DB   "RES",9,3
5503   9D72 41444309484Cbyte_7D72:	.DB   "ADC",9,"HL,",3
5503   9D78 2C03
5504   9D7A 53424309484Cbyte_7D7A:	.DB   "SBC",9,"HL,",3
5504   9D80 2C03
5505   9D82 5245544903  byte_7D82:	.DB   "RETI",3
5506   9D87 5245544E03  byte_7D87:	.DB   "RETN",3
5507   9D8C 49 4E 09 03 byte_7D8C:	.DB   "IN",9,3
5508   9D90 2843290903  byte_7D90:	.DB   "(C)",9,3
5509   9D95 4F5554092843byte_7D95:	.DB   "OUT",9,"(C),",3
5509   9D9B 292C03
5510   9D9E 4C440953502Cbyte_7D9E:	.DB   "LD",9,"SP,",3
5510   9DA4 03
5511   9DA5 455809285350byte_7DA5:	.DB   "EX",9,"(SP),",3
5511   9DAB 292C03
5512   9DAE 4144440903  byte_7DAE:	.DB   "ADD",9,3
5513   9DB3 4C440928484C		.DB   "LD",9,"(HL),"
5513   9DB9 292C
5514   9DBB                             
5515   9DBB 03          byte_7DBB:	.DB     3
5516   9DBC                             
5517   9DBC 4C4409412C28		.DB   "LD",9,"A,(BC)",3
5517   9DC2 42432903
5518   9DC6 4C4409412C28                .DB   "LD",9,"A,(DE)",3
5518   9DCC 44452903
5519   9DD0 4C4409284243		.DB   "LD",9,"(BC),A",3
5519   9DD6 292C4103
5520   9DDA 4C4409284445		.DB   "LD",9,"(DE),A",3
5520   9DE0 292C4103
5521   9DE4 4C440953502C		.DB   "LD",9,"SP,HL",3
5521   9DEA 484C03
5522   9DED 45580944452C		.DB   "EX",9,"DE,HL",3
5522   9DF3 484C03
5523   9DF6 45580941462C		.DB   "EX",9,"AF,AF",27h,3
5523   9DFC 41462703
5524   9E00 45 58 58 03 		.DB  "EXX",3
5525   9E04 455809285350		.DB   "EX",9,"(SP),HL",3
5525   9E0A 292C484C03
5526   9E0F 44 41 41 03 		.DB  "DAA",3
5527   9E13 43 50 4C 03 		.DB  "CPL",3
5528   9E17 43 43 46 03 		.DB  "CCF",3
5529   9E1B 53 43 46 03 		.DB  "SCF",3
5530   9E1F 4E 4F 50 03 		.DB  "NOP",3
5531   9E23 48414C5403  		.DB  "HALT",3
5532   9E28 44 49 03    		.DB  "DI",3
5533   9E2B 45 49 03    		.DB  "EI",3
5534   9E2E 524C434103  		.DB  "RLCA",3
5535   9E33 52 4C 41 03 		.DB  "RLA",3
5536   9E37 5252434103  		.DB  "RRCA",3
5537   9E3C 52 52 41    		.DB  "RRA"
5538   9E3F 03          byte_7E3F:	.DB     3
5539   9E40             
5540   9E40 4C4409412C49		.DB   "LD",9,"A,I",3
5540   9E46 03
5541   9E47 4C4409412C52		.DB   "LD",9,"A,R",3
5541   9E4D 03
5542   9E4E 4C4409492C41		.DB   "LD",9,"I,A",3
5542   9E54 03
5543   9E55 4C4409522C41		.DB   "LD",9,"R,A",3
5543   9E5B 03
5544   9E5C             
5545   9E5C 4C 44 49 03 		.DB  "LDI",3
5546   9E60 4C44495203  		.DB  "LDIR",3
5547   9E65 4C 44 44 03 		.DB  "LDD",3
5548   9E69 4C44445203  		.DB  "LDDR",3
5549   9E6E 43 50 49 03 		.DB  "CPI",3
5550   9E72 4350495203  		.DB  "CPIR",3
5551   9E77 43 50 44 03 		.DB  "CPD",3
5552   9E7B 4350445203  		.DB  "CPDR",3
5553   9E80 4E 45 47 03 		.DB  "NEG",3
5554   9E84             
5555   9E84 494D093003  		.DB   "IM",9,'0',3
5556   9E89 494D093103  		.DB   "IM",9,'1',3
5557   9E8E 494D093203  		.DB   "IM",9,'2',3
5558   9E93             
5559   9E93 52 4C 44 03 		.DB  "RLD",3
5560   9E97 52 52 44 03 		.DB  "RRD",3
5561   9E9B 49 4E 49 03 		.DB  "INI",3
5562   9E9F 494E495203  		.DB  "INIR",3
5563   9EA4 49 4E 44 03 		.DB  "IND",3
5564   9EA8 494E445203  		.DB  "INDR",3
5565   9EAD             
5566   9EAD 4F55544903  		.DB  "OUTI",3
5567   9EB2 4F54495203  		.DB  "OTIR",3
5568   9EB7 4F55544403  		.DB  "OUTD",3
5569   9EBC 4F54445203  		.DB  "OTDR",3
5570   9EC1             
5571   9EC1 494E092D2C28		.DB   "IN",9,"-,(C)",3
5571   9EC7 432903
5572   9ECA 4F5554092843		.DB   "OUT",9,"(C),0",3
5572   9ED0 292C3003
5573   9ED4             
5574   9ED4 00 00       GEN_PTR_16:      .DW  0                
5575   9ED6 00 00       dis_DISASSEM_START:      .DW  0        
5576   9ED8 00 00       dis_NUM_INSTRS:      .DW  0            
5577   9EDA             
5578   9EDA 4F52470903  disORG:         .DB  "ORG",9,3
5579   9EDF             
5580   9EDF 454E440903  disEND:		.DB  "END",9,3
5581   9EE4             
5582   9EE4 00          byte_7EE4:      .DB  0         
5583   9EE5 00 00       word_7EE5:      .DW  0         
5584   9EE7 00 00       word_7EE7:      .DW  0         
5585   9EE9 00          byte_7EE9:      .DB  0         
5586   9EEA 00          byte_7EEA:      .DB  0         
5587   9EEB 00          byte_7EEB:      .DB  0         
5588   9EEC 444F53204552DOS_ERROR:      .DB  "DOS ERROR ",3
5588   9EF2 524F522003
5589   9EF7 544150452045TAPE_ERROR:     .DB  "TAPE ERROR",3 
5589   9EFD 52524F5203
5590   9F02             
5591   9F02 FC          XX_Adjust:      .DB  0FCh                 ; DATA XREF: GET_COMMAND+183B↑o
5592   9F03                                                     ; 26 x  Single Byte instructions requiring adjustment
5593   9F03 F4                          .DB  0F4h
5594   9F04 3A                          .DB  3Ah
5595   9F05 EC                          .DB  0ECh
5596   9F06 E4                          .DB  0E4h
5597   9F07 32                          .DB  32h
5598   9F08 DC                          .DB  0DCh
5599   9F09 D4                          .DB  0D4h
5600   9F0A 01                          .DB  1
5601   9F0B CC                          .DB  0CCh
5602   9F0C C4                          .DB  0C4h
5603   9F0D 11                          .DB  11h
5604   9F0E CD                          .DB  0CDh
5605   9F0F FA                          .DB  0FAh
5606   9F10 21                          .DB  21h
5607   9F11 F2                          .DB  0F2h
5608   9F12 EA                          .DB  0EAh
5609   9F13 31                          .DB  31h
5610   9F14 E2                          .DB  0E2h
5611   9F15 DA                          .DB  0DAh
5612   9F16 2A                          .DB  2Ah
5613   9F17 CA                          .DB  0CAh
5614   9F18 D2                          .DB  0D2h
5615   9F19 22                          .DB  22h
5616   9F1A C2                          .DB  0C2h
5617   9F1B C3                          .DB  0C3h
5618   9F1C 5B          ED_adjust:      .DB  5Bh                  ; DATA XREF: GET_COMMAND+186A↑o
5619   9F1D                                                     ; 8 x  ED XX instructions requiring adjustment
5620   9F1D 4B                          .DB  4Bh
5621   9F1E 7B                          .DB  7Bh
5622   9F1F 6B                          .DB  6Bh
5623   9F20 53                          .DB  53h
5624   9F21 43                          .DB  43h
5625   9F22 73                          .DB  73h
5626   9F23 63                          .DB  63h
5627   9F24                             
5628   9F24 00          TAS_KBD_work_area:	.DB  0
5629   9F25 00                          .DB  0
5630   9F26 00                          .DB  0
5631   9F27 00                          .DB  0
5632   9F28 00                          .DB  0
5633   9F29 00                          .DB  0
5634   9F2A 00                          .DB  0
5635   9F2B 00 00       parm_END:       .DW  0     
5636   9F2D 00 00       parm_START:     .DW  0     
5637   9F2F 00 00       parm_TRANSFER:  .DW  0     
5638   9F31 00 00       parm_OFFSET:    .DW  0     
5639   9F33 00 00       word_7F33:      .DW  0     
5640   9F35 00          KBD_LAST_BYTE:      .DB  0     
5641   9F36 00 00       REPEAT_DELAY:      .DW  0     
5642   9F38 00 00       KBD_LAST_ROW:      .DW  0     
5643   9F3A 00          byte_7F3A:      .DB  0     
5644   9F3B 00 00       word_7F3B:      .DW  0     
5645   9F3D 00          byte_7F3D:      .DB  0     
5646   9F3E             
5647   9F3E             string_buffer:  .BLOCK	32
5648   9F5E             
5649   9F5E             Sector_Buffer:  .BLOCK	256
5650   A05E             
5651   A05E C9          RST28_SAVE:      .DB  0C9h
5652   A05F             		.END
tasm: Number of errors = 0
